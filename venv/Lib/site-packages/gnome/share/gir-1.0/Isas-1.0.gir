<?xml version="1.0"?>
<!-- This file was automatically generated from C sources - DO NOT EDIT!
To affect the contents of this file, edit the original C definitions,
and/or use gtk-doc annotations.  -->
<repository version="1.2"
            xmlns="http://www.gtk.org/introspection/core/1.0"
            xmlns:c="http://www.gtk.org/introspection/c/1.0"
            xmlns:glib="http://www.gtk.org/introspection/glib/1.0">
  <include name="GLib" version="2.0"/>
  <include name="GObject" version="2.0"/>
  <c:include name="libisas/isas-solar.h"/>
  <namespace name="Isas"
             version="1.0"
             shared-library="libisas-0.dll"
             c:identifier-prefixes="Isas"
             c:symbol-prefixes="isas">
    <enumeration name="PvInstallationType" c:type="IsasPvInstallationType">
      <doc xml:space="preserve">Enum values for module installation type.</doc>
      <member name="free"
              value="0"
              c:identifier="ISAS_PV_INSTALLATION_TYPE_FREE">
        <doc xml:space="preserve">+22 deg Celsius</doc>
      </member>
      <member name="roof_big_distance"
              value="1"
              c:identifier="ISAS_PV_INSTALLATION_TYPE_ROOF_BIG_DISTANCE">
        <doc xml:space="preserve">+28 deg Celsius</doc>
      </member>
      <member name="roof_good_airing"
              value="2"
              c:identifier="ISAS_PV_INSTALLATION_TYPE_ROOF_GOOD_AIRING">
        <doc xml:space="preserve">+29 deg Celsius</doc>
      </member>
      <member name="roof_bad_airing"
              value="3"
              c:identifier="ISAS_PV_INSTALLATION_TYPE_ROOF_BAD_AIRING">
        <doc xml:space="preserve">+32 deg Celsius</doc>
      </member>
      <member name="facade_good_airing"
              value="4"
              c:identifier="ISAS_PV_INSTALLATION_TYPE_FACADE_GOOD_AIRING">
        <doc xml:space="preserve">+35 deg Celsius</doc>
      </member>
      <member name="facade_bad_airing"
              value="5"
              c:identifier="ISAS_PV_INSTALLATION_TYPE_FACADE_BAD_AIRING">
        <doc xml:space="preserve">+39 deg Celsius</doc>
      </member>
      <member name="roof_integrated_no_airing"
              value="6"
              c:identifier="ISAS_PV_INSTALLATION_TYPE_ROOF_INTEGRATED_NO_AIRING">
        <doc xml:space="preserve">+43 deg Celsius</doc>
      </member>
      <member name="facade_integrated_no_airing"
              value="7"
              c:identifier="ISAS_PV_INSTALLATION_TYPE_FACADE_INTEGRATED_NO_AIRING">
        <doc xml:space="preserve">+55 deg Celsius</doc>
      </member>
    </enumeration>
    <function name="pv_I_short_circuit" c:identifier="isas_pv_I_short_circuit">
      <doc xml:space="preserve">Calculates the short circuit current (in Ampere)</doc>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve">the short circuit current (in Ampere)</doc>
        <type name="gdouble" c:type="gdouble"/>
      </return-value>
      <parameters>
        <parameter name="I_startvalue" transfer-ownership="none">
          <doc xml:space="preserve">The startvalue for I (needed because numeric newton calculation)</doc>
          <type name="gdouble" c:type="gdouble"/>
        </parameter>
        <parameter name="border_difference" transfer-ownership="none">
          <doc xml:space="preserve">the value to stop the valculation (could be 1E-6 for example)</doc>
          <type name="gdouble" c:type="gdouble"/>
        </parameter>
        <parameter name="m1" transfer-ownership="none">
          <doc xml:space="preserve">diode factor (if you don't know, good Value is 1)</doc>
          <type name="gdouble" c:type="gdouble"/>
        </parameter>
        <parameter name="m2" transfer-ownership="none">
          <doc xml:space="preserve">diode factor (if you don't know, good Value is 2)</doc>
          <type name="gdouble" c:type="gdouble"/>
        </parameter>
        <parameter name="U_T" transfer-ownership="none">
          <doc xml:space="preserve">temperature voltage (in Volt)</doc>
          <type name="gdouble" c:type="gdouble"/>
        </parameter>
        <parameter name="I_Ph" transfer-ownership="none">
          <doc xml:space="preserve">photo current (in Ampere)</doc>
          <type name="gdouble" c:type="gdouble"/>
        </parameter>
        <parameter name="I_S1" transfer-ownership="none">
          <doc xml:space="preserve">saturation current (in Ampere)</doc>
          <type name="gdouble" c:type="gdouble"/>
        </parameter>
        <parameter name="I_S2" transfer-ownership="none">
          <doc xml:space="preserve">saturation current (in Ampere)</doc>
          <type name="gdouble" c:type="gdouble"/>
        </parameter>
        <parameter name="R_S" transfer-ownership="none">
          <doc xml:space="preserve">seriell resistor (in Ohm)</doc>
          <type name="gdouble" c:type="gdouble"/>
        </parameter>
        <parameter name="R_P" transfer-ownership="none">
          <doc xml:space="preserve">parallel resistor (in Ohm)</doc>
          <type name="gdouble" c:type="gdouble"/>
        </parameter>
      </parameters>
    </function>
    <function name="pv_U_open_circuit" c:identifier="isas_pv_U_open_circuit">
      <doc xml:space="preserve">Calculate the open circuit voltage (in Volt)</doc>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve">the open circuit voltage (in Volt)</doc>
        <type name="gdouble" c:type="gdouble"/>
      </return-value>
      <parameters>
        <parameter name="U_startvalue" transfer-ownership="none">
          <doc xml:space="preserve">the startvalue for U (needed because numeric newton calculation)</doc>
          <type name="gdouble" c:type="gdouble"/>
        </parameter>
        <parameter name="border_difference" transfer-ownership="none">
          <doc xml:space="preserve">the value to stop the valculation (could be 1E-6 for example)</doc>
          <type name="gdouble" c:type="gdouble"/>
        </parameter>
        <parameter name="m1" transfer-ownership="none">
          <doc xml:space="preserve">diode factor (if you don't know, good Value is 1)</doc>
          <type name="gdouble" c:type="gdouble"/>
        </parameter>
        <parameter name="m2" transfer-ownership="none">
          <doc xml:space="preserve">diode factor (if you don't know, good Value is 2)</doc>
          <type name="gdouble" c:type="gdouble"/>
        </parameter>
        <parameter name="U_T" transfer-ownership="none">
          <doc xml:space="preserve">temperature voltage (in Volt)</doc>
          <type name="gdouble" c:type="gdouble"/>
        </parameter>
        <parameter name="I_Ph" transfer-ownership="none">
          <doc xml:space="preserve">photo current (in Ampere)</doc>
          <type name="gdouble" c:type="gdouble"/>
        </parameter>
        <parameter name="I_S1" transfer-ownership="none">
          <doc xml:space="preserve">saturation current (in Ampere)</doc>
          <type name="gdouble" c:type="gdouble"/>
        </parameter>
        <parameter name="I_S2" transfer-ownership="none">
          <doc xml:space="preserve">saturation current (in Ampere)</doc>
          <type name="gdouble" c:type="gdouble"/>
        </parameter>
        <parameter name="R_S" transfer-ownership="none">
          <doc xml:space="preserve">seriell resistor (in Ohm)</doc>
          <type name="gdouble" c:type="gdouble"/>
        </parameter>
        <parameter name="R_P" transfer-ownership="none">
          <doc xml:space="preserve">parallel resistor (in Ohm)</doc>
          <type name="gdouble" c:type="gdouble"/>
        </parameter>
      </parameters>
    </function>
    <function name="pv_current_short_circuit_dep_temp"
              c:identifier="isas_pv_current_short_circuit_dep_temp">
      <doc xml:space="preserve">Calculates the short circuit current for a given temperature and a given irradiance for a PV module.
see: Volker Quasching, Regenative Energiesysteme, Auflage 5, Seite 171</doc>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve">the short circuit current for the new temperature with 1000 W/(m*m) irradiance</doc>
        <type name="gdouble" c:type="gdouble"/>
      </return-value>
      <parameters>
        <parameter name="I_sc_stc" transfer-ownership="none">
          <doc xml:space="preserve">the short circuit current for standard test conditions (STC)</doc>
          <type name="gdouble" c:type="gdouble"/>
        </parameter>
        <parameter name="I_sc_temp_coefficient" transfer-ownership="none">
          <doc xml:space="preserve">temperature coefficient for the short circuit current in %/K (Percent / Kelvin). Normally the the coefficient is possitive.</doc>
          <type name="gdouble" c:type="gdouble"/>
        </parameter>
        <parameter name="module_temperature" transfer-ownership="none">
          <doc xml:space="preserve">the temperature of the pv module (in deg celsius)</doc>
          <type name="gdouble" c:type="gdouble"/>
        </parameter>
        <parameter name="E_glob_tilt" transfer-ownership="none">
          <doc xml:space="preserve">irradiance in W/(m*m)</doc>
          <type name="gdouble" c:type="gdouble"/>
        </parameter>
      </parameters>
    </function>
    <function name="pv_module_characteristic_curve"
              c:identifier="isas_pv_module_characteristic_curve">
      <doc xml:space="preserve">Get the characteristic Curve for the SolarCell with numeric newton calculation. Caller must free #res_U and #res_I with g_array_free().
&lt;link linkend="IsasPVTwoDiodeModel"&gt;
 &lt;inlinegraphic fileref="two-diode-model.png" format="PNG" /&gt;
&lt;/link&gt;

Example values are: m1:1 ; m2:2 ; U_T:0.0257 V ; I_Ph:3.17 A ; I_S1:0.00000000034 A ;
                    I_S2:0.0000077 ; R_S:0.015 Ohm ; R_P:155 Ohm</doc>
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="U_steps" transfer-ownership="none">
          <doc xml:space="preserve">Number of steps from U=0V to U=U_L ()</doc>
          <type name="gint" c:type="gint"/>
        </parameter>
        <parameter name="U_startvalue" transfer-ownership="none">
          <doc xml:space="preserve">the startvalue for U (needed because numeric newton calculation)</doc>
          <type name="gdouble" c:type="gdouble"/>
        </parameter>
        <parameter name="border_difference" transfer-ownership="none">
          <doc xml:space="preserve">the value to stop the calculation (could be 1E-6 for example)</doc>
          <type name="gdouble" c:type="gdouble"/>
        </parameter>
        <parameter name="m1" transfer-ownership="none">
          <doc xml:space="preserve">diode factor for D1 (if you don't know, use Value 1)</doc>
          <type name="gdouble" c:type="gdouble"/>
        </parameter>
        <parameter name="m2" transfer-ownership="none">
          <doc xml:space="preserve">diode factor for D2 (if you don't know, use Value 2)</doc>
          <type name="gdouble" c:type="gdouble"/>
        </parameter>
        <parameter name="U_T" transfer-ownership="none">
          <doc xml:space="preserve">temperature voltage (in Volt)</doc>
          <type name="gdouble" c:type="gdouble"/>
        </parameter>
        <parameter name="I_Ph" transfer-ownership="none">
          <doc xml:space="preserve">photo current (in Ampere)</doc>
          <type name="gdouble" c:type="gdouble"/>
        </parameter>
        <parameter name="I_S1" transfer-ownership="none">
          <doc xml:space="preserve">saturation current (in Ampere)</doc>
          <type name="gdouble" c:type="gdouble"/>
        </parameter>
        <parameter name="I_S2" transfer-ownership="none">
          <doc xml:space="preserve">saturation current (in Ampere)</doc>
          <type name="gdouble" c:type="gdouble"/>
        </parameter>
        <parameter name="R_S" transfer-ownership="none">
          <doc xml:space="preserve">seriell resistor (in Ohm)</doc>
          <type name="gdouble" c:type="gdouble"/>
        </parameter>
        <parameter name="R_P" transfer-ownership="none">
          <doc xml:space="preserve">parallel resistor (in Ohm)</doc>
          <type name="gdouble" c:type="gdouble"/>
        </parameter>
        <parameter name="res_U"
                   direction="out"
                   caller-allocates="0"
                   transfer-ownership="full">
          <doc xml:space="preserve">array with voltage values</doc>
          <array zero-terminated="0" name="GLib.Array" c:type="GArray**">
            <type name="gdouble"/>
          </array>
        </parameter>
        <parameter name="res_I"
                   direction="out"
                   caller-allocates="0"
                   transfer-ownership="full">
          <doc xml:space="preserve">array with current values</doc>
          <array zero-terminated="0" name="GLib.Array" c:type="GArray**">
            <type name="gdouble"/>
          </array>
        </parameter>
        <parameter name="U_MPP"
                   direction="out"
                   caller-allocates="0"
                   transfer-ownership="full">
          <doc xml:space="preserve">voltage maximum power point</doc>
          <type name="gdouble" c:type="gdouble*"/>
        </parameter>
        <parameter name="I_MPP"
                   direction="out"
                   caller-allocates="0"
                   transfer-ownership="full">
          <doc xml:space="preserve">current maximum power point</doc>
          <type name="gdouble" c:type="gdouble*"/>
        </parameter>
      </parameters>
    </function>
    <function name="pv_module_temperature"
              c:identifier="isas_pv_module_temperature">
      <doc xml:space="preserve">Simple approximation of the pv module temperature depending on the irradiation and ambient temperature
Montageart                                          Temperaturerhöhung ∆θ
0: Völlig freie Auständerung                        22 °C
1: Auf dem Dach, großer Abstand                     28 °C
2: Auf/im Dach, gute Hinterlüftung                  29 °C
3: Auf/im Dach, schlechte Hinterlüftung             32 °C
4: Auf/in Fassade, gute Hinterlüftung               35 °C
5: Auf/in Fassade, schlechte Hinterlüftung          39 °C
6: Dachintegration, ohne Hinterlüftung              43 °C
7: Fassadenintegration, ohne Hinterlüftung          55 °C</doc>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve">the module temperature (in deg Celsius)
See: Lecture from Volker Quaschning, FHTW Berlin, Bachelor Renewable Energy Systems, 2005

&lt;note&gt;
&lt;para&gt;
  This is a very simple approximation. Use with care!
&lt;/para&gt;
&lt;/note&gt;</doc>
        <type name="gdouble" c:type="gdouble"/>
      </return-value>
      <parameters>
        <parameter name="ambient_temp" transfer-ownership="none">
          <doc xml:space="preserve">the ambient temperature (in deg Celsius)</doc>
          <type name="gdouble" c:type="gdouble"/>
        </parameter>
        <parameter name="E_glob_tilt" transfer-ownership="none">
          <doc xml:space="preserve">the global irradiation in W/(m*m)</doc>
          <type name="gdouble" c:type="gdouble"/>
        </parameter>
        <parameter name="installation_type" transfer-ownership="none">
          <doc xml:space="preserve">The Installation type of the pv module</doc>
          <type name="PvInstallationType" c:type="IsasPvInstallationType"/>
        </parameter>
      </parameters>
    </function>
    <function name="pv_newton_I" c:identifier="isas_pv_newton_I">
      <doc xml:space="preserve">Calculates the current(in Ampere) by a given Voltage (in Volt)</doc>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve">the voltage (in Volt) for the given current I_v</doc>
        <type name="gdouble" c:type="gdouble"/>
      </return-value>
      <parameters>
        <parameter name="U_v" transfer-ownership="none">
          <doc xml:space="preserve">the given voltage (in Volt)</doc>
          <type name="gdouble" c:type="gdouble"/>
        </parameter>
        <parameter name="I_startvalue" transfer-ownership="none">
          <doc xml:space="preserve">the startvalue for I (needed because numeric newton calculation)</doc>
          <type name="gdouble" c:type="gdouble"/>
        </parameter>
        <parameter name="border_difference" transfer-ownership="none">
          <doc xml:space="preserve">the value to stop the calculation (could be 1E-6 for example)</doc>
          <type name="gdouble" c:type="gdouble"/>
        </parameter>
        <parameter name="m1" transfer-ownership="none">
          <doc xml:space="preserve">diode factor (if you don't know, good Value is 1)</doc>
          <type name="gdouble" c:type="gdouble"/>
        </parameter>
        <parameter name="m2" transfer-ownership="none">
          <doc xml:space="preserve">diode factor (if you don't know, good Value is 2)</doc>
          <type name="gdouble" c:type="gdouble"/>
        </parameter>
        <parameter name="U_T" transfer-ownership="none">
          <doc xml:space="preserve">temperature voltage (in Volt)</doc>
          <type name="gdouble" c:type="gdouble"/>
        </parameter>
        <parameter name="I_Ph" transfer-ownership="none">
          <doc xml:space="preserve">photo current (in Ampere)</doc>
          <type name="gdouble" c:type="gdouble"/>
        </parameter>
        <parameter name="I_S1" transfer-ownership="none">
          <doc xml:space="preserve">saturation current (in Ampere)</doc>
          <type name="gdouble" c:type="gdouble"/>
        </parameter>
        <parameter name="I_S2" transfer-ownership="none">
          <doc xml:space="preserve">saturation current (in Ampere)</doc>
          <type name="gdouble" c:type="gdouble"/>
        </parameter>
        <parameter name="R_S" transfer-ownership="none">
          <doc xml:space="preserve">seriell resistor (in Ohm)</doc>
          <type name="gdouble" c:type="gdouble"/>
        </parameter>
        <parameter name="R_P" transfer-ownership="none">
          <doc xml:space="preserve">parallel resistor (in Ohm)</doc>
          <type name="gdouble" c:type="gdouble"/>
        </parameter>
      </parameters>
    </function>
    <function name="pv_newton_U" c:identifier="isas_pv_newton_U">
      <doc xml:space="preserve">Calculates the voltage (in Volt) by a given current (in Ampere)</doc>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve">the voltage (in Volt) for the given current I_v</doc>
        <type name="gdouble" c:type="gdouble"/>
      </return-value>
      <parameters>
        <parameter name="U_startvalue" transfer-ownership="none">
          <doc xml:space="preserve">the start value for U (needed because numeric newton calculation)</doc>
          <type name="gdouble" c:type="gdouble"/>
        </parameter>
        <parameter name="I_v" transfer-ownership="none">
          <doc xml:space="preserve">the given current (in Ampere)</doc>
          <type name="gdouble" c:type="gdouble"/>
        </parameter>
        <parameter name="border_difference" transfer-ownership="none">
          <doc xml:space="preserve">the value to stop the calculation (could be 1E-6 for example)</doc>
          <type name="gdouble" c:type="gdouble"/>
        </parameter>
        <parameter name="m1" transfer-ownership="none">
          <doc xml:space="preserve">diode factor (if you don't know, good Value is 1)</doc>
          <type name="gdouble" c:type="gdouble"/>
        </parameter>
        <parameter name="m2" transfer-ownership="none">
          <doc xml:space="preserve">diode factor (if you don't know, good Value is 2)</doc>
          <type name="gdouble" c:type="gdouble"/>
        </parameter>
        <parameter name="U_T" transfer-ownership="none">
          <doc xml:space="preserve">temperature voltage (in Volt)</doc>
          <type name="gdouble" c:type="gdouble"/>
        </parameter>
        <parameter name="I_Ph" transfer-ownership="none">
          <doc xml:space="preserve">photo current (in Ampere)</doc>
          <type name="gdouble" c:type="gdouble"/>
        </parameter>
        <parameter name="I_S1" transfer-ownership="none">
          <doc xml:space="preserve">saturation current (in Ampere)</doc>
          <type name="gdouble" c:type="gdouble"/>
        </parameter>
        <parameter name="I_S2" transfer-ownership="none">
          <doc xml:space="preserve">saturation current (in Ampere)</doc>
          <type name="gdouble" c:type="gdouble"/>
        </parameter>
        <parameter name="R_S" transfer-ownership="none">
          <doc xml:space="preserve">seriell resistor (in Ohm)</doc>
          <type name="gdouble" c:type="gdouble"/>
        </parameter>
        <parameter name="R_P" transfer-ownership="none">
          <doc xml:space="preserve">parallel resistor (in Ohm)</doc>
          <type name="gdouble" c:type="gdouble"/>
        </parameter>
      </parameters>
    </function>
    <function name="pv_power_dep_temp" c:identifier="isas_pv_power_dep_temp">
      <doc xml:space="preserve">Calculates the Power (in Watt) for the given temperature from a PV module.

@return The Power (in Watt) for the Modul by the given Temperature with 1000 W/(m*m) irradiance</doc>
      <return-value transfer-ownership="none">
        <type name="gdouble" c:type="gdouble"/>
      </return-value>
      <parameters>
        <parameter name="P_mpp_stc" transfer-ownership="none">
          <doc xml:space="preserve">the power (in Maximum Power Point) for standard test conditions (STC)</doc>
          <type name="gdouble" c:type="gdouble"/>
        </parameter>
        <parameter name="P_temp_coefficient" transfer-ownership="none">
          <doc xml:space="preserve">the temperature coefficient for the module in %/K (Percent / Kelvin)</doc>
          <type name="gdouble" c:type="gdouble"/>
        </parameter>
        <parameter name="module_temperature" transfer-ownership="none">
          <doc xml:space="preserve">the temperature of the module (in deg celsius)</doc>
          <type name="gdouble" c:type="gdouble"/>
        </parameter>
        <parameter name="E_glob_tilt" transfer-ownership="none">
          <doc xml:space="preserve">irradiance in W/(m*m)</doc>
          <type name="gdouble" c:type="gdouble"/>
        </parameter>
      </parameters>
    </function>
    <function name="pv_voltage_open_circuit_dep_temp"
              c:identifier="isas_pv_voltage_open_circuit_dep_temp">
      <doc xml:space="preserve">Calculates the open circuit voltage for a given temperature for a PV module.
See: Volker Quasching, Regenative Energiesysteme, Auflage 5, Seite 171</doc>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve">the open circuit voltage for the new temperature with 1000 W/(m*m) irradiance</doc>
        <type name="gdouble" c:type="gdouble"/>
      </return-value>
      <parameters>
        <parameter name="U_oc_stc" transfer-ownership="none">
          <doc xml:space="preserve">the open circuit voltage for standard test conditions (STC)</doc>
          <type name="gdouble" c:type="gdouble"/>
        </parameter>
        <parameter name="U_oc_temp_coefficient" transfer-ownership="none">
          <doc xml:space="preserve">temperature coefficient for the open vircuit voltage in %/K (Percent / Kelvin). Normally the coefficient is negative.</doc>
          <type name="gdouble" c:type="gdouble"/>
        </parameter>
        <parameter name="module_temperature" transfer-ownership="none">
          <doc xml:space="preserve">the temperature of the pv module (in deg celsius)</doc>
          <type name="gdouble" c:type="gdouble"/>
        </parameter>
        <parameter name="E_glob_tilt" transfer-ownership="none">
          <doc xml:space="preserve">irradiance in W/(m*m)</doc>
          <type name="gdouble" c:type="gdouble"/>
        </parameter>
      </parameters>
    </function>
    <function name="sky_brightness" c:identifier="isas_sky_brightness">
      <doc xml:space="preserve">Calculate the skybrightness index with the model from Perez
See: http://volker-quaschning.de/downloads/abschattungsverluste.pdf or "Solar Energie Vol. 50, Number 3, March 1993, pp. 234-245"</doc>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve">The sky brightness</doc>
        <type name="gdouble" c:type="gdouble"/>
      </return-value>
      <parameters>
        <parameter name="solarconstant" transfer-ownership="none">
          <doc xml:space="preserve">the solar constant (in W/(m*m))</doc>
          <type name="gdouble" c:type="gdouble"/>
        </parameter>
        <parameter name="sun_height" transfer-ownership="none">
          <doc xml:space="preserve">sun height in degrees (0 &lt; point_height &lt;= 90 ; 90 degrees is zenith)</doc>
          <type name="gdouble" c:type="gdouble"/>
        </parameter>
        <parameter name="E_diffuse_hor" transfer-ownership="none">
          <doc xml:space="preserve">diffuse irradiation on the horizontal plain (in W/(m*m) )</doc>
          <type name="gdouble" c:type="gdouble"/>
        </parameter>
      </parameters>
    </function>
    <function name="sky_clearness" c:identifier="isas_sky_clearness">
      <doc xml:space="preserve">Calculate the skyclearness index with the modem from Perez.
see: http://volker-quaschning.de/downloads/abschattungsverluste.pdf or "Solar Energie Vol. 50, Number 3, March 1993, pp. 234-245"</doc>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve">the sky_clearness index</doc>
        <type name="gdouble" c:type="gdouble"/>
      </return-value>
      <parameters>
        <parameter name="sun_height" transfer-ownership="none">
          <doc xml:space="preserve">sun height in degrees (0 &lt; point_height &lt;= 90 ; 90 degrees is zenith)</doc>
          <type name="gdouble" c:type="gdouble"/>
        </parameter>
        <parameter name="E_direct_hor" transfer-ownership="none">
          <doc xml:space="preserve">direct irradiation on the horizontal plain (in W/(m*m) )</doc>
          <type name="gdouble" c:type="gdouble"/>
        </parameter>
        <parameter name="E_diffuse_hor" transfer-ownership="none">
          <doc xml:space="preserve">diffuse irradiation on the horizontal plain (in W/(m*m) )</doc>
          <type name="gdouble" c:type="gdouble"/>
        </parameter>
      </parameters>
    </function>
    <function name="sky_perez_parameter2"
              c:identifier="isas_sky_perez_parameter2">
      <doc xml:space="preserve">Calc the Perez-Parameter (2. from 3 Parameters) needed for the zenith luminance
see See http://volker-quaschning.de/downloads/abschattungsverluste.pdf or "Solar Energie Vol. 50, Number 3, March 1993, pp. 234-245"</doc>
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="sky_clearness_index" transfer-ownership="none">
          <doc xml:space="preserve">the sky clearness index</doc>
          <type name="gdouble" c:type="gdouble"/>
        </parameter>
        <parameter name="a2"
                   direction="out"
                   caller-allocates="0"
                   transfer-ownership="full">
          <doc xml:space="preserve">parameter a2</doc>
          <type name="gdouble" c:type="gdouble*"/>
        </parameter>
        <parameter name="b2"
                   direction="out"
                   caller-allocates="0"
                   transfer-ownership="full">
          <doc xml:space="preserve">parameter b2</doc>
          <type name="gdouble" c:type="gdouble*"/>
        </parameter>
        <parameter name="c2"
                   direction="out"
                   caller-allocates="0"
                   transfer-ownership="full">
          <doc xml:space="preserve">parameter c2</doc>
          <type name="gdouble" c:type="gdouble*"/>
        </parameter>
        <parameter name="d2"
                   direction="out"
                   caller-allocates="0"
                   transfer-ownership="full">
          <doc xml:space="preserve">parameter d2</doc>
          <type name="gdouble" c:type="gdouble*"/>
        </parameter>
      </parameters>
    </function>
    <function name="sky_perez_parameter3"
              c:identifier="isas_sky_perez_parameter3">
      <doc xml:space="preserve">Calc the Perez-Parameter (3. from 3 Parameters)
See: http://volker-quaschning.de/downloads/abschattungsverluste.pdf or "Solar Energie Vol. 50, Number 3, March 1993, pp. 234-245"</doc>
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="sun_height" transfer-ownership="none">
          <doc xml:space="preserve">sun height in degrees (0 &lt; point_height &lt;= 90 ; 90 degrees is zenith)</doc>
          <type name="gdouble" c:type="gdouble"/>
        </parameter>
        <parameter name="sky_clearness_index" transfer-ownership="none">
          <doc xml:space="preserve">Index of sky clearness</doc>
          <type name="gdouble" c:type="gdouble"/>
        </parameter>
        <parameter name="sky_brightness_index" transfer-ownership="none">
          <doc xml:space="preserve">Index for sky brightness</doc>
          <type name="gdouble" c:type="gdouble"/>
        </parameter>
        <parameter name="a3"
                   direction="out"
                   caller-allocates="0"
                   transfer-ownership="full">
          <doc xml:space="preserve">parameter a3</doc>
          <type name="gdouble" c:type="gdouble*"/>
        </parameter>
        <parameter name="b3"
                   direction="out"
                   caller-allocates="0"
                   transfer-ownership="full">
          <doc xml:space="preserve">parameter b3</doc>
          <type name="gdouble" c:type="gdouble*"/>
        </parameter>
        <parameter name="c3"
                   direction="out"
                   caller-allocates="0"
                   transfer-ownership="full">
          <doc xml:space="preserve">parameter c3</doc>
          <type name="gdouble" c:type="gdouble*"/>
        </parameter>
        <parameter name="d3"
                   direction="out"
                   caller-allocates="0"
                   transfer-ownership="full">
          <doc xml:space="preserve">parameter d3</doc>
          <type name="gdouble" c:type="gdouble*"/>
        </parameter>
        <parameter name="e3"
                   direction="out"
                   caller-allocates="0"
                   transfer-ownership="full">
          <doc xml:space="preserve">parameter e3</doc>
          <type name="gdouble" c:type="gdouble*"/>
        </parameter>
      </parameters>
    </function>
    <function name="sky_point_luminance"
              c:identifier="isas_sky_point_luminance">
      <doc xml:space="preserve">Calc the Luminance from one specific Skypoint</doc>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve">the luminance for the given sky point</doc>
        <type name="gdouble" c:type="gdouble"/>
      </return-value>
      <parameters>
        <parameter name="sun_height" transfer-ownership="none">
          <doc xml:space="preserve">sun height in degrees (0 &lt; point_height &lt;= 90 ; 90 degrees is zenith)</doc>
          <type name="gdouble" c:type="gdouble"/>
        </parameter>
        <parameter name="sun_azimuth" transfer-ownership="none">
          <doc xml:space="preserve">sun azimut in degrees (0 degree -&gt; north, 90 degrees -&gt; east, 180 degrees -&gt; south, 270 degrees -&gt; west)</doc>
          <type name="gdouble" c:type="gdouble"/>
        </parameter>
        <parameter name="zenith_luminance" transfer-ownership="none">
          <doc xml:space="preserve">the zenith luminance</doc>
          <type name="gdouble" c:type="gdouble"/>
        </parameter>
        <parameter name="point_height" transfer-ownership="none">
          <doc xml:space="preserve">point altitude in degrees (0 &lt; point_height &lt;= 90 ; 90 degrees is zenith)</doc>
          <type name="gdouble" c:type="gdouble"/>
        </parameter>
        <parameter name="point_azimuth" transfer-ownership="none">
          <doc xml:space="preserve">point azimut angle in degrees (0 degree -&gt; north, 90 degrees -&gt; east, 180 degrees -&gt; south, 270 degrees -&gt; west)</doc>
          <type name="gdouble" c:type="gdouble"/>
        </parameter>
        <parameter name="sky_brightness_index" transfer-ownership="none">
          <doc xml:space="preserve">the index for sky brightness</doc>
          <type name="gdouble" c:type="double"/>
        </parameter>
        <parameter name="sky_clearness_index" transfer-ownership="none">
          <doc xml:space="preserve">Index for sky clearness</doc>
          <type name="gdouble" c:type="double"/>
        </parameter>
      </parameters>
    </function>
    <function name="sky_sunpos_DIN5034" c:identifier="isas_sky_sunpos_DIN5034">
      <doc xml:space="preserve">Calculate the sunposition (with Din 5034 Part 2 Algorithm)</doc>
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="longitude" transfer-ownership="none">
          <doc xml:space="preserve">longitude in deg East</doc>
          <type name="gdouble" c:type="gdouble"/>
        </parameter>
        <parameter name="latitude" transfer-ownership="none">
          <doc xml:space="preserve">latitude in deg North</doc>
          <type name="gdouble" c:type="gdouble"/>
        </parameter>
        <parameter name="year" transfer-ownership="none">
          <doc xml:space="preserve">the year</doc>
          <type name="gint" c:type="gint"/>
        </parameter>
        <parameter name="month" transfer-ownership="none">
          <doc xml:space="preserve">the month</doc>
          <type name="gint" c:type="gint"/>
        </parameter>
        <parameter name="day" transfer-ownership="none">
          <doc xml:space="preserve">the day</doc>
          <type name="gint" c:type="gint"/>
        </parameter>
        <parameter name="hour" transfer-ownership="none">
          <doc xml:space="preserve">the hour</doc>
          <type name="gint" c:type="gint"/>
        </parameter>
        <parameter name="minute" transfer-ownership="none">
          <doc xml:space="preserve">the minute</doc>
          <type name="gint" c:type="gint"/>
        </parameter>
        <parameter name="second" transfer-ownership="none">
          <doc xml:space="preserve">the second</doc>
          <type name="gint" c:type="gint"/>
        </parameter>
        <parameter name="timezone" transfer-ownership="none">
          <doc xml:space="preserve">the timezone (eg "+01:00")</doc>
          <type name="utf8" c:type="gchar*"/>
        </parameter>
        <parameter name="sun_height"
                   direction="out"
                   caller-allocates="0"
                   transfer-ownership="full">
          <doc xml:space="preserve">sun height in degrees (0 &lt; point_height &lt;= 90 ; 90 degrees is zenith)</doc>
          <type name="gdouble" c:type="gdouble*"/>
        </parameter>
        <parameter name="sun_azimuth"
                   direction="out"
                   caller-allocates="0"
                   transfer-ownership="full">
          <doc xml:space="preserve">sun azimut in degrees (0 degree -&gt; north, 90 degrees -&gt; east, 180 degrees -&gt; south, 270 degrees -&gt; west)</doc>
          <type name="gdouble" c:type="gdouble*"/>
        </parameter>
      </parameters>
    </function>
    <function name="sky_zenith_luminance"
              c:identifier="isas_sky_zenith_luminance">
      <doc xml:space="preserve">Calculates the Zenith luminance with a model from Perez.
see See http://volker-quaschning.de/downloads/abschattungsverluste.pdf or "Solar Energie Vol. 50, Number 3, March 1993, pp. 234-245"</doc>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve">the zenith luminance</doc>
        <type name="gdouble" c:type="gdouble"/>
      </return-value>
      <parameters>
        <parameter name="solarconstant" transfer-ownership="none">
          <doc xml:space="preserve">the solar constant (in W/(m*m))</doc>
          <type name="gdouble" c:type="gdouble"/>
        </parameter>
        <parameter name="sun_height" transfer-ownership="none">
          <doc xml:space="preserve">sun height in degrees (0 &lt; point_height &lt;= 90 ; 90 degrees is zenith)</doc>
          <type name="gdouble" c:type="gdouble"/>
        </parameter>
        <parameter name="E_direct_hor" transfer-ownership="none">
          <doc xml:space="preserve">direct irradiation on the horizontal plain (in W/(m*m) )</doc>
          <type name="gdouble" c:type="gdouble"/>
        </parameter>
        <parameter name="E_diffuse_hor" transfer-ownership="none">
          <doc xml:space="preserve">diffuse irradiation on the horizontal plain (in W/(m*m) )</doc>
          <type name="gdouble" c:type="gdouble"/>
        </parameter>
      </parameters>
    </function>
    <function name="tools_airmass" c:identifier="isas_tools_airmass">
      <doc xml:space="preserve">Calculate the airmass (AM) depends on sun height</doc>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve">the airmass(AM)</doc>
        <type name="gdouble" c:type="gdouble"/>
      </return-value>
      <parameters>
        <parameter name="sun_height" transfer-ownership="none">
          <doc xml:space="preserve">sun height in degrees (0 &lt; point_height &lt;= 90 ; 90 degrees is zenith)</doc>
          <type name="gdouble" c:type="gdouble"/>
        </parameter>
      </parameters>
    </function>
    <function name="tools_angle_sun_skypoint"
              c:identifier="isas_tools_angle_sun_skypoint">
      <doc xml:space="preserve">Calculate the Angle between the Sun and a given Point on the Sky in Degrees.
See http://volker-quaschning.de/downloads/abschattungsverluste.pdf</doc>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve">the angle in degrees between the sun and the point</doc>
        <type name="gdouble" c:type="gdouble"/>
      </return-value>
      <parameters>
        <parameter name="sun_height" transfer-ownership="none">
          <doc xml:space="preserve">sun height in degrees (0 &lt; point_height &lt;= 90 ; 90 degrees is zenith)</doc>
          <type name="gdouble" c:type="gdouble"/>
        </parameter>
        <parameter name="sun_azimuth" transfer-ownership="none">
          <doc xml:space="preserve">sun azimut in degrees (0 degree -&gt; north, 90 degrees -&gt; east, 180 degrees -&gt; south, 270 degrees -&gt; west)</doc>
          <type name="gdouble" c:type="gdouble"/>
        </parameter>
        <parameter name="point_height" transfer-ownership="none">
          <doc xml:space="preserve">point altitude in degrees (0 &lt; point_height &lt;= 90 ; 90 degrees is zenith)</doc>
          <type name="gdouble" c:type="gdouble"/>
        </parameter>
        <parameter name="point_azimuth" transfer-ownership="none">
          <doc xml:space="preserve">point azimut angle in degrees (0 degree -&gt; north, 90 degrees -&gt; east, 180 degrees -&gt; south, 270 degrees -&gt; west)</doc>
          <type name="gdouble" c:type="gdouble"/>
        </parameter>
      </parameters>
    </function>
    <function name="tools_angle_sunnormal_plainnormal"
              c:identifier="isas_tools_angle_sunnormal_plainnormal">
      <doc xml:space="preserve">Calculate the Angle between the Normalvector of the Sun and the Normalvector of the Plain (in Dregees)
See: http://volker-quaschning.de/publis/buecher.html</doc>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve">the angle in Degrees</doc>
        <type name="gdouble" c:type="gdouble"/>
      </return-value>
      <parameters>
        <parameter name="sun_height" transfer-ownership="none">
          <doc xml:space="preserve">sun height in degrees (0 &lt; point_height &lt;= 90 ; 90 degrees is zenith)</doc>
          <type name="gdouble" c:type="gdouble"/>
        </parameter>
        <parameter name="sun_azimuth" transfer-ownership="none">
          <doc xml:space="preserve">sun azimut in degrees (0 degree -&gt; north, 90 degrees -&gt; east, 180 degrees -&gt; south, 270 degrees -&gt; west)</doc>
          <type name="gdouble" c:type="gdouble"/>
        </parameter>
        <parameter name="plain_height" transfer-ownership="none">
          <doc xml:space="preserve">angle of the plain in degrees. 0 degrees -&gt; plain looks to the zenith ; 90 degrees -&gt; plain looks to the horizont</doc>
          <type name="gdouble" c:type="gdouble"/>
        </parameter>
        <parameter name="plain_azimuth" transfer-ownership="none">
          <doc xml:space="preserve">azimutangle of the plain in degrees. 0 degree -&gt; Plain look to South ; 90 degree -&gt; look to East ; 180 degree -&gt; to North ; 270 degree -&gt; 270 degree</doc>
          <type name="gdouble" c:type="gdouble"/>
        </parameter>
      </parameters>
    </function>
    <function name="tools_degrees_to_radians"
              c:identifier="isas_tools_degrees_to_radians">
      <doc xml:space="preserve">Convert the given value @deg (in degrees) to radians.</doc>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve">the value in Radians</doc>
        <type name="gdouble" c:type="gdouble"/>
      </return-value>
      <parameters>
        <parameter name="deg" transfer-ownership="none">
          <doc xml:space="preserve">a value in degrees</doc>
          <type name="gdouble" c:type="gdouble"/>
        </parameter>
      </parameters>
    </function>
    <function name="tools_luminance_TO_irradiance"
              c:identifier="isas_tools_luminance_TO_irradiance">
      <doc xml:space="preserve">Transform from luminance to Irradiance
see See http://volker-quaschning.de/downloads/abschattungsverluste.pdf</doc>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve">the irradiance</doc>
        <type name="gdouble" c:type="gdouble"/>
      </return-value>
      <parameters>
        <parameter name="luminance" transfer-ownership="none">
          <doc xml:space="preserve">the value to convert to irradiance</doc>
          <type name="gdouble" c:type="gdouble"/>
        </parameter>
      </parameters>
    </function>
    <function name="tools_radians_to_degrees"
              c:identifier="isas_tools_radians_to_degrees">
      <doc xml:space="preserve">Convert the given value @rad (in radians) to degrees.</doc>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve">the value in Degrees</doc>
        <type name="gdouble" c:type="gdouble"/>
      </return-value>
      <parameters>
        <parameter name="rad" transfer-ownership="none">
          <doc xml:space="preserve">a value in radians</doc>
          <type name="gdouble" c:type="gdouble"/>
        </parameter>
      </parameters>
    </function>
    <function name="tools_solarconstant"
              c:identifier="isas_tools_solarconstant">
      <doc xml:space="preserve">Calculates the solarconstant (E_0) (ca. 1367 W/(m*m) ) depending
on the earth -&gt; sun distance for the given date/time.
See http://solardat.uoregon.edu/SolarRadiationBasics.html</doc>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve">the solarconstant</doc>
        <type name="gdouble" c:type="gdouble"/>
      </return-value>
      <parameters>
        <parameter name="dt" transfer-ownership="none">
          <doc xml:space="preserve">a #GDateTime object</doc>
          <type name="GLib.DateTime" c:type="GDateTime*"/>
        </parameter>
      </parameters>
    </function>
  </namespace>
</repository>
