<?xml version="1.0"?>
<!-- This file was automatically generated from C sources - DO NOT EDIT!
To affect the contents of this file, edit the original C definitions,
and/or use gtk-doc annotations.  -->
<repository version="1.2"
            xmlns="http://www.gtk.org/introspection/core/1.0"
            xmlns:c="http://www.gtk.org/introspection/c/1.0"
            xmlns:glib="http://www.gtk.org/introspection/glib/1.0">
  <include name="GObject" version="2.0"/>
  <namespace name="Gami"
             version="1.0"
             shared-library="libgami-1.0-0.dll"
             c:identifier-prefixes="Gami"
             c:symbol-prefixes="gami">
    <enumeration name="EventMask"
                 glib:type-name="GamiEventMask"
                 glib:get-type="gami_event_mask_get_type"
                 c:type="GamiEventMask">
      <doc xml:space="preserve">Flag values to specify any events your application is interested in as
passed to gami_manager_login() and gami_manager_events().</doc>
      <member name="none"
              value="0"
              c:identifier="GAMI_EVENT_MASK_NONE"
              glib:nick="none">
        <doc xml:space="preserve">do not receive any events</doc>
      </member>
      <member name="call"
              value="1"
              c:identifier="GAMI_EVENT_MASK_CALL"
              glib:nick="call">
        <doc xml:space="preserve">do receive 'call' events</doc>
      </member>
      <member name="system"
              value="4"
              c:identifier="GAMI_EVENT_MASK_SYSTEM"
              glib:nick="system">
        <doc xml:space="preserve">do receive 'system' events</doc>
      </member>
      <member name="agent"
              value="8"
              c:identifier="GAMI_EVENT_MASK_AGENT"
              glib:nick="agent">
        <doc xml:space="preserve">do receive 'agent' events</doc>
      </member>
      <member name="log"
              value="16"
              c:identifier="GAMI_EVENT_MASK_LOG"
              glib:nick="log">
        <doc xml:space="preserve">do receive 'log' events</doc>
      </member>
      <member name="user"
              value="32"
              c:identifier="GAMI_EVENT_MASK_USER"
              glib:nick="user">
        <doc xml:space="preserve">do receive 'user' events</doc>
      </member>
      <member name="all"
              value="64"
              c:identifier="GAMI_EVENT_MASK_ALL"
              glib:nick="all">
        <doc xml:space="preserve">do receive all events</doc>
      </member>
    </enumeration>
    <class name="Manager"
           c:symbol-prefix="manager"
           c:type="GamiManager"
           parent="GObject.Object"
           glib:type-name="GamiManager"
           glib:get-type="gami_manager_get_type"
           glib:type-struct="ManagerClass">
      <doc xml:space="preserve">#GamiManager represents a connection to an Asterisk server using the manager
API. It is used to send actions to the server and receive responses and
events.</doc>
      <constructor name="new" c:identifier="gami_manager_new">
        <doc xml:space="preserve">This function creates an instance of %GAMI_TYPE_MANAGER connected to</doc>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve">A new #GamiManager</doc>
          <type name="Manager" c:type="GamiManager*"/>
        </return-value>
        <parameters>
          <parameter name="host" transfer-ownership="none">
            <doc xml:space="preserve">@port.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="port" transfer-ownership="none">
            <doc xml:space="preserve">Asterisk manager port.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </constructor>
      <function name="new_async"
                c:identifier="gami_manager_new_async"
                introspectable="0">
        <doc xml:space="preserve">Asynchronously create a #GamiManager connected to @host:@port. The new
object will be passed as a parameter to @func when finished.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="host" transfer-ownership="none">
            <doc xml:space="preserve">Asterisk manager host.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="port" transfer-ownership="none">
            <doc xml:space="preserve">Asterisk manager port.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="func" transfer-ownership="none" closure="3">
            <doc xml:space="preserve">Callback function called when object has been created</doc>
            <type name="ManagerNewAsyncFunc" c:type="GamiManagerNewAsyncFunc"/>
          </parameter>
          <parameter name="user_data" transfer-ownership="none">
            <doc xml:space="preserve">data to pass to @func</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </function>
      <method name="absolute_timeout"
              c:identifier="gami_manager_absolute_timeout"
              introspectable="0"
              throws="1">
        <doc xml:space="preserve">Set timeout for call on @channel to @timeout seconds</doc>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve">%TRUE on success, %FALSE on failure</doc>
          <type name="Response" c:type="GamiResponse*"/>
        </return-value>
        <parameters>
          <instance-parameter name="ami" transfer-ownership="none">
            <doc xml:space="preserve">#GamiManager</doc>
            <type name="Manager" c:type="GamiManager*"/>
          </instance-parameter>
          <parameter name="channel" transfer-ownership="none">
            <doc xml:space="preserve">The name of the channel to set the timeout for</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="timeout" transfer-ownership="none">
            <doc xml:space="preserve">The maximum duration of the current call, in seconds</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="action_id" transfer-ownership="none" optional="1">
            <doc xml:space="preserve">ActionID to ease response matching</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="response_func"
                     transfer-ownership="none"
                     closure="4">
            <doc xml:space="preserve">Callback for asynchronious operation. Passing %NULL will
          trigger synchronious mode</doc>
            <type name="ResponseFunc" c:type="GamiResponseFunc"/>
          </parameter>
          <parameter name="response_data" transfer-ownership="none">
            <doc xml:space="preserve">User data to pass to the callback. If %NULL is passed for
          @response_func, the parameter is ignored</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="agent_callback_login"
              c:identifier="gami_manager_agent_callback_login"
              introspectable="0"
              throws="1">
        <doc xml:space="preserve">Log in @agent and register callback to @exten (note that the action has
been deprecated in asterisk-1.4 and was removed in asterisk-1.6)</doc>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve">%TRUE on success, %FALSE on failure</doc>
          <type name="Response" c:type="GamiResponse*"/>
        </return-value>
        <parameters>
          <instance-parameter name="ami" transfer-ownership="none">
            <doc xml:space="preserve">#GamiManager</doc>
            <type name="Manager" c:type="GamiManager*"/>
          </instance-parameter>
          <parameter name="agent" transfer-ownership="none">
            <doc xml:space="preserve">The ID of the agent to log in</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="exten" transfer-ownership="none">
            <doc xml:space="preserve">The extension to use as callback</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="context" transfer-ownership="none" optional="1">
            <doc xml:space="preserve">The context to use as callback</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="ack_call" transfer-ownership="none" optional="1">
            <doc xml:space="preserve">Whether calls should be acknowledged by the agent
           (by pressing #)</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
          <parameter name="wrapup_time" transfer-ownership="none" optional="1">
            <doc xml:space="preserve">The minimum amount of time after hangup before the
           agent will receive a new call</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
          <parameter name="action_id" transfer-ownership="none" optional="1">
            <doc xml:space="preserve">ActionID to ease response matching</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="response_func"
                     transfer-ownership="none"
                     closure="7">
            <doc xml:space="preserve">Callback for asynchronious operation. Passing %NULL will
          trigger synchronious mode</doc>
            <type name="ResponseFunc" c:type="GamiResponseFunc"/>
          </parameter>
          <parameter name="response_data" transfer-ownership="none">
            <doc xml:space="preserve">User data to pass to the callback. If %NULL is passed for
          @response_func, the parameter is ignored</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="agent_logoff"
              c:identifier="gami_manager_agent_logoff"
              introspectable="0"
              throws="1">
        <doc xml:space="preserve">Log off @agent</doc>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve">%TRUE on success, %FALSE on failure</doc>
          <type name="Response" c:type="GamiResponse*"/>
        </return-value>
        <parameters>
          <instance-parameter name="ami" transfer-ownership="none">
            <doc xml:space="preserve">#GamiManager</doc>
            <type name="Manager" c:type="GamiManager*"/>
          </instance-parameter>
          <parameter name="agent" transfer-ownership="none">
            <doc xml:space="preserve">The ID of the agent to log off</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="action_id" transfer-ownership="none" optional="1">
            <doc xml:space="preserve">ActionID to ease response matching</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="response_func"
                     transfer-ownership="none"
                     closure="3">
            <doc xml:space="preserve">Callback for asynchronious operation. Passing %NULL will
          trigger synchronious mode</doc>
            <type name="ResponseFunc" c:type="GamiResponseFunc"/>
          </parameter>
          <parameter name="response_data" transfer-ownership="none">
            <doc xml:space="preserve">User data to pass to the callback. If %NULL is passed for
          @response_func, the parameter is ignored</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="agents"
              c:identifier="gami_manager_agents"
              introspectable="0"
              throws="1">
        <doc xml:space="preserve">List information about all configured agents and their status</doc>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve">#GSList of agents (stored as #GHashTable) on success,
          %NULL on failure</doc>
          <type name="Response" c:type="GamiResponse*"/>
        </return-value>
        <parameters>
          <instance-parameter name="ami" transfer-ownership="none">
            <doc xml:space="preserve">#GamiManager</doc>
            <type name="Manager" c:type="GamiManager*"/>
          </instance-parameter>
          <parameter name="action_id" transfer-ownership="none" optional="1">
            <doc xml:space="preserve">ActionID to ease response matching</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="response_func"
                     transfer-ownership="none"
                     closure="2">
            <doc xml:space="preserve">Callback for asynchronious operation. Passing %NULL will
          trigger synchronious mode</doc>
            <type name="ResponseFunc" c:type="GamiResponseFunc"/>
          </parameter>
          <parameter name="response_data" transfer-ownership="none">
            <doc xml:space="preserve">User data to pass to the callback. If %NULL is passed for
          @response_func, the parameter is ignored</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="agi"
              c:identifier="gami_manager_agi"
              introspectable="0"
              throws="1">
        <doc xml:space="preserve">Execute AGI command @command in @channel</doc>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve">%TRUE on success, %FALSE on failure</doc>
          <type name="Response" c:type="GamiResponse*"/>
        </return-value>
        <parameters>
          <instance-parameter name="ami" transfer-ownership="none">
            <doc xml:space="preserve">#GamiManager</doc>
            <type name="Manager" c:type="GamiManager*"/>
          </instance-parameter>
          <parameter name="channel" transfer-ownership="none">
            <doc xml:space="preserve">The name of the channel to execute @command in</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="command" transfer-ownership="none">
            <doc xml:space="preserve">The name of the AGI command to execute</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="command_id" transfer-ownership="none" optional="1">
            <doc xml:space="preserve">CommandID for matching in AGI notification events</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="action_id" transfer-ownership="none" optional="1">
            <doc xml:space="preserve">ActionID to ease response matching</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="response_func"
                     transfer-ownership="none"
                     closure="5">
            <doc xml:space="preserve">Callback for asynchronious operation. Passing %NULL will
          trigger synchronious mode</doc>
            <type name="ResponseFunc" c:type="GamiResponseFunc"/>
          </parameter>
          <parameter name="response_data" transfer-ownership="none">
            <doc xml:space="preserve">User data to pass to the callback. If %NULL is passed for
          @response_func, the parameter is ignored</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="bridge"
              c:identifier="gami_manager_bridge"
              introspectable="0"
              throws="1">
        <doc xml:space="preserve">Bridge together the existing channels @channel1 and @channel2</doc>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve">%TRUE on success, %FALSE on failure</doc>
          <type name="Response" c:type="GamiResponse*"/>
        </return-value>
        <parameters>
          <instance-parameter name="ami" transfer-ownership="none">
            <doc xml:space="preserve">#GamiManager</doc>
            <type name="Manager" c:type="GamiManager*"/>
          </instance-parameter>
          <parameter name="channel1" transfer-ownership="none">
            <doc xml:space="preserve">The name of the channel to bridge to @channel2</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="channel2" transfer-ownership="none">
            <doc xml:space="preserve">The name of the channel to bridge to @channel1</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="tone" transfer-ownership="none">
            <doc xml:space="preserve">Whether to play courtesy tone to @channel2</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
          <parameter name="action_id" transfer-ownership="none" optional="1">
            <doc xml:space="preserve">ActionID to ease response matching</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="response_func"
                     transfer-ownership="none"
                     closure="5">
            <doc xml:space="preserve">Callback for asynchronious operation. Passing %NULL will
          trigger synchronious mode</doc>
            <type name="ResponseFunc" c:type="GamiResponseFunc"/>
          </parameter>
          <parameter name="response_data" transfer-ownership="none">
            <doc xml:space="preserve">User data to pass to the callback. If %NULL is passed for
          @response_func, the parameter is ignored</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="challenge"
              c:identifier="gami_manager_challenge"
              introspectable="0"
              throws="1">
        <doc xml:space="preserve">Retrieve a challenge string to use for authentification of type @auth_type</doc>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve">the generated challenge on success, %FALSE on failure</doc>
          <type name="Response" c:type="GamiResponse*"/>
        </return-value>
        <parameters>
          <instance-parameter name="ami" transfer-ownership="none">
            <doc xml:space="preserve">#GamiManager</doc>
            <type name="Manager" c:type="GamiManager*"/>
          </instance-parameter>
          <parameter name="auth_type" transfer-ownership="none">
            <doc xml:space="preserve">The authentification type to generate challenge for (e.g. "md5")</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="action_id" transfer-ownership="none" optional="1">
            <doc xml:space="preserve">ActionID to ease response matching</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="response_func"
                     transfer-ownership="none"
                     closure="3">
            <doc xml:space="preserve">Callback for asynchronious operation. Passing %NULL will
          trigger synchronious mode</doc>
            <type name="ResponseFunc" c:type="GamiResponseFunc"/>
          </parameter>
          <parameter name="response_data" transfer-ownership="none">
            <doc xml:space="preserve">User data to pass to the callback. If %NULL is passed for
          @response_func, the parameter is ignored</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="change_monitor"
              c:identifier="gami_manager_change_monitor"
              introspectable="0"
              throws="1">
        <doc xml:space="preserve">Change the file name of the recording occuring on @channel</doc>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve">%TRUE on success, %FALSE on failure</doc>
          <type name="Response" c:type="GamiResponse*"/>
        </return-value>
        <parameters>
          <instance-parameter name="ami" transfer-ownership="none">
            <doc xml:space="preserve">#GamiManager</doc>
            <type name="Manager" c:type="GamiManager*"/>
          </instance-parameter>
          <parameter name="channel" transfer-ownership="none">
            <doc xml:space="preserve">Monitored channel</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="file" transfer-ownership="none">
            <doc xml:space="preserve">New filename to use for recording</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="action_id" transfer-ownership="none" optional="1">
            <doc xml:space="preserve">ActionID to ease response matching</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="response_func"
                     transfer-ownership="none"
                     closure="4">
            <doc xml:space="preserve">Callback for asynchronious operation. Passing %NULL will
          trigger synchronious mode</doc>
            <type name="ResponseFunc" c:type="GamiResponseFunc"/>
          </parameter>
          <parameter name="response_data" transfer-ownership="none">
            <doc xml:space="preserve">User data to pass to the callback. If %NULL is passed for
          @response_func, the parameter is ignored</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="connect" c:identifier="gami_manager_connect" throws="1">
        <doc xml:space="preserve">Connect #GamiManager with the Asterisk server defined by the object
properties #GamiManager:host and #GamiManager:port.

Note that it is not usually necessary to call this function, as it is called
by gami_manager_new() and gami_manager_new_async(). Use it only in classes
inheritting from #GamiManager.</doc>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve">%TRUE on success, %FALSE on failure</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="ami" transfer-ownership="none">
            <doc xml:space="preserve">#GamiManager</doc>
            <type name="Manager" c:type="GamiManager*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="core_settings"
              c:identifier="gami_manager_core_settings"
              introspectable="0"
              throws="1">
        <doc xml:space="preserve">Retrieve information about PBX core settings (as Asterisk/GAMI version etc.)</doc>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve">#GHashTable with settings variables on success, %NULL on failure</doc>
          <type name="Response" c:type="GamiResponse*"/>
        </return-value>
        <parameters>
          <instance-parameter name="ami" transfer-ownership="none">
            <doc xml:space="preserve">#GamiManager</doc>
            <type name="Manager" c:type="GamiManager*"/>
          </instance-parameter>
          <parameter name="action_id" transfer-ownership="none" optional="1">
            <doc xml:space="preserve">ActionID to ease response matching</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="response_func"
                     transfer-ownership="none"
                     closure="2">
            <doc xml:space="preserve">Callback for asynchronious operation. Passing %NULL will
          trigger synchronious mode</doc>
            <type name="ResponseFunc" c:type="GamiResponseFunc"/>
          </parameter>
          <parameter name="response_data" transfer-ownership="none">
            <doc xml:space="preserve">User data to pass to the callback. If %NULL is passed for
          @response_func, the parameter is ignored</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="core_show_channels"
              c:identifier="gami_manager_core_show_channels"
              introspectable="0"
              throws="1">
        <doc xml:space="preserve">Retrieve a list of currently active channels</doc>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve">#GSList of active channels (stored as #GHashTable) on success,
         %NULL on failure</doc>
          <type name="Response" c:type="GamiResponse*"/>
        </return-value>
        <parameters>
          <instance-parameter name="ami" transfer-ownership="none">
            <doc xml:space="preserve">#GamiManager</doc>
            <type name="Manager" c:type="GamiManager*"/>
          </instance-parameter>
          <parameter name="action_id" transfer-ownership="none" optional="1">
            <doc xml:space="preserve">ActionID to ease response matching</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="response_func"
                     transfer-ownership="none"
                     closure="2">
            <doc xml:space="preserve">Callback for asynchronious operation. Passing %NULL will
          trigger synchronious mode</doc>
            <type name="ResponseFunc" c:type="GamiResponseFunc"/>
          </parameter>
          <parameter name="response_data" transfer-ownership="none">
            <doc xml:space="preserve">User data to pass to the callback. If %NULL is passed for
          @response_func, the parameter is ignored</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="core_status"
              c:identifier="gami_manager_core_status"
              introspectable="0"
              throws="1">
        <doc xml:space="preserve">Retrieve information about the current PBX core status (as active calls,
startup time etc.)</doc>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve">#GHashTable with status variables on success, %NULL on failure</doc>
          <type name="Response" c:type="GamiResponse*"/>
        </return-value>
        <parameters>
          <instance-parameter name="ami" transfer-ownership="none">
            <doc xml:space="preserve">#GamiManager</doc>
            <type name="Manager" c:type="GamiManager*"/>
          </instance-parameter>
          <parameter name="action_id" transfer-ownership="none" optional="1">
            <doc xml:space="preserve">ActionID to ease response matching</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="response_func"
                     transfer-ownership="none"
                     closure="2">
            <doc xml:space="preserve">Callback for asynchronious operation. Passing %NULL will
          trigger synchronious mode</doc>
            <type name="ResponseFunc" c:type="GamiResponseFunc"/>
          </parameter>
          <parameter name="response_data" transfer-ownership="none">
            <doc xml:space="preserve">User data to pass to the callback. If %NULL is passed for
          @response_func, the parameter is ignored</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="create_config"
              c:identifier="gami_manager_create_config"
              introspectable="0"
              throws="1">
        <doc xml:space="preserve">Create an empty configurion file @filename</doc>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve">%TRUE on success, %FALSE on failure</doc>
          <type name="Response" c:type="GamiResponse*"/>
        </return-value>
        <parameters>
          <instance-parameter name="ami" transfer-ownership="none">
            <doc xml:space="preserve">#GamiManager</doc>
            <type name="Manager" c:type="GamiManager*"/>
          </instance-parameter>
          <parameter name="filename" transfer-ownership="none">
            <doc xml:space="preserve">The name of the configuration file to create</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="action_id" transfer-ownership="none" optional="1">
            <doc xml:space="preserve">ActionID to ease response matching</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="response_func"
                     transfer-ownership="none"
                     closure="3">
            <doc xml:space="preserve">Callback for asynchronious operation. Passing %NULL will
          trigger synchronious mode</doc>
            <type name="ResponseFunc" c:type="GamiResponseFunc"/>
          </parameter>
          <parameter name="response_data" transfer-ownership="none">
            <doc xml:space="preserve">User data to pass to the callback. If %NULL is passed for
          @response_func, the parameter is ignored</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="dahdi_dial_offhook"
              c:identifier="gami_manager_dahdi_dial_offhook"
              introspectable="0"
              throws="1">
        <doc xml:space="preserve">Dial over DAHDI channel while offhook</doc>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve">%TRUE on success, %FALSE on failure</doc>
          <type name="Response" c:type="GamiResponse*"/>
        </return-value>
        <parameters>
          <instance-parameter name="ami" transfer-ownership="none">
            <doc xml:space="preserve">#GamiManager</doc>
            <type name="Manager" c:type="GamiManager*"/>
          </instance-parameter>
          <parameter name="dahdi_channel" transfer-ownership="none">
            <doc xml:space="preserve">The DAHDI channel on which to dial @number</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="number" transfer-ownership="none">
            <doc xml:space="preserve">The number to dial</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="action_id" transfer-ownership="none" optional="1">
            <doc xml:space="preserve">ActionID to ease response matching</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="response_func"
                     transfer-ownership="none"
                     closure="4">
            <doc xml:space="preserve">Callback for asynchronious operation. Passing %NULL will
          trigger synchronious mode</doc>
            <type name="ResponseFunc" c:type="GamiResponseFunc"/>
          </parameter>
          <parameter name="response_data" transfer-ownership="none">
            <doc xml:space="preserve">User data to pass to the callback. If %NULL is passed for
          @response_func, the parameter is ignored</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="dahdi_dnd_off"
              c:identifier="gami_manager_dahdi_dnd_off"
              introspectable="0"
              throws="1">
        <doc xml:space="preserve">Set DND (Do Not Disturb) status on @dahdi_channel to off</doc>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve">%TRUE on success, %FALSE on failure</doc>
          <type name="Response" c:type="GamiResponse*"/>
        </return-value>
        <parameters>
          <instance-parameter name="ami" transfer-ownership="none">
            <doc xml:space="preserve">#GamiManager</doc>
            <type name="Manager" c:type="GamiManager*"/>
          </instance-parameter>
          <parameter name="dahdi_channel" transfer-ownership="none">
            <doc xml:space="preserve">The DAHDI channel on which to turn off DND status</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="action_id" transfer-ownership="none" optional="1">
            <doc xml:space="preserve">ActionID to ease response matching</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="response_func"
                     transfer-ownership="none"
                     closure="3">
            <doc xml:space="preserve">Callback for asynchronious operation. Passing %NULL will
          trigger synchronious mode</doc>
            <type name="ResponseFunc" c:type="GamiResponseFunc"/>
          </parameter>
          <parameter name="response_data" transfer-ownership="none">
            <doc xml:space="preserve">User data to pass to the callback. If %NULL is passed for
          @response_func, the parameter is ignored</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="dahdi_dnd_on"
              c:identifier="gami_manager_dahdi_dnd_on"
              introspectable="0"
              throws="1">
        <doc xml:space="preserve">Set DND (Do Not Disturb) status on @dahdi_channel</doc>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve">%TRUE on success, %FALSE on failure</doc>
          <type name="Response" c:type="GamiResponse*"/>
        </return-value>
        <parameters>
          <instance-parameter name="ami" transfer-ownership="none">
            <doc xml:space="preserve">#GamiManager</doc>
            <type name="Manager" c:type="GamiManager*"/>
          </instance-parameter>
          <parameter name="dahdi_channel" transfer-ownership="none">
            <doc xml:space="preserve">The DAHDI channel on which to turn on DND status</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="action_id" transfer-ownership="none" optional="1">
            <doc xml:space="preserve">ActionID to ease response matching</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="response_func"
                     transfer-ownership="none"
                     closure="3">
            <doc xml:space="preserve">Callback for asynchronious operation. Passing %NULL will
          trigger synchronious mode</doc>
            <type name="ResponseFunc" c:type="GamiResponseFunc"/>
          </parameter>
          <parameter name="response_data" transfer-ownership="none">
            <doc xml:space="preserve">User data to pass to the callback. If %NULL is passed for
          @response_func, the parameter is ignored</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="dahdi_hangup"
              c:identifier="gami_manager_dahdi_hangup"
              introspectable="0"
              throws="1">
        <doc xml:space="preserve">Hangup DAHDI channel</doc>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve">%TRUE on success, %FALSE on failure</doc>
          <type name="Response" c:type="GamiResponse*"/>
        </return-value>
        <parameters>
          <instance-parameter name="ami" transfer-ownership="none">
            <doc xml:space="preserve">#GamiManager</doc>
            <type name="Manager" c:type="GamiManager*"/>
          </instance-parameter>
          <parameter name="dahdi_channel" transfer-ownership="none">
            <doc xml:space="preserve">The DAHDI channel to hang up</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="action_id" transfer-ownership="none" optional="1">
            <doc xml:space="preserve">ActionID to ease response matching</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="response_func"
                     transfer-ownership="none"
                     closure="3">
            <doc xml:space="preserve">Callback for asynchronious operation. Passing %NULL will
          trigger synchronious mode</doc>
            <type name="ResponseFunc" c:type="GamiResponseFunc"/>
          </parameter>
          <parameter name="response_data" transfer-ownership="none">
            <doc xml:space="preserve">User data to pass to the callback. If %NULL is passed for
          @response_func, the parameter is ignored</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="dahdi_restart"
              c:identifier="gami_manager_dahdi_restart"
              introspectable="0"
              throws="1">
        <doc xml:space="preserve">Restart DAHDI channels. Any active calls will be terminated</doc>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve">%TRUE on success, %FALSE on failure</doc>
          <type name="Response" c:type="GamiResponse*"/>
        </return-value>
        <parameters>
          <instance-parameter name="ami" transfer-ownership="none">
            <doc xml:space="preserve">#GamiManager</doc>
            <type name="Manager" c:type="GamiManager*"/>
          </instance-parameter>
          <parameter name="action_id" transfer-ownership="none" optional="1">
            <doc xml:space="preserve">ActionID to ease response matching</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="response_func"
                     transfer-ownership="none"
                     closure="2">
            <doc xml:space="preserve">Callback for asynchronious operation. Passing %NULL will
          trigger synchronious mode</doc>
            <type name="ResponseFunc" c:type="GamiResponseFunc"/>
          </parameter>
          <parameter name="response_data" transfer-ownership="none">
            <doc xml:space="preserve">User data to pass to the callback. If %NULL is passed for
          @response_func, the parameter is ignored</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="dahdi_show_channels"
              c:identifier="gami_manager_dahdi_show_channels"
              introspectable="0"
              throws="1">
        <doc xml:space="preserve">Show the status of all DAHDI channels</doc>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve">#GSList of DAHDI channels (stored as #GHashTable) on success,
         %NULL on failure</doc>
          <type name="Response" c:type="GamiResponse*"/>
        </return-value>
        <parameters>
          <instance-parameter name="ami" transfer-ownership="none">
            <doc xml:space="preserve">#GamiManager</doc>
            <type name="Manager" c:type="GamiManager*"/>
          </instance-parameter>
          <parameter name="dahdi_channel"
                     transfer-ownership="none"
                     optional="1">
            <doc xml:space="preserve">Limit status information to this channel</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="action_id" transfer-ownership="none" optional="1">
            <doc xml:space="preserve">ActionID to ease response matching</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="response_func"
                     transfer-ownership="none"
                     closure="3">
            <doc xml:space="preserve">Callback for asynchronious operation. Passing %NULL will
          trigger synchronious mode</doc>
            <type name="ResponseFunc" c:type="GamiResponseFunc"/>
          </parameter>
          <parameter name="response_data" transfer-ownership="none">
            <doc xml:space="preserve">User data to pass to the callback. If %NULL is passed for
          @response_func, the parameter is ignored</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="dahdi_transfer"
              c:identifier="gami_manager_dahdi_transfer"
              introspectable="0"
              throws="1">
        <doc xml:space="preserve">Transfer DAHDI channel</doc>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve">%TRUE on success, %FALSE on failure</doc>
          <type name="Response" c:type="GamiResponse*"/>
        </return-value>
        <parameters>
          <instance-parameter name="ami" transfer-ownership="none">
            <doc xml:space="preserve">#GamiManager</doc>
            <type name="Manager" c:type="GamiManager*"/>
          </instance-parameter>
          <parameter name="dahdi_channel" transfer-ownership="none">
            <doc xml:space="preserve">The channel to be transferred</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="action_id" transfer-ownership="none" optional="1">
            <doc xml:space="preserve">ActionID to ease response matching</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="response_func"
                     transfer-ownership="none"
                     closure="3">
            <doc xml:space="preserve">Callback for asynchronious operation. Passing %NULL will
          trigger synchronious mode</doc>
            <type name="ResponseFunc" c:type="GamiResponseFunc"/>
          </parameter>
          <parameter name="response_data" transfer-ownership="none">
            <doc xml:space="preserve">User data to pass to the callback. If %NULL is passed for
          @response_func, the parameter is ignored</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="db_del"
              c:identifier="gami_manager_db_del"
              introspectable="0"
              throws="1">
        <doc xml:space="preserve">Remove AstDB entry @family/@key</doc>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve">%TRUE on success, %FALSE on failure</doc>
          <type name="Response" c:type="GamiResponse*"/>
        </return-value>
        <parameters>
          <instance-parameter name="ami" transfer-ownership="none">
            <doc xml:space="preserve">#GamiManager</doc>
            <type name="Manager" c:type="GamiManager*"/>
          </instance-parameter>
          <parameter name="family" transfer-ownership="none">
            <doc xml:space="preserve">The AstDB key family in which to delete the key</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="key" transfer-ownership="none">
            <doc xml:space="preserve">The name of the AstDB key to delete</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="action_id" transfer-ownership="none" optional="1">
            <doc xml:space="preserve">ActionID to ease response matching</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="response_func"
                     transfer-ownership="none"
                     closure="4">
            <doc xml:space="preserve">Callback for asynchronious operation. Passing %NULL will
          trigger synchronious mode</doc>
            <type name="ResponseFunc" c:type="GamiResponseFunc"/>
          </parameter>
          <parameter name="response_data" transfer-ownership="none">
            <doc xml:space="preserve">User data to pass to the callback. If %NULL is passed for
          @response_func, the parameter is ignored</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="db_del_tree"
              c:identifier="gami_manager_db_del_tree"
              introspectable="0"
              throws="1">
        <doc xml:space="preserve">Remove AstDB key family</doc>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve">%TRUE on success, %FALSE on failure</doc>
          <type name="Response" c:type="GamiResponse*"/>
        </return-value>
        <parameters>
          <instance-parameter name="ami" transfer-ownership="none">
            <doc xml:space="preserve">#GamiManager</doc>
            <type name="Manager" c:type="GamiManager*"/>
          </instance-parameter>
          <parameter name="family" transfer-ownership="none">
            <doc xml:space="preserve">The AstDB key family to delete</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="action_id" transfer-ownership="none" optional="1">
            <doc xml:space="preserve">ActionID to ease response matching</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="response_func"
                     transfer-ownership="none"
                     closure="3">
            <doc xml:space="preserve">Callback for asynchronious operation. Passing %NULL will
          trigger synchronious mode</doc>
            <type name="ResponseFunc" c:type="GamiResponseFunc"/>
          </parameter>
          <parameter name="response_data" transfer-ownership="none">
            <doc xml:space="preserve">User data to pass to the callback. If %NULL is passed for
          @response_func, the parameter is ignored</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="db_get"
              c:identifier="gami_manager_db_get"
              introspectable="0"
              throws="1">
        <doc xml:space="preserve">Retrieve value of AstDB entry @family/@key</doc>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve">the value of @family/@key on success, %FALSE on failure</doc>
          <type name="Response" c:type="GamiResponse*"/>
        </return-value>
        <parameters>
          <instance-parameter name="ami" transfer-ownership="none">
            <doc xml:space="preserve">#GamiManager</doc>
            <type name="Manager" c:type="GamiManager*"/>
          </instance-parameter>
          <parameter name="family" transfer-ownership="none">
            <doc xml:space="preserve">The AstDB key family from which to retrieve the value</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="key" transfer-ownership="none">
            <doc xml:space="preserve">The name of the AstDB key</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="action_id" transfer-ownership="none" optional="1">
            <doc xml:space="preserve">ActionID to ease response matching</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="response_func"
                     transfer-ownership="none"
                     closure="4">
            <doc xml:space="preserve">Callback for asynchronious operation. Passing %NULL will
          trigger synchronious mode</doc>
            <type name="ResponseFunc" c:type="GamiResponseFunc"/>
          </parameter>
          <parameter name="response_data" transfer-ownership="none">
            <doc xml:space="preserve">User data to pass to the callback. If %NULL is passed for
          @response_func, the parameter is ignored</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="db_put"
              c:identifier="gami_manager_db_put"
              introspectable="0"
              throws="1">
        <doc xml:space="preserve">Set AstDB entry @family/@key to @value</doc>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve">%TRUE on success, %FALSE on failure</doc>
          <type name="Response" c:type="GamiResponse*"/>
        </return-value>
        <parameters>
          <instance-parameter name="ami" transfer-ownership="none">
            <doc xml:space="preserve">#GamiManager</doc>
            <type name="Manager" c:type="GamiManager*"/>
          </instance-parameter>
          <parameter name="family" transfer-ownership="none">
            <doc xml:space="preserve">The AstDB key family in which to set the value</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="key" transfer-ownership="none">
            <doc xml:space="preserve">The name of the AstDB key</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="val" transfer-ownership="none">
            <doc xml:space="preserve">The value to assign to the key</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="action_id" transfer-ownership="none" optional="1">
            <doc xml:space="preserve">ActionID to ease response matching</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="response_func"
                     transfer-ownership="none"
                     closure="5">
            <doc xml:space="preserve">Callback for asynchronious operation. Passing %NULL will
          trigger synchronious mode</doc>
            <type name="ResponseFunc" c:type="GamiResponseFunc"/>
          </parameter>
          <parameter name="response_data" transfer-ownership="none">
            <doc xml:space="preserve">User data to pass to the callback. If %NULL is passed for
          @response_func, the parameter is ignored</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="events"
              c:identifier="gami_manager_events"
              introspectable="0"
              throws="1">
        <doc xml:space="preserve">Set #GamiEventMask for the connection to control which events shall be
received</doc>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve">%TRUE on success, %FALSE on failure</doc>
          <type name="Response" c:type="GamiResponse*"/>
        </return-value>
        <parameters>
          <instance-parameter name="ami" transfer-ownership="none">
            <doc xml:space="preserve">#GamiManager</doc>
            <type name="Manager" c:type="GamiManager*"/>
          </instance-parameter>
          <parameter name="event_mask" transfer-ownership="none">
            <doc xml:space="preserve">#GamiEventMask to set for the connection</doc>
            <type name="EventMask" c:type="GamiEventMask"/>
          </parameter>
          <parameter name="action_id" transfer-ownership="none" optional="1">
            <doc xml:space="preserve">ActionID to ease response matching</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="response_func"
                     transfer-ownership="none"
                     closure="3">
            <doc xml:space="preserve">Callback for asynchronious operation. Passing %NULL will
          trigger synchronious mode</doc>
            <type name="ResponseFunc" c:type="GamiResponseFunc"/>
          </parameter>
          <parameter name="response_data" transfer-ownership="none">
            <doc xml:space="preserve">User data to pass to the callback. If %NULL is passed for
          @response_func, the parameter is ignored</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="extension_state"
              c:identifier="gami_manager_extension_state"
              introspectable="0"
              throws="1">
        <doc xml:space="preserve">Check extension state of @exten@@context - if hints are properly configured
on the server, the action will report the status of the device connected to
@exten</doc>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve">#GHashTable of status information on success, %NULL on failure</doc>
          <type name="Response" c:type="GamiResponse*"/>
        </return-value>
        <parameters>
          <instance-parameter name="ami" transfer-ownership="none">
            <doc xml:space="preserve">#GamiManager</doc>
            <type name="Manager" c:type="GamiManager*"/>
          </instance-parameter>
          <parameter name="exten" transfer-ownership="none">
            <doc xml:space="preserve">The name of the extension to check</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="context" transfer-ownership="none">
            <doc xml:space="preserve">The context of the extension to check</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="action_id" transfer-ownership="none" optional="1">
            <doc xml:space="preserve">ActionID to ease response matching</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="response_func"
                     transfer-ownership="none"
                     closure="4">
            <doc xml:space="preserve">Callback for asynchronious operation. Passing %NULL will
          trigger synchronious mode</doc>
            <type name="ResponseFunc" c:type="GamiResponseFunc"/>
          </parameter>
          <parameter name="response_data" transfer-ownership="none">
            <doc xml:space="preserve">User data to pass to the callback. If %NULL is passed for
          @response_func, the parameter is ignored</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_config"
              c:identifier="gami_manager_get_config"
              introspectable="0"
              throws="1">
        <doc xml:space="preserve">Get content of configuration file @filename</doc>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve">A #GHashTable of line number / values on success,
         %NULL on failure</doc>
          <type name="Response" c:type="GamiResponse*"/>
        </return-value>
        <parameters>
          <instance-parameter name="ami" transfer-ownership="none">
            <doc xml:space="preserve">#GamiManager</doc>
            <type name="Manager" c:type="GamiManager*"/>
          </instance-parameter>
          <parameter name="filename" transfer-ownership="none">
            <doc xml:space="preserve">The name of the configuration file to get content for</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="action_id" transfer-ownership="none" optional="1">
            <doc xml:space="preserve">ActionID to ease response matching</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="response_func"
                     transfer-ownership="none"
                     closure="3">
            <doc xml:space="preserve">Callback for asynchronious operation. Passing %NULL will
          trigger synchronious mode</doc>
            <type name="ResponseFunc" c:type="GamiResponseFunc"/>
          </parameter>
          <parameter name="response_data" transfer-ownership="none">
            <doc xml:space="preserve">User data to pass to the callback. If %NULL is passed for
          @response_func, the parameter is ignored</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_config_json"
              c:identifier="gami_manager_get_config_json"
              introspectable="0"
              throws="1">
        <doc xml:space="preserve">Get content of configuration file @filename as JS hash for use with JSON</doc>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve">A #GHashTable with file dump on success,
         %NULL on failure</doc>
          <type name="Response" c:type="GamiResponse*"/>
        </return-value>
        <parameters>
          <instance-parameter name="ami" transfer-ownership="none">
            <doc xml:space="preserve">#GamiManager</doc>
            <type name="Manager" c:type="GamiManager*"/>
          </instance-parameter>
          <parameter name="filename" transfer-ownership="none">
            <doc xml:space="preserve">The name of the configuration file to get content for</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="action_id" transfer-ownership="none" optional="1">
            <doc xml:space="preserve">ActionID to ease response matching</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="response_func"
                     transfer-ownership="none"
                     closure="3">
            <doc xml:space="preserve">Callback for asynchronious operation. Passing %NULL will
          trigger synchronious mode</doc>
            <type name="ResponseFunc" c:type="GamiResponseFunc"/>
          </parameter>
          <parameter name="response_data" transfer-ownership="none">
            <doc xml:space="preserve">User data to pass to the callback. If %NULL is passed for
          @response_func, the parameter is ignored</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_var"
              c:identifier="gami_manager_get_var"
              introspectable="0"
              throws="1">
        <doc xml:space="preserve">Get value of @variable (either from @channel or as global)</doc>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve">value of @variable or %FALSE</doc>
          <type name="Response" c:type="GamiResponse*"/>
        </return-value>
        <parameters>
          <instance-parameter name="ami" transfer-ownership="none">
            <doc xml:space="preserve">#GamiManager</doc>
            <type name="Manager" c:type="GamiManager*"/>
          </instance-parameter>
          <parameter name="channel" transfer-ownership="none" optional="1">
            <doc xml:space="preserve">Channel to retrieve variable from</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="variable" transfer-ownership="none">
            <doc xml:space="preserve">Name of the variable to retrieve</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="action_id" transfer-ownership="none" optional="1">
            <doc xml:space="preserve">ActionID to ease response matching</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="response_func"
                     transfer-ownership="none"
                     closure="4">
            <doc xml:space="preserve">Callback for asynchronious operation. Passing %NULL will
          trigger synchronious mode</doc>
            <type name="ResponseFunc" c:type="GamiResponseFunc"/>
          </parameter>
          <parameter name="response_data" transfer-ownership="none">
            <doc xml:space="preserve">User data to pass to the callback. If %NULL is passed for
          @response_func, the parameter is ignored</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="hangup"
              c:identifier="gami_manager_hangup"
              introspectable="0"
              throws="1">
        <doc xml:space="preserve">Hang up @channel</doc>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve">%TRUE on success, %FALSE on failure</doc>
          <type name="Response" c:type="GamiResponse*"/>
        </return-value>
        <parameters>
          <instance-parameter name="ami" transfer-ownership="none">
            <doc xml:space="preserve">#GamiManager</doc>
            <type name="Manager" c:type="GamiManager*"/>
          </instance-parameter>
          <parameter name="channel" transfer-ownership="none">
            <doc xml:space="preserve">The name of the channel to hang up</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="action_id" transfer-ownership="none" optional="1">
            <doc xml:space="preserve">ActionID to ease response matching</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="response_func"
                     transfer-ownership="none"
                     closure="3">
            <doc xml:space="preserve">Callback for asynchronious operation. Passing %NULL will
          trigger synchronious mode</doc>
            <type name="ResponseFunc" c:type="GamiResponseFunc"/>
          </parameter>
          <parameter name="response_data" transfer-ownership="none">
            <doc xml:space="preserve">User data to pass to the callback. If %NULL is passed for
          @response_func, the parameter is ignored</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="iax_peer_list"
              c:identifier="gami_manager_iax_peer_list"
              introspectable="0"
              throws="1">
        <doc xml:space="preserve">Retrieve a list of IAX2 peers</doc>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve">#GSList of IAX2 peers (stored as #GHashTable) on success,
         %NULL on failure</doc>
          <type name="Response" c:type="GamiResponse*"/>
        </return-value>
        <parameters>
          <instance-parameter name="ami" transfer-ownership="none">
            <doc xml:space="preserve">#GamiManager</doc>
            <type name="Manager" c:type="GamiManager*"/>
          </instance-parameter>
          <parameter name="action_id" transfer-ownership="none" optional="1">
            <doc xml:space="preserve">ActionID to ease response matching</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="response_func"
                     transfer-ownership="none"
                     closure="2">
            <doc xml:space="preserve">Callback for asynchronious operation. Passing %NULL will
          trigger synchronious mode</doc>
            <type name="ResponseFunc" c:type="GamiResponseFunc"/>
          </parameter>
          <parameter name="response_data" transfer-ownership="none">
            <doc xml:space="preserve">User data to pass to the callback. If %NULL is passed for
          @response_func, the parameter is ignored</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="jabber_send"
              c:identifier="gami_manager_jabber_send"
              introspectable="0"
              throws="1">
        <doc xml:space="preserve">Send @message from Jabber / GTalk account @jabber to account @screen_name</doc>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve">%TRUE on success, %FALSE on failure</doc>
          <type name="Response" c:type="GamiResponse*"/>
        </return-value>
        <parameters>
          <instance-parameter name="ami" transfer-ownership="none">
            <doc xml:space="preserve">#GamiManager</doc>
            <type name="Manager" c:type="GamiManager*"/>
          </instance-parameter>
          <parameter name="jabber" transfer-ownership="none">
            <doc xml:space="preserve">Jabber / GTalk account to send message from</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="screen_name" transfer-ownership="none">
            <doc xml:space="preserve">Jabber / GTalk account to send message to</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="message" transfer-ownership="none">
            <doc xml:space="preserve">The message to send</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="action_id" transfer-ownership="none" optional="1">
            <doc xml:space="preserve">ActionID to ease response matching</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="response_func"
                     transfer-ownership="none"
                     closure="5">
            <doc xml:space="preserve">Callback for asynchronious operation. Passing %NULL will
          trigger synchronious mode</doc>
            <type name="ResponseFunc" c:type="GamiResponseFunc"/>
          </parameter>
          <parameter name="response_data" transfer-ownership="none">
            <doc xml:space="preserve">User data to pass to the callback. If %NULL is passed for
          @response_func, the parameter is ignored</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="list_categories"
              c:identifier="gami_manager_list_categories"
              introspectable="0"
              throws="1">
        <doc xml:space="preserve">List categories in @filename</doc>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve">A #GHashTable of category number / name on success,
         %NULL on failure</doc>
          <type name="Response" c:type="GamiResponse*"/>
        </return-value>
        <parameters>
          <instance-parameter name="ami" transfer-ownership="none">
            <doc xml:space="preserve">#GamiManager</doc>
            <type name="Manager" c:type="GamiManager*"/>
          </instance-parameter>
          <parameter name="filename" transfer-ownership="none">
            <doc xml:space="preserve">The name of the configuration file to list categories for</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="action_id" transfer-ownership="none" optional="1">
            <doc xml:space="preserve">ActionID to ease response matching</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="response_func"
                     transfer-ownership="none"
                     closure="3">
            <doc xml:space="preserve">Callback for asynchronious operation. Passing %NULL will
          trigger synchronious mode</doc>
            <type name="ResponseFunc" c:type="GamiResponseFunc"/>
          </parameter>
          <parameter name="response_data" transfer-ownership="none">
            <doc xml:space="preserve">User data to pass to the callback. If %NULL is passed for
          @response_func, the parameter is ignored</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="list_commands"
              c:identifier="gami_manager_list_commands"
              introspectable="0"
              throws="1">
        <doc xml:space="preserve">List available Asterisk manager commands - the available actions may vary
between different versions of Asterisk and due to the set of loaded modules</doc>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve">A #GHashTable of action names / descriptions on success,
         %NULL on failure</doc>
          <type name="Response" c:type="GamiResponse*"/>
        </return-value>
        <parameters>
          <instance-parameter name="ami" transfer-ownership="none">
            <doc xml:space="preserve">#GamiManager</doc>
            <type name="Manager" c:type="GamiManager*"/>
          </instance-parameter>
          <parameter name="action_id" transfer-ownership="none" optional="1">
            <doc xml:space="preserve">ActionID to ease response matching</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="response_func"
                     transfer-ownership="none"
                     closure="2">
            <doc xml:space="preserve">Callback for asynchronious operation. Passing %NULL will
          trigger synchronious mode</doc>
            <type name="ResponseFunc" c:type="GamiResponseFunc"/>
          </parameter>
          <parameter name="response_data" transfer-ownership="none">
            <doc xml:space="preserve">User data to pass to the callback. If %NULL is passed for
          @response_func, the parameter is ignored</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="login"
              c:identifier="gami_manager_login"
              introspectable="0"
              throws="1">
        <doc xml:space="preserve">Authenticate to asterisk and open a new manager session</doc>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve">%TRUE on success, %FALSE on failure</doc>
          <type name="Response" c:type="GamiResponse*"/>
        </return-value>
        <parameters>
          <instance-parameter name="ami" transfer-ownership="none">
            <doc xml:space="preserve">#GamiManager</doc>
            <type name="Manager" c:type="GamiManager*"/>
          </instance-parameter>
          <parameter name="username" transfer-ownership="none">
            <doc xml:space="preserve">Username to use for authentification</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="secret" transfer-ownership="none">
            <doc xml:space="preserve">Password to use for authentification</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="auth_type" transfer-ownership="none">
            <doc xml:space="preserve">AuthType to use for authentification - if set to "md5", @secret
            is expected to contain an MD5 hash of the result string of
            gami_manager_challenge() and the user's password</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="events" transfer-ownership="none">
            <doc xml:space="preserve">Flags of type %GamiEventMask, indicating which events should be
         received initially. It is possible to modify this setting using the
         gami_manager_events() action</doc>
            <type name="EventMask" c:type="GamiEventMask"/>
          </parameter>
          <parameter name="action_id" transfer-ownership="none" optional="1">
            <doc xml:space="preserve">ActionID to ease response matching</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="response_func"
                     transfer-ownership="none"
                     closure="6">
            <doc xml:space="preserve">Callback for asynchronious operation. Passing %NULL will
          trigger synchronious mode</doc>
            <type name="ResponseFunc" c:type="GamiResponseFunc"/>
          </parameter>
          <parameter name="response_data" transfer-ownership="none">
            <doc xml:space="preserve">User data to pass to the callback. If %NULL is passed for
          @response_func, the parameter is ignored</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="logoff"
              c:identifier="gami_manager_logoff"
              introspectable="0"
              throws="1">
        <doc xml:space="preserve">Close the manager session and disconnect from asterisk</doc>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve">%TRUE on success, %FALSE on failure</doc>
          <type name="Response" c:type="GamiResponse*"/>
        </return-value>
        <parameters>
          <instance-parameter name="ami" transfer-ownership="none">
            <doc xml:space="preserve">#GamiManager</doc>
            <type name="Manager" c:type="GamiManager*"/>
          </instance-parameter>
          <parameter name="action_id" transfer-ownership="none" optional="1">
            <doc xml:space="preserve">ActionID to ease response matching</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="response_func"
                     transfer-ownership="none"
                     closure="2">
            <doc xml:space="preserve">Callback for asynchronious operation. Passing %NULL will
          trigger synchronious mode</doc>
            <type name="ResponseFunc" c:type="GamiResponseFunc"/>
          </parameter>
          <parameter name="response_data" transfer-ownership="none">
            <doc xml:space="preserve">User data to pass to the callback. If %NULL is passed for
          @response_func, the parameter is ignored</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="mailbox_count"
              c:identifier="gami_manager_mailbox_count"
              introspectable="0"
              throws="1">
        <doc xml:space="preserve">Retrieve count of new and old messages in @mailbox</doc>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve">#GHashTable with message counts on success, %NULL on failure</doc>
          <type name="Response" c:type="GamiResponse*"/>
        </return-value>
        <parameters>
          <instance-parameter name="ami" transfer-ownership="none">
            <doc xml:space="preserve">#GamiManager</doc>
            <type name="Manager" c:type="GamiManager*"/>
          </instance-parameter>
          <parameter name="mailbox" transfer-ownership="none">
            <doc xml:space="preserve">The mailbox to check messages for</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="action_id" transfer-ownership="none" optional="1">
            <doc xml:space="preserve">ActionID to ease response matching</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="response_func"
                     transfer-ownership="none"
                     closure="3">
            <doc xml:space="preserve">Callback for asynchronious operation. Passing %NULL will
          trigger synchronious mode</doc>
            <type name="ResponseFunc" c:type="GamiResponseFunc"/>
          </parameter>
          <parameter name="response_data" transfer-ownership="none">
            <doc xml:space="preserve">User data to pass to the callback. If %NULL is passed for
          @response_func, the parameter is ignored</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="mailbox_status"
              c:identifier="gami_manager_mailbox_status"
              introspectable="0"
              throws="1">
        <doc xml:space="preserve">Check the status of @mailbox</doc>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve">#GHashTable with status variables on success, %NULL on failure</doc>
          <type name="Response" c:type="GamiResponse*"/>
        </return-value>
        <parameters>
          <instance-parameter name="ami" transfer-ownership="none">
            <doc xml:space="preserve">#GamiManager</doc>
            <type name="Manager" c:type="GamiManager*"/>
          </instance-parameter>
          <parameter name="mailbox" transfer-ownership="none">
            <doc xml:space="preserve">The mailbox to check status for</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="action_id" transfer-ownership="none" optional="1">
            <doc xml:space="preserve">ActionID to ease response matching</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="response_func"
                     transfer-ownership="none"
                     closure="3">
            <doc xml:space="preserve">Callback for asynchronious operation. Passing %NULL will
          trigger synchronious mode</doc>
            <type name="ResponseFunc" c:type="GamiResponseFunc"/>
          </parameter>
          <parameter name="response_data" transfer-ownership="none">
            <doc xml:space="preserve">User data to pass to the callback. If %NULL is passed for
          @response_func, the parameter is ignored</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="meetme_list"
              c:identifier="gami_manager_meetme_list"
              introspectable="0"
              throws="1">
        <doc xml:space="preserve">List al users in conference @meetme</doc>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve">#GSList of user information (stored as #GHashTable) on success,
         %NULL on failure</doc>
          <type name="Response" c:type="GamiResponse*"/>
        </return-value>
        <parameters>
          <instance-parameter name="ami" transfer-ownership="none">
            <doc xml:space="preserve">#GamiManager</doc>
            <type name="Manager" c:type="GamiManager*"/>
          </instance-parameter>
          <parameter name="meetme" transfer-ownership="none">
            <doc xml:space="preserve">The MeetMe conference bridge number</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="action_id" transfer-ownership="none" optional="1">
            <doc xml:space="preserve">ActionID to ease response matching</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="response_func"
                     transfer-ownership="none"
                     closure="3">
            <doc xml:space="preserve">Callback for asynchronious operation. Passing %NULL will
          trigger synchronious mode</doc>
            <type name="ResponseFunc" c:type="GamiResponseFunc"/>
          </parameter>
          <parameter name="response_data" transfer-ownership="none">
            <doc xml:space="preserve">User data to pass to the callback. If %NULL is passed for
          @response_func, the parameter is ignored</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="meetme_mute"
              c:identifier="gami_manager_meetme_mute"
              introspectable="0"
              throws="1">
        <doc xml:space="preserve">Mutes @user_num in conference @meetme</doc>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve">%TRUE on success, %FALSE on failure</doc>
          <type name="Response" c:type="GamiResponse*"/>
        </return-value>
        <parameters>
          <instance-parameter name="ami" transfer-ownership="none">
            <doc xml:space="preserve">#GamiManager</doc>
            <type name="Manager" c:type="GamiManager*"/>
          </instance-parameter>
          <parameter name="meetme" transfer-ownership="none">
            <doc xml:space="preserve">The MeetMe conference bridge number</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="user_num" transfer-ownership="none">
            <doc xml:space="preserve">The user number in the specified bridge</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="action_id" transfer-ownership="none" optional="1">
            <doc xml:space="preserve">ActionID to ease response matching</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="response_func"
                     transfer-ownership="none"
                     closure="4">
            <doc xml:space="preserve">Callback for asynchronious operation. Passing %NULL will
          trigger synchronious mode</doc>
            <type name="ResponseFunc" c:type="GamiResponseFunc"/>
          </parameter>
          <parameter name="response_data" transfer-ownership="none">
            <doc xml:space="preserve">User data to pass to the callback. If %NULL is passed for
          @response_func, the parameter is ignored</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="meetme_unmute"
              c:identifier="gami_manager_meetme_unmute"
              introspectable="0"
              throws="1">
        <doc xml:space="preserve">Unmutes @user_num in conference @meetme</doc>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve">%TRUE on success, %FALSE on failure</doc>
          <type name="Response" c:type="GamiResponse*"/>
        </return-value>
        <parameters>
          <instance-parameter name="ami" transfer-ownership="none">
            <doc xml:space="preserve">#GamiManager</doc>
            <type name="Manager" c:type="GamiManager*"/>
          </instance-parameter>
          <parameter name="meetme" transfer-ownership="none">
            <doc xml:space="preserve">The MeetMe conference bridge number</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="user_num" transfer-ownership="none">
            <doc xml:space="preserve">The user number in the specified bridge</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="action_id" transfer-ownership="none" optional="1">
            <doc xml:space="preserve">ActionID to ease response matching</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="response_func"
                     transfer-ownership="none"
                     closure="4">
            <doc xml:space="preserve">Callback for asynchronious operation. Passing %NULL will
          trigger synchronious mode</doc>
            <type name="ResponseFunc" c:type="GamiResponseFunc"/>
          </parameter>
          <parameter name="response_data" transfer-ownership="none">
            <doc xml:space="preserve">User data to pass to the callback. If %NULL is passed for
          @response_func, the parameter is ignored</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="module_check"
              c:identifier="gami_manager_module_check"
              introspectable="0"
              throws="1">
        <doc xml:space="preserve">Check whether @module is loaded</doc>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve">%TRUE if @module is loaded, %FALSE otherwise</doc>
          <type name="Response" c:type="GamiResponse*"/>
        </return-value>
        <parameters>
          <instance-parameter name="ami" transfer-ownership="none">
            <doc xml:space="preserve">#GamiManager</doc>
            <type name="Manager" c:type="GamiManager*"/>
          </instance-parameter>
          <parameter name="module" transfer-ownership="none">
            <doc xml:space="preserve">Asterisk module name (not including extension)</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="action_id" transfer-ownership="none" optional="1">
            <doc xml:space="preserve">ActionID to ease response matching</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="response_func"
                     transfer-ownership="none"
                     closure="3">
            <doc xml:space="preserve">Callback for asynchronious operation. Passing %NULL will
          trigger synchronious mode</doc>
            <type name="ResponseFunc" c:type="GamiResponseFunc"/>
          </parameter>
          <parameter name="response_data" transfer-ownership="none">
            <doc xml:space="preserve">User data to pass to the callback. If %NULL is passed for
          @response_func, the parameter is ignored</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="module_load"
              c:identifier="gami_manager_module_load"
              introspectable="0"
              throws="1">
        <doc xml:space="preserve">Perform action indicated by @load_type for @module</doc>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve">%TRUE if @module is loaded, %FALSE otherwise</doc>
          <type name="Response" c:type="GamiResponse*"/>
        </return-value>
        <parameters>
          <instance-parameter name="ami" transfer-ownership="none">
            <doc xml:space="preserve">#GamiManager</doc>
            <type name="Manager" c:type="GamiManager*"/>
          </instance-parameter>
          <parameter name="module" transfer-ownership="none">
            <doc xml:space="preserve">Asterisk module name (not including extension)</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="load_type" transfer-ownership="none">
            <doc xml:space="preserve">Load action to perform (load, reload or unload)</doc>
            <type name="ModuleLoadType" c:type="GamiModuleLoadType"/>
          </parameter>
          <parameter name="action_id" transfer-ownership="none" optional="1">
            <doc xml:space="preserve">ActionID to ease response matching</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="response_func"
                     transfer-ownership="none"
                     closure="4">
            <doc xml:space="preserve">Callback for asynchronious operation. Passing %NULL will
          trigger synchronious mode</doc>
            <type name="ResponseFunc" c:type="GamiResponseFunc"/>
          </parameter>
          <parameter name="response_data" transfer-ownership="none">
            <doc xml:space="preserve">User data to pass to the callback. If %NULL is passed for
          @response_func, the parameter is ignored</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="monitor"
              c:identifier="gami_manager_monitor"
              introspectable="0"
              throws="1">
        <doc xml:space="preserve">Start monitoring @channel</doc>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve">%TRUE on success, %FALSE on failure</doc>
          <type name="Response" c:type="GamiResponse*"/>
        </return-value>
        <parameters>
          <instance-parameter name="ami" transfer-ownership="none">
            <doc xml:space="preserve">#GamiManager</doc>
            <type name="Manager" c:type="GamiManager*"/>
          </instance-parameter>
          <parameter name="channel" transfer-ownership="none">
            <doc xml:space="preserve">Channel to start monitoring</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="file" transfer-ownership="none" optional="1">
            <doc xml:space="preserve">Filename to use for recording</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="format" transfer-ownership="none" optional="1">
            <doc xml:space="preserve">Format to use for recording</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="mix" transfer-ownership="none" optional="1">
            <doc xml:space="preserve">Whether to mix in / out channel into one file</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
          <parameter name="action_id" transfer-ownership="none" optional="1">
            <doc xml:space="preserve">ActionID to ease response matching</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="response_func"
                     transfer-ownership="none"
                     closure="6">
            <doc xml:space="preserve">Callback for asynchronious operation. Passing %NULL will
          trigger synchronious mode</doc>
            <type name="ResponseFunc" c:type="GamiResponseFunc"/>
          </parameter>
          <parameter name="response_data" transfer-ownership="none">
            <doc xml:space="preserve">User data to pass to the callback. If %NULL is passed for
          @response_func, the parameter is ignored</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="originate"
              c:identifier="gami_manager_originate"
              introspectable="0"
              throws="1">
        <doc xml:space="preserve">Generate an outbound call from Asterisk and connect the channel to
Exten / Context / Priority or execute Application (Data) on the channel</doc>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve">%TRUE on success, %FALSE on failure</doc>
          <type name="Response" c:type="GamiResponse*"/>
        </return-value>
        <parameters>
          <instance-parameter name="ami" transfer-ownership="none">
            <doc xml:space="preserve">#GamiManager</doc>
            <type name="Manager" c:type="GamiManager*"/>
          </instance-parameter>
          <parameter name="channel" transfer-ownership="none">
            <doc xml:space="preserve">The name of the channel to call. Once the channel has answered,
          the call will be passed to the specified exten/context/priority or
          application/data</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="application_exten" transfer-ownership="none">
            <doc xml:space="preserve">Extension to dial or application to call (depending on
                    @priority)</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="data_context" transfer-ownership="none">
            <doc xml:space="preserve">Context to dial or data to pass to application (depending on
               @priority)</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="priority" transfer-ownership="none" optional="1">
            <doc xml:space="preserve">Priority to dial - if %NULL, @application_exten will
           be interpretated as application and @data_context as data</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="timeout" transfer-ownership="none" optional="1">
            <doc xml:space="preserve">Time to wait for @channel to answer in milliseconds</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
          <parameter name="caller_id" transfer-ownership="none" optional="1">
            <doc xml:space="preserve">CallerID to set on the outgoing channel</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="account" transfer-ownership="none" optional="1">
            <doc xml:space="preserve">AccountCode to set for the call</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="variables" transfer-ownership="none" optional="1">
            <doc xml:space="preserve">A #GHashTable with name / value pairs to pass as
            channel variables</doc>
            <type name="GLib.HashTable" c:type="const GHashTable*">
              <type name="gpointer" c:type="gpointer"/>
              <type name="gpointer" c:type="gpointer"/>
            </type>
          </parameter>
          <parameter name="async" transfer-ownership="none" optional="1">
            <doc xml:space="preserve">Whether to originate call asynchronously - this allows
        to originate further calls before a response is received</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
          <parameter name="action_id" transfer-ownership="none" optional="1">
            <doc xml:space="preserve">ActionID to ease response matching</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="response_func"
                     transfer-ownership="none"
                     closure="11">
            <doc xml:space="preserve">Callback for asynchronious operation. Passing %NULL will
          trigger synchronious mode</doc>
            <type name="ResponseFunc" c:type="GamiResponseFunc"/>
          </parameter>
          <parameter name="response_data" transfer-ownership="none">
            <doc xml:space="preserve">User data to pass to the callback. If %NULL is passed for
          @response_func, the parameter is ignored</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="park"
              c:identifier="gami_manager_park"
              introspectable="0"
              throws="1">
        <doc xml:space="preserve">Park a channel in the parking lot</doc>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve">%TRUE on success, %FALSE on failure</doc>
          <type name="Response" c:type="GamiResponse*"/>
        </return-value>
        <parameters>
          <instance-parameter name="ami" transfer-ownership="none">
            <doc xml:space="preserve">#GamiManager</doc>
            <type name="Manager" c:type="GamiManager*"/>
          </instance-parameter>
          <parameter name="channel" transfer-ownership="none">
            <doc xml:space="preserve">Channel name to park</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="channel2" transfer-ownership="none">
            <doc xml:space="preserve">Channel to announce park info to (and return the call to if the
           parking times out)</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="timeout" transfer-ownership="none" optional="1">
            <doc xml:space="preserve">Milliseconds to wait before callback</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
          <parameter name="action_id" transfer-ownership="none" optional="1">
            <doc xml:space="preserve">ActionID to ease response matching</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="response_func"
                     transfer-ownership="none"
                     closure="5">
            <doc xml:space="preserve">Callback for asynchronious operation. Passing %NULL will
          trigger synchronious mode</doc>
            <type name="ResponseFunc" c:type="GamiResponseFunc"/>
          </parameter>
          <parameter name="response_data" transfer-ownership="none">
            <doc xml:space="preserve">User data to pass to the callback. If %NULL is passed for
          @response_func, the parameter is ignored</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="parked_calls"
              c:identifier="gami_manager_parked_calls"
              introspectable="0"
              throws="1">
        <doc xml:space="preserve">Retrieve a list of parked calls</doc>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve">#GSList of parked calls (stored as #GHashTable) on success,
         %NULL on failure</doc>
          <type name="Response" c:type="GamiResponse*"/>
        </return-value>
        <parameters>
          <instance-parameter name="ami" transfer-ownership="none">
            <doc xml:space="preserve">#GamiManager</doc>
            <type name="Manager" c:type="GamiManager*"/>
          </instance-parameter>
          <parameter name="action_id" transfer-ownership="none" optional="1">
            <doc xml:space="preserve">ActionID to ease response matching</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="response_func"
                     transfer-ownership="none"
                     closure="2">
            <doc xml:space="preserve">Callback for asynchronious operation. Passing %NULL will
          trigger synchronious mode</doc>
            <type name="ResponseFunc" c:type="GamiResponseFunc"/>
          </parameter>
          <parameter name="response_data" transfer-ownership="none">
            <doc xml:space="preserve">User data to pass to the callback. If %NULL is passed for
          @response_func, the parameter is ignored</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="pause_monitor"
              c:identifier="gami_manager_pause_monitor"
              introspectable="0"
              throws="1">
        <doc xml:space="preserve">Pause monitoring of @channel</doc>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve">%TRUE on success, %FALSE on failure</doc>
          <type name="Response" c:type="GamiResponse*"/>
        </return-value>
        <parameters>
          <instance-parameter name="ami" transfer-ownership="none">
            <doc xml:space="preserve">#GamiManager</doc>
            <type name="Manager" c:type="GamiManager*"/>
          </instance-parameter>
          <parameter name="channel" transfer-ownership="none">
            <doc xml:space="preserve">Monitored channel</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="action_id" transfer-ownership="none" optional="1">
            <doc xml:space="preserve">ActionID to ease response matching</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="response_func"
                     transfer-ownership="none"
                     closure="3">
            <doc xml:space="preserve">Callback for asynchronious operation. Passing %NULL will
          trigger synchronious mode</doc>
            <type name="ResponseFunc" c:type="GamiResponseFunc"/>
          </parameter>
          <parameter name="response_data" transfer-ownership="none">
            <doc xml:space="preserve">User data to pass to the callback. If %NULL is passed for
          @response_func, the parameter is ignored</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="ping"
              c:identifier="gami_manager_ping"
              introspectable="0"
              throws="1">
        <doc xml:space="preserve">Query the Asterisk server to make sure it is still responding. May be used
to keep the connection alive</doc>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve">%TRUE on success, %FALSE on failure</doc>
          <type name="Response" c:type="GamiResponse*"/>
        </return-value>
        <parameters>
          <instance-parameter name="ami" transfer-ownership="none">
            <doc xml:space="preserve">#GamiManager</doc>
            <type name="Manager" c:type="GamiManager*"/>
          </instance-parameter>
          <parameter name="action_id" transfer-ownership="none" optional="1">
            <doc xml:space="preserve">ActionID to ease response matching</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="response_func"
                     transfer-ownership="none"
                     closure="2">
            <doc xml:space="preserve">Callback for asynchronious operation. Passing %NULL will
          trigger synchronious mode</doc>
            <type name="ResponseFunc" c:type="GamiResponseFunc"/>
          </parameter>
          <parameter name="response_data" transfer-ownership="none">
            <doc xml:space="preserve">User data to pass to the callback. If %NULL is passed for
          @response_func, the parameter is ignored</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="play_dtmf"
              c:identifier="gami_manager_play_dtmf"
              introspectable="0"
              throws="1">
        <doc xml:space="preserve">Play a DTMF digit @digit on @channel</doc>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve">%TRUE on success, %FALSE on failure</doc>
          <type name="Response" c:type="GamiResponse*"/>
        </return-value>
        <parameters>
          <instance-parameter name="ami" transfer-ownership="none">
            <doc xml:space="preserve">#GamiManager</doc>
            <type name="Manager" c:type="GamiManager*"/>
          </instance-parameter>
          <parameter name="channel" transfer-ownership="none">
            <doc xml:space="preserve">The name of the channel to send @digit to</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="digit" transfer-ownership="none">
            <doc xml:space="preserve">The DTMF digit to play on @channel</doc>
            <type name="gchar" c:type="gchar"/>
          </parameter>
          <parameter name="action_id" transfer-ownership="none" optional="1">
            <doc xml:space="preserve">ActionID to ease response matching</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="response_func"
                     transfer-ownership="none"
                     closure="4">
            <doc xml:space="preserve">Callback for asynchronious operation. Passing %NULL will
          trigger synchronious mode</doc>
            <type name="ResponseFunc" c:type="GamiResponseFunc"/>
          </parameter>
          <parameter name="response_data" transfer-ownership="none">
            <doc xml:space="preserve">User data to pass to the callback. If %NULL is passed for
          @response_func, the parameter is ignored</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="queue_add"
              c:identifier="gami_manager_queue_add"
              introspectable="0"
              throws="1">
        <doc xml:space="preserve">Add @iface to @queue</doc>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve">%TRUE on success, %FALSE on failure</doc>
          <type name="Response" c:type="GamiResponse*"/>
        </return-value>
        <parameters>
          <instance-parameter name="ami" transfer-ownership="none">
            <doc xml:space="preserve">#GamiManager</doc>
            <type name="Manager" c:type="GamiManager*"/>
          </instance-parameter>
          <parameter name="queue" transfer-ownership="none">
            <doc xml:space="preserve">Existing queue to add member</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="iface" transfer-ownership="none">
            <doc xml:space="preserve">Member interface to add to @queue</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="penalty" transfer-ownership="none">
            <doc xml:space="preserve">Penalty for new member</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
          <parameter name="paused" transfer-ownership="none">
            <doc xml:space="preserve">whether @iface should be initially paused</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
          <parameter name="action_id" transfer-ownership="none" optional="1">
            <doc xml:space="preserve">ActionID to ease response matching</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="response_func"
                     transfer-ownership="none"
                     closure="6">
            <doc xml:space="preserve">Callback for asynchronious operation. Passing %NULL will
          trigger synchronious mode</doc>
            <type name="ResponseFunc" c:type="GamiResponseFunc"/>
          </parameter>
          <parameter name="response_data" transfer-ownership="none">
            <doc xml:space="preserve">User data to pass to the callback. If %NULL is passed for
          @response_func, the parameter is ignored</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="queue_log"
              c:identifier="gami_manager_queue_log"
              introspectable="0"
              throws="1">
        <doc xml:space="preserve">Generate a queue_log entry for @queue</doc>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve">%TRUE on success, %FALSE on failure</doc>
          <type name="Response" c:type="GamiResponse*"/>
        </return-value>
        <parameters>
          <instance-parameter name="ami" transfer-ownership="none">
            <doc xml:space="preserve">#GamiManager</doc>
            <type name="Manager" c:type="GamiManager*"/>
          </instance-parameter>
          <parameter name="queue" transfer-ownership="none">
            <doc xml:space="preserve">Queue to generate queue_log entry for</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="event" transfer-ownership="none">
            <doc xml:space="preserve">Log event to generate</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="action_id" transfer-ownership="none" optional="1">
            <doc xml:space="preserve">ActionID to ease response matching</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="response_func"
                     transfer-ownership="none"
                     closure="4">
            <doc xml:space="preserve">Callback for asynchronious operation. Passing %NULL will
          trigger synchronious mode</doc>
            <type name="ResponseFunc" c:type="GamiResponseFunc"/>
          </parameter>
          <parameter name="response_data" transfer-ownership="none">
            <doc xml:space="preserve">User data to pass to the callback. If %NULL is passed for
          @response_func, the parameter is ignored</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="queue_pause"
              c:identifier="gami_manager_queue_pause"
              introspectable="0"
              throws="1">
        <doc xml:space="preserve">(Un)pause @iface</doc>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve">%TRUE on success, %FALSE on failure</doc>
          <type name="Response" c:type="GamiResponse*"/>
        </return-value>
        <parameters>
          <instance-parameter name="ami" transfer-ownership="none">
            <doc xml:space="preserve">#GamiManager</doc>
            <type name="Manager" c:type="GamiManager*"/>
          </instance-parameter>
          <parameter name="queue" transfer-ownership="none" optional="1">
            <doc xml:space="preserve">Existing queue for which @iface should be (un)paused</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="iface" transfer-ownership="none">
            <doc xml:space="preserve">Member interface (un)pause</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="paused" transfer-ownership="none">
            <doc xml:space="preserve">Whether to pause or unpause @iface</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
          <parameter name="action_id" transfer-ownership="none" optional="1">
            <doc xml:space="preserve">ActionID to ease response matching</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="response_func"
                     transfer-ownership="none"
                     closure="5">
            <doc xml:space="preserve">Callback for asynchronious operation. Passing %NULL will
          trigger synchronious mode</doc>
            <type name="ResponseFunc" c:type="GamiResponseFunc"/>
          </parameter>
          <parameter name="response_data" transfer-ownership="none">
            <doc xml:space="preserve">User data to pass to the callback. If %NULL is passed for
          @response_func, the parameter is ignored</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="queue_penalty"
              c:identifier="gami_manager_queue_penalty"
              introspectable="0"
              throws="1">
        <doc xml:space="preserve">Change the penalty value of @iface</doc>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve">%TRUE on success, %FALSE on failure</doc>
          <type name="Response" c:type="GamiResponse*"/>
        </return-value>
        <parameters>
          <instance-parameter name="ami" transfer-ownership="none">
            <doc xml:space="preserve">#GamiManager</doc>
            <type name="Manager" c:type="GamiManager*"/>
          </instance-parameter>
          <parameter name="queue" transfer-ownership="none" optional="1">
            <doc xml:space="preserve">Limit @penalty change to existing queue</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="iface" transfer-ownership="none">
            <doc xml:space="preserve">Member interface change penalty for</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="penalty" transfer-ownership="none">
            <doc xml:space="preserve">New penalty to set for @iface</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
          <parameter name="action_id" transfer-ownership="none" optional="1">
            <doc xml:space="preserve">ActionID to ease response matching</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="response_func"
                     transfer-ownership="none"
                     closure="5">
            <doc xml:space="preserve">Callback for asynchronious operation. Passing %NULL will
          trigger synchronious mode</doc>
            <type name="ResponseFunc" c:type="GamiResponseFunc"/>
          </parameter>
          <parameter name="response_data" transfer-ownership="none">
            <doc xml:space="preserve">User data to pass to the callback. If %NULL is passed for
          @response_func, the parameter is ignored</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="queue_remove"
              c:identifier="gami_manager_queue_remove"
              introspectable="0"
              throws="1">
        <doc xml:space="preserve">Remove @iface from @queue</doc>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve">%TRUE on success, %FALSE on failure</doc>
          <type name="Response" c:type="GamiResponse*"/>
        </return-value>
        <parameters>
          <instance-parameter name="ami" transfer-ownership="none">
            <doc xml:space="preserve">#GamiManager</doc>
            <type name="Manager" c:type="GamiManager*"/>
          </instance-parameter>
          <parameter name="queue" transfer-ownership="none">
            <doc xml:space="preserve">Existing queue to remove member from</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="iface" transfer-ownership="none">
            <doc xml:space="preserve">Member interface to remove from @queue</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="action_id" transfer-ownership="none" optional="1">
            <doc xml:space="preserve">ActionID to ease response matching</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="response_func"
                     transfer-ownership="none"
                     closure="4">
            <doc xml:space="preserve">Callback for asynchronious operation. Passing %NULL will
          trigger synchronious mode</doc>
            <type name="ResponseFunc" c:type="GamiResponseFunc"/>
          </parameter>
          <parameter name="response_data" transfer-ownership="none">
            <doc xml:space="preserve">User data to pass to the callback. If %NULL is passed for
          @response_func, the parameter is ignored</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="queue_summary"
              c:identifier="gami_manager_queue_summary"
              introspectable="0"
              throws="1">
        <doc xml:space="preserve">Get summary of queue statistics</doc>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve">#GSList of queue statistics (stored as #GHashTable) on success,
         %NULL on failure</doc>
          <type name="Response" c:type="GamiResponse*"/>
        </return-value>
        <parameters>
          <instance-parameter name="ami" transfer-ownership="none">
            <doc xml:space="preserve">#GamiManager</doc>
            <type name="Manager" c:type="GamiManager*"/>
          </instance-parameter>
          <parameter name="queue" transfer-ownership="none" optional="1">
            <doc xml:space="preserve">Only send summary information for @queue</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="action_id" transfer-ownership="none" optional="1">
            <doc xml:space="preserve">ActionID to ease response matching</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="response_func"
                     transfer-ownership="none"
                     closure="3">
            <doc xml:space="preserve">Callback for asynchronious operation. Passing %NULL will
          trigger synchronious mode</doc>
            <type name="ResponseFunc" c:type="GamiResponseFunc"/>
          </parameter>
          <parameter name="response_data" transfer-ownership="none">
            <doc xml:space="preserve">User data to pass to the callback. If %NULL is passed for
          @response_func, the parameter is ignored</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="redirect"
              c:identifier="gami_manager_redirect"
              introspectable="0"
              throws="1">
        <doc xml:space="preserve">Redirect @channel to @exten@@context:@priority</doc>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve">%TRUE on success, %FALSE on failure</doc>
          <type name="Response" c:type="GamiResponse*"/>
        </return-value>
        <parameters>
          <instance-parameter name="ami" transfer-ownership="none">
            <doc xml:space="preserve">#GamiManager</doc>
            <type name="Manager" c:type="GamiManager*"/>
          </instance-parameter>
          <parameter name="channel" transfer-ownership="none">
            <doc xml:space="preserve">The name of the channel redirect</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="extra_channel"
                     transfer-ownership="none"
                     optional="1">
            <doc xml:space="preserve">Second call leg to transfer</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="exten" transfer-ownership="none">
            <doc xml:space="preserve">The extension @channel should be redirected to</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="context" transfer-ownership="none">
            <doc xml:space="preserve">The context @channel should be redirected to</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="priority" transfer-ownership="none">
            <doc xml:space="preserve">The priority @channel should be redirected to</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="action_id" transfer-ownership="none" optional="1">
            <doc xml:space="preserve">ActionID to ease response matching</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="response_func"
                     transfer-ownership="none"
                     closure="7">
            <doc xml:space="preserve">Callback for asynchronious operation. Passing %NULL will
          trigger synchronious mode</doc>
            <type name="ResponseFunc" c:type="GamiResponseFunc"/>
          </parameter>
          <parameter name="response_data" transfer-ownership="none">
            <doc xml:space="preserve">User data to pass to the callback. If %NULL is passed for
          @response_func, the parameter is ignored</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="reload"
              c:identifier="gami_manager_reload"
              introspectable="0"
              throws="1">
        <doc xml:space="preserve">Reload @module or all modules</doc>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve">%TRUE on success, %FALSE on failure</doc>
          <type name="Response" c:type="GamiResponse*"/>
        </return-value>
        <parameters>
          <instance-parameter name="ami" transfer-ownership="none">
            <doc xml:space="preserve">#GamiManager</doc>
            <type name="Manager" c:type="GamiManager*"/>
          </instance-parameter>
          <parameter name="module" transfer-ownership="none" optional="1">
            <doc xml:space="preserve">The name of the module to reload (not including
          extension)</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="action_id" transfer-ownership="none" optional="1">
            <doc xml:space="preserve">ActionID to ease response matching</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="response_func"
                     transfer-ownership="none"
                     closure="3">
            <doc xml:space="preserve">Callback for asynchronious operation. Passing %NULL will
          trigger synchronious mode</doc>
            <type name="ResponseFunc" c:type="GamiResponseFunc"/>
          </parameter>
          <parameter name="response_data" transfer-ownership="none">
            <doc xml:space="preserve">User data to pass to the callback. If %NULL is passed for
          @response_func, the parameter is ignored</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="send_text"
              c:identifier="gami_manager_send_text"
              introspectable="0"
              throws="1">
        <doc xml:space="preserve">Send @message to @channel</doc>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve">%TRUE on success, %FALSE on failure</doc>
          <type name="Response" c:type="GamiResponse*"/>
        </return-value>
        <parameters>
          <instance-parameter name="ami" transfer-ownership="none">
            <doc xml:space="preserve">#GamiManager</doc>
            <type name="Manager" c:type="GamiManager*"/>
          </instance-parameter>
          <parameter name="channel" transfer-ownership="none">
            <doc xml:space="preserve">The name of the channel to send @message to</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="message" transfer-ownership="none">
            <doc xml:space="preserve">The message to send to @channel</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="action_id" transfer-ownership="none" optional="1">
            <doc xml:space="preserve">ActionID to ease response matching</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="response_func"
                     transfer-ownership="none"
                     closure="4">
            <doc xml:space="preserve">Callback for asynchronious operation. Passing %NULL will
          trigger synchronious mode</doc>
            <type name="ResponseFunc" c:type="GamiResponseFunc"/>
          </parameter>
          <parameter name="response_data" transfer-ownership="none">
            <doc xml:space="preserve">User data to pass to the callback. If %NULL is passed for
          @response_func, the parameter is ignored</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_cdr_user_field"
              c:identifier="gami_manager_set_cdr_user_field"
              introspectable="0"
              throws="1">
        <doc xml:space="preserve">Set CDR user field for @channel</doc>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve">%TRUE on success, %FALSE on failure</doc>
          <type name="Response" c:type="GamiResponse*"/>
        </return-value>
        <parameters>
          <instance-parameter name="ami" transfer-ownership="none">
            <doc xml:space="preserve">#GamiManager</doc>
            <type name="Manager" c:type="GamiManager*"/>
          </instance-parameter>
          <parameter name="channel" transfer-ownership="none">
            <doc xml:space="preserve">The name of the channel to set @user_field for</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="user_field" transfer-ownership="none">
            <doc xml:space="preserve">The value for the CDR user field</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="append" transfer-ownership="none" optional="1">
            <doc xml:space="preserve">Whether to append @user_field to current value</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
          <parameter name="action_id" transfer-ownership="none" optional="1">
            <doc xml:space="preserve">ActionID to ease response matching</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="response_func"
                     transfer-ownership="none"
                     closure="5">
            <doc xml:space="preserve">Callback for asynchronious operation. Passing %NULL will
          trigger synchronious mode</doc>
            <type name="ResponseFunc" c:type="GamiResponseFunc"/>
          </parameter>
          <parameter name="response_data" transfer-ownership="none">
            <doc xml:space="preserve">User data to pass to the callback. If %NULL is passed for
          @response_func, the parameter is ignored</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_var"
              c:identifier="gami_manager_set_var"
              introspectable="0"
              throws="1">
        <doc xml:space="preserve">Set @variable (optionally on channel @channel) to @value</doc>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve">%TRUE on success, %FALSE on failure</doc>
          <type name="Response" c:type="GamiResponse*"/>
        </return-value>
        <parameters>
          <instance-parameter name="ami" transfer-ownership="none">
            <doc xml:space="preserve">#GamiManager</doc>
            <type name="Manager" c:type="GamiManager*"/>
          </instance-parameter>
          <parameter name="channel" transfer-ownership="none" optional="1">
            <doc xml:space="preserve">Channel to set variable for</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="variable" transfer-ownership="none">
            <doc xml:space="preserve">Name of the variable to set</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="value" transfer-ownership="none">
            <doc xml:space="preserve">New value for @variable</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="action_id" transfer-ownership="none" optional="1">
            <doc xml:space="preserve">ActionID to ease response matching</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="response_func"
                     transfer-ownership="none"
                     closure="5">
            <doc xml:space="preserve">Callback for asynchronious operation. Passing %NULL will
          trigger synchronious mode</doc>
            <type name="ResponseFunc" c:type="GamiResponseFunc"/>
          </parameter>
          <parameter name="response_data" transfer-ownership="none">
            <doc xml:space="preserve">User data to pass to the callback. If %NULL is passed for
          @response_func, the parameter is ignored</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="sip_peers"
              c:identifier="gami_manager_sip_peers"
              introspectable="0"
              throws="1">
        <doc xml:space="preserve">Retrieve a list of SIP peers</doc>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve">#GSList of SIP peers (stored as #GHashTable) on success,
         %NULL on failure</doc>
          <type name="Response" c:type="GamiResponse*"/>
        </return-value>
        <parameters>
          <instance-parameter name="ami" transfer-ownership="none">
            <doc xml:space="preserve">#GamiManager</doc>
            <type name="Manager" c:type="GamiManager*"/>
          </instance-parameter>
          <parameter name="action_id" transfer-ownership="none" optional="1">
            <doc xml:space="preserve">ActionID to ease response matching</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="response_func"
                     transfer-ownership="none"
                     closure="2">
            <doc xml:space="preserve">Callback for asynchronious operation. Passing %NULL will
          trigger synchronious mode</doc>
            <type name="ResponseFunc" c:type="GamiResponseFunc"/>
          </parameter>
          <parameter name="response_data" transfer-ownership="none">
            <doc xml:space="preserve">User data to pass to the callback. If %NULL is passed for
          @response_func, the parameter is ignored</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="sip_show_peer"
              c:identifier="gami_manager_sip_show_peer"
              introspectable="0"
              throws="1">
        <doc xml:space="preserve">Retrieve status information for @peer</doc>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve">#GHashTable of peer status information on success, %NULL on failure</doc>
          <type name="Response" c:type="GamiResponse*"/>
        </return-value>
        <parameters>
          <instance-parameter name="ami" transfer-ownership="none">
            <doc xml:space="preserve">#GamiManager</doc>
            <type name="Manager" c:type="GamiManager*"/>
          </instance-parameter>
          <parameter name="peer" transfer-ownership="none">
            <doc xml:space="preserve">SIP peer to get status information for</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="action_id" transfer-ownership="none" optional="1">
            <doc xml:space="preserve">ActionID to ease response matching</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="response_func"
                     transfer-ownership="none"
                     closure="3">
            <doc xml:space="preserve">Callback for asynchronious operation. Passing %NULL will
          trigger synchronious mode</doc>
            <type name="ResponseFunc" c:type="GamiResponseFunc"/>
          </parameter>
          <parameter name="response_data" transfer-ownership="none">
            <doc xml:space="preserve">User data to pass to the callback. If %NULL is passed for
          @response_func, the parameter is ignored</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="sip_show_registry"
              c:identifier="gami_manager_sip_show_registry"
              introspectable="0"
              throws="1">
        <doc xml:space="preserve">Retrieve registry information of SIP peers</doc>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve">#GSList of registry information (stored as #GHashTable) on success,
         %NULL on failure</doc>
          <type name="Response" c:type="GamiResponse*"/>
        </return-value>
        <parameters>
          <instance-parameter name="ami" transfer-ownership="none">
            <doc xml:space="preserve">#GamiManager</doc>
            <type name="Manager" c:type="GamiManager*"/>
          </instance-parameter>
          <parameter name="action_id" transfer-ownership="none" optional="1">
            <doc xml:space="preserve">ActionID to ease response matching</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="response_func"
                     transfer-ownership="none"
                     closure="2">
            <doc xml:space="preserve">Callback for asynchronious operation. Passing %NULL will
          trigger synchronious mode</doc>
            <type name="ResponseFunc" c:type="GamiResponseFunc"/>
          </parameter>
          <parameter name="response_data" transfer-ownership="none">
            <doc xml:space="preserve">User data to pass to the callback. If %NULL is passed for
          @response_func, the parameter is ignored</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="status"
              c:identifier="gami_manager_status"
              introspectable="0"
              throws="1">
        <doc xml:space="preserve">Retrieve status information of active channels (or @channel)</doc>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve">#GSList of status information (stored as #GHashTable) on success,
         %NULL on failure</doc>
          <type name="Response" c:type="GamiResponse*"/>
        </return-value>
        <parameters>
          <instance-parameter name="ami" transfer-ownership="none">
            <doc xml:space="preserve">#GamiManager</doc>
            <type name="Manager" c:type="GamiManager*"/>
          </instance-parameter>
          <parameter name="channel" transfer-ownership="none" optional="1">
            <doc xml:space="preserve">Only retrieve status information for this channel</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="action_id" transfer-ownership="none" optional="1">
            <doc xml:space="preserve">ActionID to ease response matching</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="response_func"
                     transfer-ownership="none"
                     closure="3">
            <doc xml:space="preserve">Callback for asynchronious operation. Passing %NULL will
          trigger synchronious mode</doc>
            <type name="ResponseFunc" c:type="GamiResponseFunc"/>
          </parameter>
          <parameter name="response_data" transfer-ownership="none">
            <doc xml:space="preserve">User data to pass to the callback. If %NULL is passed for
          @response_func, the parameter is ignored</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="stop_monitor"
              c:identifier="gami_manager_stop_monitor"
              introspectable="0"
              throws="1">
        <doc xml:space="preserve">Stop monitoring @channel</doc>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve">%TRUE on success, %FALSE on failure</doc>
          <type name="Response" c:type="GamiResponse*"/>
        </return-value>
        <parameters>
          <instance-parameter name="ami" transfer-ownership="none">
            <doc xml:space="preserve">#GamiManager</doc>
            <type name="Manager" c:type="GamiManager*"/>
          </instance-parameter>
          <parameter name="channel" transfer-ownership="none">
            <doc xml:space="preserve">Monitored channel</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="action_id" transfer-ownership="none" optional="1">
            <doc xml:space="preserve">ActionID to ease response matching</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="response_func"
                     transfer-ownership="none"
                     closure="3">
            <doc xml:space="preserve">Callback for asynchronious operation. Passing %NULL will
          trigger synchronious mode</doc>
            <type name="ResponseFunc" c:type="GamiResponseFunc"/>
          </parameter>
          <parameter name="response_data" transfer-ownership="none">
            <doc xml:space="preserve">User data to pass to the callback. If %NULL is passed for
          @response_func, the parameter is ignored</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="unpause_monitor"
              c:identifier="gami_manager_unpause_monitor"
              introspectable="0"
              throws="1">
        <doc xml:space="preserve">Continue monitoring of @channel</doc>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve">%TRUE on success, %FALSE on failure</doc>
          <type name="Response" c:type="GamiResponse*"/>
        </return-value>
        <parameters>
          <instance-parameter name="ami" transfer-ownership="none">
            <doc xml:space="preserve">#GamiManager</doc>
            <type name="Manager" c:type="GamiManager*"/>
          </instance-parameter>
          <parameter name="channel" transfer-ownership="none">
            <doc xml:space="preserve">Monitored channel</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="action_id" transfer-ownership="none" optional="1">
            <doc xml:space="preserve">ActionID to ease response matching</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="response_func"
                     transfer-ownership="none"
                     closure="3">
            <doc xml:space="preserve">Callback for asynchronious operation. Passing %NULL will
          trigger synchronious mode</doc>
            <type name="ResponseFunc" c:type="GamiResponseFunc"/>
          </parameter>
          <parameter name="response_data" transfer-ownership="none">
            <doc xml:space="preserve">User data to pass to the callback. If %NULL is passed for
          @response_func, the parameter is ignored</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="user_event"
              c:identifier="gami_manager_user_event"
              introspectable="0"
              throws="1">
        <doc xml:space="preserve">Send the user defined event @user_event with an optional payload of @headers</doc>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve">%TRUE on success, %FALSE on failure</doc>
          <type name="Response" c:type="GamiResponse*"/>
        </return-value>
        <parameters>
          <instance-parameter name="ami" transfer-ownership="none">
            <doc xml:space="preserve">#GamiManager</doc>
            <type name="Manager" c:type="GamiManager*"/>
          </instance-parameter>
          <parameter name="user_event" transfer-ownership="none">
            <doc xml:space="preserve">The user defined event to send</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="headers" transfer-ownership="none" optional="1">
            <doc xml:space="preserve">Optional header to add to the event</doc>
            <type name="GLib.HashTable" c:type="const GHashTable*">
              <type name="gpointer" c:type="gpointer"/>
              <type name="gpointer" c:type="gpointer"/>
            </type>
          </parameter>
          <parameter name="action_id" transfer-ownership="none" optional="1">
            <doc xml:space="preserve">ActionID to ease response matching</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="response_func"
                     transfer-ownership="none"
                     closure="4">
            <doc xml:space="preserve">Callback for asynchronious operation. Passing %NULL will
          trigger synchronious mode</doc>
            <type name="ResponseFunc" c:type="GamiResponseFunc"/>
          </parameter>
          <parameter name="response_data" transfer-ownership="none">
            <doc xml:space="preserve">User data to pass to the callback. If %NULL is passed for
          @response_func, the parameter is ignored</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="voicemail_users_list"
              c:identifier="gami_manager_voicemail_users_list"
              introspectable="0"
              throws="1">
        <doc xml:space="preserve">Retrieve a list of voicemail users</doc>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve">#GSList of voicemail users (stored as #GHashTable) on success,
         %NULL on failure</doc>
          <type name="Response" c:type="GamiResponse*"/>
        </return-value>
        <parameters>
          <instance-parameter name="ami" transfer-ownership="none">
            <doc xml:space="preserve">#GamiManager</doc>
            <type name="Manager" c:type="GamiManager*"/>
          </instance-parameter>
          <parameter name="action_id" transfer-ownership="none" optional="1">
            <doc xml:space="preserve">ActionID to ease response matching</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="response_func"
                     transfer-ownership="none"
                     closure="2">
            <doc xml:space="preserve">Callback for asynchronious operation. Passing %NULL will
          trigger synchronious mode</doc>
            <type name="ResponseFunc" c:type="GamiResponseFunc"/>
          </parameter>
          <parameter name="response_data" transfer-ownership="none">
            <doc xml:space="preserve">User data to pass to the callback. If %NULL is passed for
          @response_func, the parameter is ignored</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="wait_event"
              c:identifier="gami_manager_wait_event"
              introspectable="0"
              throws="1">
        <doc xml:space="preserve">Wait for an event to occur</doc>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve">%TRUE on success, %FALSE on failure</doc>
          <type name="Response" c:type="GamiResponse*"/>
        </return-value>
        <parameters>
          <instance-parameter name="ami" transfer-ownership="none">
            <doc xml:space="preserve">#GamiManager</doc>
            <type name="Manager" c:type="GamiManager*"/>
          </instance-parameter>
          <parameter name="timeout" transfer-ownership="none" optional="1">
            <doc xml:space="preserve">Maximum time to wait for events in seconds</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
          <parameter name="action_id" transfer-ownership="none" optional="1">
            <doc xml:space="preserve">ActionID to ease response matching</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="response_func"
                     transfer-ownership="none"
                     closure="3">
            <doc xml:space="preserve">Callback for asynchronious operation. Passing %NULL will
          trigger synchronious mode</doc>
            <type name="ResponseFunc" c:type="GamiResponseFunc"/>
          </parameter>
          <parameter name="response_data" transfer-ownership="none">
            <doc xml:space="preserve">User data to pass to the callback. If %NULL is passed for
          @response_func, the parameter is ignored</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="zap_dial_offhook"
              c:identifier="gami_manager_zap_dial_offhook"
              introspectable="0"
              throws="1">
        <doc xml:space="preserve">Dial over ZAP channel while offhook</doc>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve">%TRUE on success, %FALSE on failure</doc>
          <type name="Response" c:type="GamiResponse*"/>
        </return-value>
        <parameters>
          <instance-parameter name="ami" transfer-ownership="none">
            <doc xml:space="preserve">#GamiManager</doc>
            <type name="Manager" c:type="GamiManager*"/>
          </instance-parameter>
          <parameter name="zap_channel" transfer-ownership="none">
            <doc xml:space="preserve">The ZAP channel on which to dial @number</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="number" transfer-ownership="none">
            <doc xml:space="preserve">The number to dial</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="action_id" transfer-ownership="none" optional="1">
            <doc xml:space="preserve">ActionID to ease response matching</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="response_func"
                     transfer-ownership="none"
                     closure="4">
            <doc xml:space="preserve">Callback for asynchronious operation. Passing %NULL will
          trigger synchronious mode</doc>
            <type name="ResponseFunc" c:type="GamiResponseFunc"/>
          </parameter>
          <parameter name="response_data" transfer-ownership="none">
            <doc xml:space="preserve">User data to pass to the callback. If %NULL is passed for
          @response_func, the parameter is ignored</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="zap_dnd_off"
              c:identifier="gami_manager_zap_dnd_off"
              introspectable="0"
              throws="1">
        <doc xml:space="preserve">Set DND (Do Not Disturb) status on @zap_channel to off</doc>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve">%TRUE on success, %FALSE on failure</doc>
          <type name="Response" c:type="GamiResponse*"/>
        </return-value>
        <parameters>
          <instance-parameter name="ami" transfer-ownership="none">
            <doc xml:space="preserve">#GamiManager</doc>
            <type name="Manager" c:type="GamiManager*"/>
          </instance-parameter>
          <parameter name="zap_channel" transfer-ownership="none">
            <doc xml:space="preserve">The ZAP channel on which to turn off DND status</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="action_id" transfer-ownership="none" optional="1">
            <doc xml:space="preserve">ActionID to ease response matching</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="response_func"
                     transfer-ownership="none"
                     closure="3">
            <doc xml:space="preserve">Callback for asynchronious operation. Passing %NULL will
          trigger synchronious mode</doc>
            <type name="ResponseFunc" c:type="GamiResponseFunc"/>
          </parameter>
          <parameter name="response_data" transfer-ownership="none">
            <doc xml:space="preserve">User data to pass to the callback. If %NULL is passed for
          @response_func, the parameter is ignored</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="zap_dnd_on"
              c:identifier="gami_manager_zap_dnd_on"
              introspectable="0"
              throws="1">
        <doc xml:space="preserve">Set DND (Do Not Disturb) status on @zap_channel</doc>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve">%TRUE on success, %FALSE on failure</doc>
          <type name="Response" c:type="GamiResponse*"/>
        </return-value>
        <parameters>
          <instance-parameter name="ami" transfer-ownership="none">
            <doc xml:space="preserve">#GamiManager</doc>
            <type name="Manager" c:type="GamiManager*"/>
          </instance-parameter>
          <parameter name="zap_channel" transfer-ownership="none">
            <doc xml:space="preserve">The ZAP channel on which to turn on DND status</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="action_id" transfer-ownership="none" optional="1">
            <doc xml:space="preserve">ActionID to ease response matching</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="response_func"
                     transfer-ownership="none"
                     closure="3">
            <doc xml:space="preserve">Callback for asynchronious operation. Passing %NULL will
          trigger synchronious mode</doc>
            <type name="ResponseFunc" c:type="GamiResponseFunc"/>
          </parameter>
          <parameter name="response_data" transfer-ownership="none">
            <doc xml:space="preserve">User data to pass to the callback. If %NULL is passed for
          @response_func, the parameter is ignored</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="zap_hangup"
              c:identifier="gami_manager_zap_hangup"
              introspectable="0"
              throws="1">
        <doc xml:space="preserve">Hangup ZAP channel</doc>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve">%TRUE on success, %FALSE on failure</doc>
          <type name="Response" c:type="GamiResponse*"/>
        </return-value>
        <parameters>
          <instance-parameter name="ami" transfer-ownership="none">
            <doc xml:space="preserve">#GamiManager</doc>
            <type name="Manager" c:type="GamiManager*"/>
          </instance-parameter>
          <parameter name="zap_channel" transfer-ownership="none">
            <doc xml:space="preserve">The ZAP channel to hang up</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="action_id" transfer-ownership="none" optional="1">
            <doc xml:space="preserve">ActionID to ease response matching</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="response_func"
                     transfer-ownership="none"
                     closure="3">
            <doc xml:space="preserve">Callback for asynchronious operation. Passing %NULL will
          trigger synchronious mode</doc>
            <type name="ResponseFunc" c:type="GamiResponseFunc"/>
          </parameter>
          <parameter name="response_data" transfer-ownership="none">
            <doc xml:space="preserve">User data to pass to the callback. If %NULL is passed for
          @response_func, the parameter is ignored</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="zap_restart"
              c:identifier="gami_manager_zap_restart"
              introspectable="0"
              throws="1">
        <doc xml:space="preserve">Restart ZAP channels. Any active calls will be terminated</doc>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve">%TRUE on success, %FALSE on failure</doc>
          <type name="Response" c:type="GamiResponse*"/>
        </return-value>
        <parameters>
          <instance-parameter name="ami" transfer-ownership="none">
            <doc xml:space="preserve">#GamiManager</doc>
            <type name="Manager" c:type="GamiManager*"/>
          </instance-parameter>
          <parameter name="action_id" transfer-ownership="none" optional="1">
            <doc xml:space="preserve">ActionID to ease response matching</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="response_func"
                     transfer-ownership="none"
                     closure="2">
            <doc xml:space="preserve">Callback for asynchronious operation. Passing %NULL will
          trigger synchronious mode</doc>
            <type name="ResponseFunc" c:type="GamiResponseFunc"/>
          </parameter>
          <parameter name="response_data" transfer-ownership="none">
            <doc xml:space="preserve">User data to pass to the callback. If %NULL is passed for
          @response_func, the parameter is ignored</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="zap_show_channels"
              c:identifier="gami_manager_zap_show_channels"
              introspectable="0"
              throws="1">
        <doc xml:space="preserve">Show the status of all ZAP channels</doc>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve">#GSList of ZAP channels (stored as #GHashTable) on success,
         %NULL on failure</doc>
          <type name="Response" c:type="GamiResponse*"/>
        </return-value>
        <parameters>
          <instance-parameter name="ami" transfer-ownership="none">
            <doc xml:space="preserve">#GamiManager</doc>
            <type name="Manager" c:type="GamiManager*"/>
          </instance-parameter>
          <parameter name="action_id" transfer-ownership="none" optional="1">
            <doc xml:space="preserve">ActionID to ease response matching</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="response_func"
                     transfer-ownership="none"
                     closure="2">
            <doc xml:space="preserve">Callback for asynchronious operation. Passing %NULL will
          trigger synchronious mode</doc>
            <type name="ResponseFunc" c:type="GamiResponseFunc"/>
          </parameter>
          <parameter name="response_data" transfer-ownership="none">
            <doc xml:space="preserve">User data to pass to the callback. If %NULL is passed for
          @response_func, the parameter is ignored</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="zap_transfer"
              c:identifier="gami_manager_zap_transfer"
              introspectable="0"
              throws="1">
        <doc xml:space="preserve">Transfer ZAP channel</doc>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve">%TRUE on success, %FALSE on failure</doc>
          <type name="Response" c:type="GamiResponse*"/>
        </return-value>
        <parameters>
          <instance-parameter name="ami" transfer-ownership="none">
            <doc xml:space="preserve">#GamiManager</doc>
            <type name="Manager" c:type="GamiManager*"/>
          </instance-parameter>
          <parameter name="zap_channel" transfer-ownership="none">
            <doc xml:space="preserve">The channel to be transferred</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="action_id" transfer-ownership="none" optional="1">
            <doc xml:space="preserve">ActionID to ease response matching</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="response_func"
                     transfer-ownership="none"
                     closure="3">
            <doc xml:space="preserve">Callback for asynchronious operation. Passing %NULL will
          trigger synchronious mode</doc>
            <type name="ResponseFunc" c:type="GamiResponseFunc"/>
          </parameter>
          <parameter name="response_data" transfer-ownership="none">
            <doc xml:space="preserve">User data to pass to the callback. If %NULL is passed for
          @response_func, the parameter is ignored</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <property name="host"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <doc xml:space="preserve">The Asterisk manager host to connect to</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="port"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <doc xml:space="preserve">The Asterisk manager port to connect to</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <field name="parent_instance">
        <doc xml:space="preserve">#GObject parent instance</doc>
        <type name="GObject.Object" c:type="GObject"/>
      </field>
      <field name="api_version">
        <doc xml:space="preserve">AMI API version string as sent by Asterisk</doc>
        <type name="utf8" c:type="const gchar*"/>
      </field>
      <field name="api_major">
        <doc xml:space="preserve">Major number of AMI API version</doc>
        <type name="guint" c:type="guint"/>
      </field>
      <field name="api_minor">
        <doc xml:space="preserve">Minor number of AMI API version</doc>
        <type name="guint" c:type="guint"/>
      </field>
      <glib:signal name="connected" when="last">
        <doc xml:space="preserve">The ::connected signal is emitted after successfully establishing
a connection to the Asterisk server</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </glib:signal>
      <glib:signal name="disconnected" when="last">
        <doc xml:space="preserve">The ::disconnected event is emitted each time the connection to the
Asterisk server is lost</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </glib:signal>
      <glib:signal name="event" when="last">
        <doc xml:space="preserve">The ::event signal is emitted each time Asterisk emits an event</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="event" transfer-ownership="none">
            <doc xml:space="preserve">The event that occurred (stored as a #GHashTable)</doc>
            <type name="GLib.HashTable">
              <type name="gpointer" c:type="gpointer"/>
              <type name="gpointer" c:type="gpointer"/>
            </type>
          </parameter>
        </parameters>
      </glib:signal>
    </class>
    <record name="ManagerClass"
            c:type="GamiManagerClass"
            glib:is-gtype-struct-for="Manager">
      <doc xml:space="preserve">The class structure for the #GamiManager type</doc>
      <field name="parent_class">
        <doc xml:space="preserve">#GamiManager's parent class (of type #GObjectClass)</doc>
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
    </record>
    <callback name="ManagerNewAsyncFunc" c:type="GamiManagerNewAsyncFunc">
      <doc xml:space="preserve">Specifies the type of functions passed to gami_manager_new_async()</doc>
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="gami" transfer-ownership="none">
          <doc xml:space="preserve">the newly created #GamiManager</doc>
          <type name="Manager" c:type="GamiManager*"/>
        </parameter>
        <parameter name="user_data" transfer-ownership="none" closure="1">
          <doc xml:space="preserve">user data passed to the function</doc>
          <type name="gpointer" c:type="gpointer"/>
        </parameter>
      </parameters>
    </callback>
    <enumeration name="ModuleLoadType"
                 glib:type-name="GamiModuleLoadType"
                 glib:get-type="gami_module_load_type_get_type"
                 c:type="GamiModuleLoadType">
      <doc xml:space="preserve">An enum type used to determine the operation mode in
gami_manager_module_load()</doc>
      <member name="load"
              value="0"
              c:identifier="GAMI_MODULE_LOAD"
              glib:nick="load">
        <doc xml:space="preserve">use module operation 'load'</doc>
      </member>
      <member name="reload"
              value="1"
              c:identifier="GAMI_MODULE_RELOAD"
              glib:nick="reload">
        <doc xml:space="preserve">use module operation 'reload'</doc>
      </member>
      <member name="unload"
              value="2"
              c:identifier="GAMI_MODULE_UNLOAD"
              glib:nick="unload">
        <doc xml:space="preserve">use module operation 'unload'</doc>
      </member>
    </enumeration>
    <record name="Response"
            c:type="GamiResponse"
            glib:type-name="GamiResponse"
            glib:get-type="gami_response_get_type"
            c:symbol-prefix="response">
      <doc xml:space="preserve">The data type used to encapsulate manager responses. All the fields in the
GamiResponse structure are private to the #GamiResponse implementation and
should never be accessed directly.</doc>
      <constructor name="new" c:identifier="gami_response_new">
        <doc xml:space="preserve">This function creates an instance of %GAMI_TYPE_RESPONSE</doc>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve">A new #GamiResponse</doc>
          <type name="Response" c:type="GamiResponse*"/>
        </return-value>
        <parameters>
          <parameter name="value" transfer-ownership="none">
            <doc xml:space="preserve">the #GValue of the response</doc>
            <type name="GObject.Value" c:type="GValue*"/>
          </parameter>
          <parameter name="message" transfer-ownership="none">
            <doc xml:space="preserve">the message header of the response packet</doc>
            <type name="utf8" c:type="gchar*"/>
          </parameter>
          <parameter name="action_id" transfer-ownership="none">
            <doc xml:space="preserve">the ActionID header of the response packet</doc>
            <type name="utf8" c:type="gchar*"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="action_id" c:identifier="gami_response_action_id">
        <doc xml:space="preserve">Get the ActionID header of the response packet. The string returned belongs
to the #GamiResponse structure and must not be freed or modified. This
function will only return a value if an action_id was passed to the
associated action.</doc>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve">the action_id associated with @response's action or %NULL</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="response" transfer-ownership="none">
            <doc xml:space="preserve">a valid #GamiResponse</doc>
            <type name="Response" c:type="GamiResponse*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="message" c:identifier="gami_response_message">
        <doc xml:space="preserve">Get the message header of the response packet. The returned string belongs
to the #GamiResponse structure and should not be freed or modified. Note
that the Message header is not mandatory in older AMI API versions, so
you should expect a return value of %NULL.</doc>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve">the message header of @response if set, or %NULL otherwise</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="response" transfer-ownership="none">
            <doc xml:space="preserve">a valid #GamiResponse</doc>
            <type name="Response" c:type="GamiResponse*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="ref" c:identifier="gami_response_ref">
        <doc xml:space="preserve">Atomically increments the reference count of @response by one.</doc>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve">the passed in #GamiResponse</doc>
          <type name="Response" c:type="GamiResponse*"/>
        </return-value>
        <parameters>
          <instance-parameter name="response" transfer-ownership="none">
            <doc xml:space="preserve">a valid #GamiResponse</doc>
            <type name="Response" c:type="GamiResponse*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="success" c:identifier="gami_response_success">
        <doc xml:space="preserve">Check whether the action associated with @response indicated success</doc>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve">%TRUE if the action indicated success, otherwise %FALSE</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="response" transfer-ownership="none">
            <doc xml:space="preserve">the #GamiResponse to check</doc>
            <type name="Response" c:type="GamiResponse*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="unref" c:identifier="gami_response_unref">
        <doc xml:space="preserve">Atomically decrements the reference count of @response by one. If the
reference count drops to 0, all elements will be destroyed, and all memory
allocated by the response is released.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="response" transfer-ownership="none">
            <doc xml:space="preserve">a valid #GamiResponse</doc>
            <type name="Response" c:type="GamiResponse*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="value" c:identifier="gami_response_value">
        <doc xml:space="preserve">Get the value of the response packet. The type of the #GValue depends
on the action associated with @response. It should be one of %G_TYPE_BOOLEAN,
%G_TYPE_SLIST, %G_TYPE_STRING or %G_TYPE_HASH_TABLE. Consult the
documentation for #AmiManager to see which type should be expected for each
action. If the action failed, the type will always be %G_TYPE_BOOLEAN with
a value of %FALSE.</doc>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve">the value returned by the action associated with @response</doc>
          <type name="GObject.Value" c:type="GValue*"/>
        </return-value>
        <parameters>
          <instance-parameter name="response" transfer-ownership="none">
            <doc xml:space="preserve">a valid #GamiResponse</doc>
            <type name="Response" c:type="GamiResponse*"/>
          </instance-parameter>
        </parameters>
      </method>
    </record>
    <callback name="ResponseFunc" c:type="GamiResponseFunc">
      <doc xml:space="preserve">Specifies the type of functions passed as callback to manager actions</doc>
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="response" transfer-ownership="none">
          <doc xml:space="preserve">the action's #GamiResponse.</doc>
          <type name="Response" c:type="GamiResponse*"/>
        </parameter>
        <parameter name="user_data" transfer-ownership="none" closure="1">
          <doc xml:space="preserve">user data passed to the action</doc>
          <type name="gpointer" c:type="gpointer"/>
        </parameter>
      </parameters>
    </callback>
    <function name="get_option_group" c:identifier="gami_get_option_group">
      <doc xml:space="preserve">Returns a #GOptionGroup for the commandline arguments recognized by
Gami. You should add this group to your #GOptionContext with
g_option_context_add_group(), if you are using g_option_context_parse() to
parse your commandline arguments</doc>
      <return-value transfer-ownership="full">
        <doc xml:space="preserve">a #GOptionGroup for the commandline arguments recognized by Gami</doc>
        <type name="GLib.OptionGroup" c:type="GOptionGroup*"/>
      </return-value>
    </function>
    <function name="init" c:identifier="gami_init">
      <doc xml:space="preserve">Call this function before using any other Gami functions in your application.
It will initialize the underlying type system and parses some standard
command line options. @argc and @argv are adjusted accordingly so your own
code will never see those arguments.

Debug messages in the library will be disabled by default, to get them
back, install a log handler using g_log_set_handler() for the domain "Gami".

On Windows, the network stack is initialized as well.</doc>
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="argc" transfer-ownership="none">
          <doc xml:space="preserve">Address of the &lt;parameter&gt;argc&lt;/parameter&gt; parameter of main().
       Changed if any arguments were handled.</doc>
          <type name="gint" c:type="int*"/>
        </parameter>
        <parameter name="argv" transfer-ownership="none">
          <doc xml:space="preserve">Address of the &lt;parameter&gt;argv&lt;/parameter&gt; parameter of main().
       Any parameters understood by gami_init() are stripped before return.</doc>
          <type name="utf8" c:type="char***"/>
        </parameter>
      </parameters>
    </function>
    <function name="parse_args" c:identifier="gami_parse_args">
      <doc xml:space="preserve">Parses command line arguments, and initializes global attributes of Gami.
Any arguments used by Gami are removed from the array and @argc and @argv
are updated accordingly.</doc>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve">%TRUE if initialization succeeded, otherwise %FALSE.</doc>
        <type name="gboolean" c:type="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="argc" transfer-ownership="none">
          <doc xml:space="preserve">a pointer to the number of command line arguments.</doc>
          <type name="gint" c:type="int*"/>
        </parameter>
        <parameter name="argv" transfer-ownership="none">
          <doc xml:space="preserve">a pointer to the array of command line arguments.</doc>
          <type name="utf8" c:type="char***"/>
        </parameter>
      </parameters>
    </function>
  </namespace>
</repository>
