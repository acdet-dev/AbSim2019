<?xml version="1.0"?>
<!-- This file was automatically generated from C sources - DO NOT EDIT!
To affect the contents of this file, edit the original C definitions,
and/or use gtk-doc annotations.  -->
<repository version="1.2"
            xmlns="http://www.gtk.org/introspection/core/1.0"
            xmlns:c="http://www.gtk.org/introspection/c/1.0"
            xmlns:glib="http://www.gtk.org/introspection/glib/1.0">
  <include name="GObject" version="2.0"/>
  <include name="Gtk" version="3.0"/>
  <namespace name="GtkDatabox"
             version="1.0"
             shared-library="libgtkdatabox-0-9-2-0.dll"
             c:identifier-prefixes="GtkDatabox"
             c:symbol-prefixes="gtk_databox">
    <class name="Bars"
           c:symbol-prefix="bars"
           c:type="GtkDataboxBars"
           parent="XYCGraph"
           glib:type-name="GtkDataboxBars"
           glib:get-type="gtk_databox_bars_get_type"
           glib:type-struct="BarsClass">
      <doc xml:space="preserve">#GtkDataboxBars is a #GtkDataboxGraph class for displaying xy-values as vertical bars which rise/drop from y=0.</doc>
      <function name="new"
                c:identifier="gtk_databox_bars_new"
                introspectable="0">
        <doc xml:space="preserve">Creates a new #GtkDataboxBars object which can be added to a #GtkDatabox widget</doc>
        <return-value>
          <doc xml:space="preserve">A new #GtkDataboxBars object</doc>
          <type name="Graph" c:type="GtkDataboxGraph*"/>
        </return-value>
        <parameters>
          <parameter name="len" transfer-ownership="none">
            <doc xml:space="preserve">length of @X and @Y</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
          <parameter name="X" transfer-ownership="none">
            <doc xml:space="preserve">array of horizontal position values of markers</doc>
            <type name="gfloat" c:type="gfloat*"/>
          </parameter>
          <parameter name="Y" transfer-ownership="none">
            <doc xml:space="preserve">array of vertical position values of markers</doc>
            <type name="gfloat" c:type="gfloat*"/>
          </parameter>
          <parameter name="color" transfer-ownership="none">
            <doc xml:space="preserve">color of the markers</doc>
            <type name="Gdk.RGBA" c:type="GdkRGBA*"/>
          </parameter>
          <parameter name="size" transfer-ownership="none">
            <doc xml:space="preserve">marker size or line width (depending on the @type)</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
        </parameters>
      </function>
      <function name="new_full"
                c:identifier="gtk_databox_bars_new_full"
                introspectable="0">
        <doc xml:space="preserve">Creates a new #GtkDataboxBars object which can be added to a #GtkDatabox widget</doc>
        <return-value>
          <doc xml:space="preserve">A new #GtkDataboxBars object</doc>
          <type name="Graph" c:type="GtkDataboxGraph*"/>
        </return-value>
        <parameters>
          <parameter name="maxlen" transfer-ownership="none">
            <doc xml:space="preserve">maximum length of @X and @Y</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
          <parameter name="len" transfer-ownership="none">
            <doc xml:space="preserve">actual number of @X and @Y values to plot</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
          <parameter name="X" transfer-ownership="none">
            <doc xml:space="preserve">array of horizontal position values of markers</doc>
            <type name="gpointer" c:type="void*"/>
          </parameter>
          <parameter name="xstart" transfer-ownership="none">
            <doc xml:space="preserve">the first element in the X array to plot (usually 0)</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
          <parameter name="xstride" transfer-ownership="none">
            <doc xml:space="preserve">successive elements in the X array are separated by this much (1 if array, ncols if matrix)</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
          <parameter name="xtype" transfer-ownership="none">
            <doc xml:space="preserve">the GType of the X array elements.  G_TYPE_FLOAT, G_TYPE_DOUBLE, etc.</doc>
            <type name="GType" c:type="GType"/>
          </parameter>
          <parameter name="Y" transfer-ownership="none">
            <doc xml:space="preserve">array of vertical position values of markers</doc>
            <type name="gpointer" c:type="void*"/>
          </parameter>
          <parameter name="ystart" transfer-ownership="none">
            <doc xml:space="preserve">the first element in the Y array to plot (usually 0)</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
          <parameter name="ystride" transfer-ownership="none">
            <doc xml:space="preserve">successive elements in the Y array are separated by this much (1 if array, ncols if matrix)</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
          <parameter name="ytype" transfer-ownership="none">
            <doc xml:space="preserve">the GType of the Y array elements.  G_TYPE_FLOAT, G_TYPE_DOUBLE, etc.</doc>
            <type name="GType" c:type="GType"/>
          </parameter>
          <parameter name="color" transfer-ownership="none">
            <doc xml:space="preserve">color of the markers</doc>
            <type name="Gdk.RGBA" c:type="GdkRGBA*"/>
          </parameter>
          <parameter name="size" transfer-ownership="none">
            <doc xml:space="preserve">marker size or line width (depending on the @type)</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
        </parameters>
      </function>
      <field name="parent" readable="0" private="1">
        <type name="XYCGraph" c:type="GtkDataboxXYCGraph"/>
      </field>
    </class>
    <record name="BarsClass"
            c:type="GtkDataboxBarsClass"
            glib:is-gtype-struct-for="Bars">
      <field name="parent_class">
        <type name="XYCGraphClass" c:type="GtkDataboxXYCGraphClass"/>
      </field>
    </record>
    <record name="Class" c:type="GtkDataboxClass">
      <field name="parent_class" writable="1">
        <type name="Gtk.WidgetClass" c:type="GtkWidgetClass"/>
      </field>
      <field name="zoomed">
        <callback name="zoomed">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="box" transfer-ownership="none">
              <type name="_" c:type="GtkDatabox*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="selection_started">
        <callback name="selection_started">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="box" transfer-ownership="none">
              <type name="_" c:type="GtkDatabox*"/>
            </parameter>
            <parameter name="selectionValues" transfer-ownership="none">
              <type name="ValueRectangle" c:type="GtkDataboxValueRectangle*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="selection_changed">
        <callback name="selection_changed">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="box" transfer-ownership="none">
              <type name="_" c:type="GtkDatabox*"/>
            </parameter>
            <parameter name="selectionValues" transfer-ownership="none">
              <type name="ValueRectangle" c:type="GtkDataboxValueRectangle*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="selection_finalized">
        <callback name="selection_finalized">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="box" transfer-ownership="none">
              <type name="_" c:type="GtkDatabox*"/>
            </parameter>
            <parameter name="selectionValues" transfer-ownership="none">
              <type name="ValueRectangle" c:type="GtkDataboxValueRectangle*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="selection_canceled">
        <callback name="selection_canceled">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="box" transfer-ownership="none">
              <type name="_" c:type="GtkDatabox*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
    </record>
    <class name="CrossSimple"
           c:symbol-prefix="cross_simple"
           c:type="GtkDataboxCrossSimple"
           parent="Markers"
           glib:type-name="GtkDataboxCrossSimple"
           glib:get-type="gtk_databox_cross_simple_get_type"
           glib:type-struct="CrossSimpleClass">
      <doc xml:space="preserve">#GtkDataboxCrossSimple is a #GtkDataboxGraph class for displaying a simple coordinate cross (a vertical line
at x=0 and a horizontal line at y=0).

A more sophisticated coordinate cross would be welcome :-)</doc>
      <function name="new"
                c:identifier="gtk_databox_cross_simple_new"
                introspectable="0">
        <doc xml:space="preserve">Creates a new #GtkDataboxCrossSimple object which can be added to a #GtkDatabox widget as nice decoration for other graphs.</doc>
        <return-value>
          <doc xml:space="preserve">A new #GtkDataboxCrossSimple object</doc>
          <type name="Graph" c:type="GtkDataboxGraph*"/>
        </return-value>
        <parameters>
          <parameter name="color" transfer-ownership="none">
            <doc xml:space="preserve">color of the markers</doc>
            <type name="Gdk.RGBA" c:type="GdkRGBA*"/>
          </parameter>
          <parameter name="size" transfer-ownership="none">
            <doc xml:space="preserve">marker size or line width (depending on the @type)</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
        </parameters>
      </function>
      <field name="parent" readable="0" private="1">
        <type name="Markers" c:type="GtkDataboxMarkers"/>
      </field>
    </class>
    <record name="CrossSimpleClass"
            c:type="GtkDataboxCrossSimpleClass"
            glib:is-gtype-struct-for="CrossSimple">
      <field name="parent_class">
        <type name="MarkersClass" c:type="GtkDataboxMarkersClass"/>
      </field>
    </record>
    <record name="Graph" c:type="GtkDataboxGraph">
      <doc xml:space="preserve">The GtkDataboxGraph is the base class for all kinds of graphs (e.g. lines, points, decorations like coordinate crosses)
to be shown in a #GtkDatabox wiget.

Implemented by #_GtkDataboxGraph</doc>
      <field name="parent" readable="0" private="1">
        <doc xml:space="preserve">The parent object</doc>
        <type name="GObject.Object" c:type="GObject"/>
      </field>
      <method name="calculate_extrema"
              c:identifier="gtk_databox_graph_calculate_extrema">
        <doc xml:space="preserve">Virtual function which determines the minimum and maximum x and y values of the values of this
#GtkDataboxGraph object if applicable (there are graphs which do
not contain data).</doc>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve">0 on success,
         -1 if no data is available,</doc>
          <type name="gint" c:type="gint"/>
        </return-value>
        <parameters>
          <instance-parameter name="graph" transfer-ownership="none">
            <doc xml:space="preserve">A #GtkDataboxGraph object</doc>
            <type name="Graph" c:type="GtkDataboxGraph*"/>
          </instance-parameter>
          <parameter name="min_x" transfer-ownership="none">
            <doc xml:space="preserve">Will be filled with the lowest x value of the dataset</doc>
            <type name="gfloat" c:type="gfloat*"/>
          </parameter>
          <parameter name="max_x" transfer-ownership="none">
            <doc xml:space="preserve">Will be filled with the highest x value of the dataset</doc>
            <type name="gfloat" c:type="gfloat*"/>
          </parameter>
          <parameter name="min_y" transfer-ownership="none">
            <doc xml:space="preserve">Will be filled with the lowest y value of the dataset</doc>
            <type name="gfloat" c:type="gfloat*"/>
          </parameter>
          <parameter name="max_y" transfer-ownership="none">
            <doc xml:space="preserve">Will be filled with the highest y value of the dataset</doc>
            <type name="gfloat" c:type="gfloat*"/>
          </parameter>
        </parameters>
      </method>
      <method name="create_gc" c:identifier="gtk_databox_graph_create_gc">
        <doc xml:space="preserve">Virtual function which creates a graphics context for the @graph.

Typically called by derived graph objects when the graphics context is needed for the first time.</doc>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve">The new graphics context.</doc>
          <type name="cairo.Context" c:type="cairo_t*"/>
        </return-value>
        <parameters>
          <instance-parameter name="graph" transfer-ownership="none">
            <doc xml:space="preserve">A #GtkDataboxGraph object</doc>
            <type name="Graph" c:type="GtkDataboxGraph*"/>
          </instance-parameter>
          <parameter name="box" transfer-ownership="none">
            <doc xml:space="preserve">A #GtkDatabox object</doc>
            <type name="_" c:type="GtkDatabox*"/>
          </parameter>
        </parameters>
      </method>
      <method name="draw" c:identifier="gtk_databox_graph_draw">
        <doc xml:space="preserve">Virtual function which draws the #GtkDataboxGraph on the drawing area of the GtkDatabox object.

Typically this function is called by #GtkDatabox objects.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="graph" transfer-ownership="none">
            <doc xml:space="preserve">A #GtkDataboxGraph object</doc>
            <type name="Graph" c:type="GtkDataboxGraph*"/>
          </instance-parameter>
          <parameter name="box" transfer-ownership="none">
            <doc xml:space="preserve">A #GtkDatabox object</doc>
            <type name="_" c:type="GtkDatabox*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_color" c:identifier="gtk_databox_graph_get_color">
        <doc xml:space="preserve">Gets the current color of the graph elements (e.g. points).</doc>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve">The color of the graph.</doc>
          <type name="Gdk.RGBA" c:type="GdkRGBA*"/>
        </return-value>
        <parameters>
          <instance-parameter name="graph" transfer-ownership="none">
            <doc xml:space="preserve">A #GtkDataboxGraph object</doc>
            <type name="Graph" c:type="GtkDataboxGraph*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_hide" c:identifier="gtk_databox_graph_get_hide">
        <doc xml:space="preserve">Gets the current "hide" status.</doc>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve">Whether the graph is hidden (true) or not (false).</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="graph" transfer-ownership="none">
            <doc xml:space="preserve">A #GtkDataboxGraph object</doc>
            <type name="Graph" c:type="GtkDataboxGraph*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_rgba" c:identifier="gtk_databox_graph_get_rgba">
        <return-value transfer-ownership="full">
          <type name="Gdk.RGBA" c:type="GdkRGBA*"/>
        </return-value>
        <parameters>
          <instance-parameter name="graph" transfer-ownership="none">
            <type name="Graph" c:type="GtkDataboxGraph*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_size" c:identifier="gtk_databox_graph_get_size">
        <doc xml:space="preserve">Gets the size of the graph elements (e.g. the line width).</doc>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve">size of the graph elements</doc>
          <type name="gint" c:type="gint"/>
        </return-value>
        <parameters>
          <instance-parameter name="graph" transfer-ownership="none">
            <doc xml:space="preserve">A #GtkDataboxGraph object</doc>
            <type name="Graph" c:type="GtkDataboxGraph*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="set_color" c:identifier="gtk_databox_graph_set_color">
        <doc xml:space="preserve">Sets the color which the #GtkDataboxGraph object is supposed to be using when drawing itself.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="graph" transfer-ownership="none">
            <doc xml:space="preserve">A #GtkDataboxGraph object</doc>
            <type name="Graph" c:type="GtkDataboxGraph*"/>
          </instance-parameter>
          <parameter name="color" transfer-ownership="none">
            <doc xml:space="preserve">Color which is to be used by the graph object</doc>
            <type name="Gdk.RGBA" c:type="GdkRGBA*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_hide" c:identifier="gtk_databox_graph_set_hide">
        <doc xml:space="preserve">Hidden graphs are not shown, when the #GtkDatabox containing them is redrawn.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="graph" transfer-ownership="none">
            <doc xml:space="preserve">A #GtkDataboxGraph object</doc>
            <type name="Graph" c:type="GtkDataboxGraph*"/>
          </instance-parameter>
          <parameter name="hide" transfer-ownership="none">
            <doc xml:space="preserve">Declares whether should be hidden (true) or not (false).</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_rgba" c:identifier="gtk_databox_graph_set_rgba">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="graph" transfer-ownership="none">
            <type name="Graph" c:type="GtkDataboxGraph*"/>
          </instance-parameter>
          <parameter name="rgba" transfer-ownership="none">
            <type name="Gdk.RGBA" c:type="GdkRGBA*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_size" c:identifier="gtk_databox_graph_set_size">
        <doc xml:space="preserve">Sets the size (e.g. line width) which the #GtkDataboxGraph object is supposed to be using when drawing itself.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="graph" transfer-ownership="none">
            <doc xml:space="preserve">A #GtkDataboxGraph object</doc>
            <type name="Graph" c:type="GtkDataboxGraph*"/>
          </instance-parameter>
          <parameter name="size" transfer-ownership="none">
            <doc xml:space="preserve">Size of graph elements for the graph object</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
        </parameters>
      </method>
      <function name="add" c:identifier="gtk_databox_graph_add">
        <doc xml:space="preserve">Adds the @graph to the @box. The next time the @box is re-drawn, the graph will be shown.

It might be becessary to modify the total_limits in order for the graph to be displayed properly (see gtk_databox_set_total_limits()).</doc>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve">0 on success, -1 otherwise</doc>
          <type name="gint" c:type="gint"/>
        </return-value>
        <parameters>
          <parameter name="box" transfer-ownership="none">
            <doc xml:space="preserve">A #GtkDatabox widget</doc>
            <type name="_" c:type="GtkDatabox*"/>
          </parameter>
          <parameter name="graph" transfer-ownership="none">
            <doc xml:space="preserve">A graph, e.g. a #GtkDataboxPoints or a #GtkDataboxGrid object</doc>
            <type name="Graph" c:type="GtkDataboxGraph*"/>
          </parameter>
        </parameters>
      </function>
      <function name="add_front" c:identifier="gtk_databox_graph_add_front">
        <doc xml:space="preserve">Adds the @graph to the @box and will be plotted on top. The next time the @box is re-drawn, the graph will be shown.

It might be becessary to modify the total_limits in order for the graph to be displayed properly (see gtk_databox_set_total_limits()).</doc>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve">0 on success, -1 otherwise</doc>
          <type name="gint" c:type="gint"/>
        </return-value>
        <parameters>
          <parameter name="box" transfer-ownership="none">
            <doc xml:space="preserve">A #GtkDatabox widget</doc>
            <type name="_" c:type="GtkDatabox*"/>
          </parameter>
          <parameter name="graph" transfer-ownership="none">
            <doc xml:space="preserve">A graph, e.g. a #GtkDataboxPoints or a #GtkDataboxGrid object</doc>
            <type name="Graph" c:type="GtkDataboxGraph*"/>
          </parameter>
        </parameters>
      </function>
      <function name="remove" c:identifier="gtk_databox_graph_remove">
        <doc xml:space="preserve">Removes the @graph from the @box once. The next time the @box is re-drawn, the graph will not be shown (unless it was added more
than once).</doc>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve">0 on success, -1 otherwise</doc>
          <type name="gint" c:type="gint"/>
        </return-value>
        <parameters>
          <parameter name="box" transfer-ownership="none">
            <doc xml:space="preserve">A #GtkDatabox widget</doc>
            <type name="_" c:type="GtkDatabox*"/>
          </parameter>
          <parameter name="graph" transfer-ownership="none">
            <doc xml:space="preserve">A graph, e.g. a #GtkDataboxPoints or a #GtkDataboxGrid object</doc>
            <type name="Graph" c:type="GtkDataboxGraph*"/>
          </parameter>
        </parameters>
      </function>
      <function name="remove_all" c:identifier="gtk_databox_graph_remove_all">
        <doc xml:space="preserve">Removes all graphs from the @box. The next time the @box is re-drawn, no graphs will be shown.</doc>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve">0 on success, -1 otherwise</doc>
          <type name="gint" c:type="gint"/>
        </return-value>
        <parameters>
          <parameter name="box" transfer-ownership="none">
            <doc xml:space="preserve">A #GtkDatabox widget</doc>
            <type name="_" c:type="GtkDatabox*"/>
          </parameter>
        </parameters>
      </function>
    </record>
    <record name="GraphClass" c:type="GtkDataboxGraphClass">
      <field name="parent_class" writable="1">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
      <field name="draw">
        <callback name="draw">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="graph" transfer-ownership="none">
              <type name="Graph" c:type="GtkDataboxGraph*"/>
            </parameter>
            <parameter name="box" transfer-ownership="none">
              <type name="_" c:type="GtkDatabox*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="calculate_extrema">
        <callback name="calculate_extrema">
          <return-value transfer-ownership="none">
            <type name="gint" c:type="gint"/>
          </return-value>
          <parameters>
            <parameter name="graph" transfer-ownership="none">
              <type name="Graph" c:type="GtkDataboxGraph*"/>
            </parameter>
            <parameter name="min_x" transfer-ownership="none">
              <type name="gfloat" c:type="gfloat*"/>
            </parameter>
            <parameter name="max_x" transfer-ownership="none">
              <type name="gfloat" c:type="gfloat*"/>
            </parameter>
            <parameter name="min_y" transfer-ownership="none">
              <type name="gfloat" c:type="gfloat*"/>
            </parameter>
            <parameter name="max_y" transfer-ownership="none">
              <type name="gfloat" c:type="gfloat*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="create_gc">
        <callback name="create_gc">
          <return-value transfer-ownership="full">
            <type name="cairo.Context" c:type="cairo_t*"/>
          </return-value>
          <parameters>
            <parameter name="graph" transfer-ownership="none">
              <type name="Graph" c:type="GtkDataboxGraph*"/>
            </parameter>
            <parameter name="box" transfer-ownership="none">
              <type name="_" c:type="GtkDatabox*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
    </record>
    <class name="Grid"
           c:symbol-prefix="grid"
           c:type="GtkDataboxGrid"
           parent="GObject.Object"
           glib:type-name="GtkDataboxGrid"
           glib:get-type="gtk_databox_grid_get_type"
           glib:type-struct="GridClass">
      <doc xml:space="preserve">#GtkDataboxGrid is a #GtkDataboxGraph class for displaying a grid (like in an oscilloscope). You can determine
the number of horizontal and vertical lines. When you zoom in, the grid is also zoomed along with the data.</doc>
      <function name="array_new"
                c:identifier="gtk_databox_grid_array_new"
                introspectable="0">
        <doc xml:space="preserve">Creates a new #GtkDataboxGrid object which can be added to a #GtkDatabox widget as nice decoration for other graphs.</doc>
        <return-value>
          <doc xml:space="preserve">A new #GtkDataboxGrid object</doc>
          <type name="Graph" c:type="GtkDataboxGraph*"/>
        </return-value>
        <parameters>
          <parameter name="hlines" transfer-ownership="none">
            <doc xml:space="preserve">number of horizontal lines in the grid</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="vlines" transfer-ownership="none">
            <doc xml:space="preserve">number of vertical lines in the grid</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="hline_vals" transfer-ownership="none">
            <doc xml:space="preserve">a pointer to an array of gfloat horizontal grid coordinate</doc>
            <type name="gfloat" c:type="gfloat*"/>
          </parameter>
          <parameter name="vline_vals" transfer-ownership="none">
            <doc xml:space="preserve">a pointer to an array of gfloat vertical grid coordinate</doc>
            <type name="gfloat" c:type="gfloat*"/>
          </parameter>
          <parameter name="color" transfer-ownership="none">
            <doc xml:space="preserve">color of the grid</doc>
            <type name="Gdk.RGBA" c:type="GdkRGBA*"/>
          </parameter>
          <parameter name="size" transfer-ownership="none">
            <doc xml:space="preserve">line width of the grid</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
        </parameters>
      </function>
      <function name="new"
                c:identifier="gtk_databox_grid_new"
                introspectable="0">
        <doc xml:space="preserve">Creates a new #GtkDataboxGrid object which can be added to a #GtkDatabox widget as nice decoration for other graphs.</doc>
        <return-value>
          <doc xml:space="preserve">A new #GtkDataboxGrid object</doc>
          <type name="Graph" c:type="GtkDataboxGraph*"/>
        </return-value>
        <parameters>
          <parameter name="hlines" transfer-ownership="none">
            <doc xml:space="preserve">number of horizontal lines in the grid</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="vlines" transfer-ownership="none">
            <doc xml:space="preserve">number of vertical lines in the grid</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="color" transfer-ownership="none">
            <doc xml:space="preserve">color of the grid</doc>
            <type name="Gdk.RGBA" c:type="GdkRGBA*"/>
          </parameter>
          <parameter name="size" transfer-ownership="none">
            <doc xml:space="preserve">line width of the grid</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
        </parameters>
      </function>
      <method name="get_hline_vals"
              c:identifier="gtk_databox_grid_get_hline_vals">
        <doc xml:space="preserve">Gets the pointer to the horizontal line values for the @grid.</doc>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve">Pointer to the horizontal line values for the @grid. (or NULL if error)</doc>
          <type name="gfloat" c:type="gfloat*"/>
        </return-value>
        <parameters>
          <instance-parameter name="grid" transfer-ownership="none">
            <doc xml:space="preserve">a #GtkDataboxGrid graph object</doc>
            <type name="Grid" c:type="GtkDataboxGrid*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_hlines" c:identifier="gtk_databox_grid_get_hlines">
        <doc xml:space="preserve">Gets the number of horizontal lines in the @grid.</doc>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve">Number of horizontal lines in the @grid.</doc>
          <type name="gint" c:type="gint"/>
        </return-value>
        <parameters>
          <instance-parameter name="grid" transfer-ownership="none">
            <doc xml:space="preserve">a #GtkDataboxGrid graph object</doc>
            <type name="Grid" c:type="GtkDataboxGrid*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_vline_vals"
              c:identifier="gtk_databox_grid_get_vline_vals">
        <doc xml:space="preserve">Gets the pointer to the vertical line values for the @grid.</doc>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve">Pointer to the vertical line values for the @grid. (or NULL if error)</doc>
          <type name="gfloat" c:type="gfloat*"/>
        </return-value>
        <parameters>
          <instance-parameter name="grid" transfer-ownership="none">
            <doc xml:space="preserve">a #GtkDataboxGrid graph object</doc>
            <type name="Grid" c:type="GtkDataboxGrid*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_vlines" c:identifier="gtk_databox_grid_get_vlines">
        <doc xml:space="preserve">Gets the number of vertical lines in the @grid.</doc>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve">Number of vertical lines in the @grid.</doc>
          <type name="gint" c:type="gint"/>
        </return-value>
        <parameters>
          <instance-parameter name="grid" transfer-ownership="none">
            <doc xml:space="preserve">a #GtkDataboxGrid graph object</doc>
            <type name="Grid" c:type="GtkDataboxGrid*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="set_hline_vals"
              c:identifier="gtk_databox_grid_set_hline_vals">
        <doc xml:space="preserve">Sets the pointer to the horizontal lines in the @grid.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="grid" transfer-ownership="none">
            <doc xml:space="preserve">a #GtkDataboxGrid graph object</doc>
            <type name="Grid" c:type="GtkDataboxGrid*"/>
          </instance-parameter>
          <parameter name="hline_vals" transfer-ownership="none">
            <doc xml:space="preserve">sets the pointer to the hline values for the grid</doc>
            <type name="gfloat" c:type="gfloat*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_hlines" c:identifier="gtk_databox_grid_set_hlines">
        <doc xml:space="preserve">Sets the number of horizontal lines in the @grid.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="grid" transfer-ownership="none">
            <doc xml:space="preserve">a #GtkDataboxGrid graph object</doc>
            <type name="Grid" c:type="GtkDataboxGrid*"/>
          </instance-parameter>
          <parameter name="hlines" transfer-ownership="none">
            <doc xml:space="preserve">number of vertical lines in the grid</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_vline_vals"
              c:identifier="gtk_databox_grid_set_vline_vals">
        <doc xml:space="preserve">Sets the pointer to the vertical lines in the @grid.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="grid" transfer-ownership="none">
            <doc xml:space="preserve">a #GtkDataboxGrid graph object</doc>
            <type name="Grid" c:type="GtkDataboxGrid*"/>
          </instance-parameter>
          <parameter name="vline_vals" transfer-ownership="none">
            <doc xml:space="preserve">sets the pointer to the vline values for the grid</doc>
            <type name="gfloat" c:type="gfloat*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_vlines" c:identifier="gtk_databox_grid_set_vlines">
        <doc xml:space="preserve">Sets the number of vertical lines in the @grid.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="grid" transfer-ownership="none">
            <doc xml:space="preserve">a #GtkDataboxGrid graph object</doc>
            <type name="Grid" c:type="GtkDataboxGrid*"/>
          </instance-parameter>
          <parameter name="vlines" transfer-ownership="none">
            <doc xml:space="preserve">number of vertical lines in the grid</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
        </parameters>
      </method>
      <property name="grid-hline-vals" writable="1" transfer-ownership="none">
        <type name="gpointer" c:type="gpointer"/>
      </property>
      <property name="grid-hlines" writable="1" transfer-ownership="none">
        <type name="gint" c:type="gint"/>
      </property>
      <property name="grid-vline-vals" writable="1" transfer-ownership="none">
        <type name="gpointer" c:type="gpointer"/>
      </property>
      <property name="grid-vlines" writable="1" transfer-ownership="none">
        <type name="gint" c:type="gint"/>
      </property>
      <field name="parent">
        <type name="Graph" c:type="GtkDataboxGraph"/>
      </field>
    </class>
    <record name="GridClass"
            c:type="GtkDataboxGridClass"
            glib:is-gtype-struct-for="Grid">
      <field name="parent_class">
        <type name="GraphClass" c:type="GtkDataboxGraphClass"/>
      </field>
    </record>
    <class name="Lines"
           c:symbol-prefix="lines"
           c:type="GtkDataboxLines"
           parent="XYCGraph"
           glib:type-name="GtkDataboxLines"
           glib:get-type="gtk_databox_lines_get_type"
           glib:type-struct="LinesClass">
      <doc xml:space="preserve">#GtkDataboxLines is a #GtkDataboxGraph class for displaying xy-values as series of connected lines.</doc>
      <function name="new"
                c:identifier="gtk_databox_lines_new"
                introspectable="0">
        <doc xml:space="preserve">Creates a new #GtkDataboxLines object which can be added to a #GtkDatabox widget.</doc>
        <return-value>
          <doc xml:space="preserve">A new #GtkDataboxLines object</doc>
          <type name="Graph" c:type="GtkDataboxGraph*"/>
        </return-value>
        <parameters>
          <parameter name="len" transfer-ownership="none">
            <doc xml:space="preserve">length of @X and @Y</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
          <parameter name="X" transfer-ownership="none">
            <doc xml:space="preserve">array of horizontal position values of markers</doc>
            <type name="gfloat" c:type="gfloat*"/>
          </parameter>
          <parameter name="Y" transfer-ownership="none">
            <doc xml:space="preserve">array of vertical position values of markers</doc>
            <type name="gfloat" c:type="gfloat*"/>
          </parameter>
          <parameter name="color" transfer-ownership="none">
            <doc xml:space="preserve">color of the markers</doc>
            <type name="Gdk.RGBA" c:type="GdkRGBA*"/>
          </parameter>
          <parameter name="size" transfer-ownership="none">
            <doc xml:space="preserve">marker size or line width (depending on the @type)</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
        </parameters>
      </function>
      <function name="new_full"
                c:identifier="gtk_databox_lines_new_full"
                introspectable="0">
        <doc xml:space="preserve">Creates a new #GtkDataboxLines object which can be added to a #GtkDatabox widget.</doc>
        <return-value>
          <doc xml:space="preserve">A new #GtkDataboxLines object</doc>
          <type name="Graph" c:type="GtkDataboxGraph*"/>
        </return-value>
        <parameters>
          <parameter name="maxlen" transfer-ownership="none">
            <doc xml:space="preserve">maximum length of @X and @Y</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
          <parameter name="len" transfer-ownership="none">
            <doc xml:space="preserve">actual number of @X and @Y values to plot</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
          <parameter name="X" transfer-ownership="none">
            <doc xml:space="preserve">array of horizontal position values of markers</doc>
            <type name="gpointer" c:type="void*"/>
          </parameter>
          <parameter name="xstart" transfer-ownership="none">
            <doc xml:space="preserve">the first element in the X array to plot (usually 0)</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
          <parameter name="xstride" transfer-ownership="none">
            <doc xml:space="preserve">successive elements in the X array are separated by this much (1 if array, ncols if matrix)</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
          <parameter name="xtype" transfer-ownership="none">
            <doc xml:space="preserve">the GType of the X array elements.  G_TYPE_FLOAT, G_TYPE_DOUBLE, etc.</doc>
            <type name="GType" c:type="GType"/>
          </parameter>
          <parameter name="Y" transfer-ownership="none">
            <doc xml:space="preserve">array of vertical position values of markers</doc>
            <type name="gpointer" c:type="void*"/>
          </parameter>
          <parameter name="ystart" transfer-ownership="none">
            <doc xml:space="preserve">the first element in the Y array to plot (usually 0)</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
          <parameter name="ystride" transfer-ownership="none">
            <doc xml:space="preserve">successive elements in the Y array are separated by this much (1 if array, ncols if matrix)</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
          <parameter name="ytype" transfer-ownership="none">
            <doc xml:space="preserve">the GType of the Y array elements.  G_TYPE_FLOAT, G_TYPE_DOUBLE, etc.</doc>
            <type name="GType" c:type="GType"/>
          </parameter>
          <parameter name="color" transfer-ownership="none">
            <doc xml:space="preserve">color of the markers</doc>
            <type name="Gdk.RGBA" c:type="GdkRGBA*"/>
          </parameter>
          <parameter name="size" transfer-ownership="none">
            <doc xml:space="preserve">marker size or line width (depending on the @type)</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
        </parameters>
      </function>
      <field name="parent" readable="0" private="1">
        <type name="XYCGraph" c:type="GtkDataboxXYCGraph"/>
      </field>
    </class>
    <record name="LinesClass"
            c:type="GtkDataboxLinesClass"
            glib:is-gtype-struct-for="Lines">
      <field name="parent_class">
        <type name="XYCGraphClass" c:type="GtkDataboxXYCGraphClass"/>
      </field>
    </record>
    <class name="Markers"
           c:symbol-prefix="markers"
           c:type="GtkDataboxMarkers"
           parent="XYCGraph"
           glib:type-name="GtkDataboxMarkers"
           glib:get-type="gtk_databox_markers_get_type"
           glib:type-struct="MarkersClass">
      <doc xml:space="preserve">#GtkDataboxMarkers is a #GtkDataboxGraph class for displaying labeled markers (circles, triangles, lines) for xy-values.</doc>
      <function name="new"
                c:identifier="gtk_databox_markers_new"
                introspectable="0">
        <doc xml:space="preserve">Creates a new #GtkDataboxMarkers object which can be added to a #GtkDatabox widget as nice decoration for other graphs.</doc>
        <return-value>
          <doc xml:space="preserve">A new #GtkDataboxMarkers object</doc>
          <type name="Graph" c:type="GtkDataboxGraph*"/>
        </return-value>
        <parameters>
          <parameter name="len" transfer-ownership="none">
            <doc xml:space="preserve">length of @X and @Y</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
          <parameter name="X" transfer-ownership="none">
            <doc xml:space="preserve">array of horizontal position values of markers</doc>
            <type name="gfloat" c:type="gfloat*"/>
          </parameter>
          <parameter name="Y" transfer-ownership="none">
            <doc xml:space="preserve">array of vertical position values of markers</doc>
            <type name="gfloat" c:type="gfloat*"/>
          </parameter>
          <parameter name="color" transfer-ownership="none">
            <doc xml:space="preserve">color of the markers</doc>
            <type name="Gdk.RGBA" c:type="GdkRGBA*"/>
          </parameter>
          <parameter name="size" transfer-ownership="none">
            <doc xml:space="preserve">marker size or line width (depending on the @type)</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
          <parameter name="type" transfer-ownership="none">
            <doc xml:space="preserve">type of markers (e.g. triangle or circle)</doc>
            <type name="MarkersType" c:type="GtkDataboxMarkersType"/>
          </parameter>
        </parameters>
      </function>
      <function name="new_full"
                c:identifier="gtk_databox_markers_new_full"
                introspectable="0">
        <doc xml:space="preserve">Creates a new #GtkDataboxMarkers object which can be added to a #GtkDatabox widget as nice decoration for other graphs.</doc>
        <return-value>
          <doc xml:space="preserve">A new #GtkDataboxMarkers object</doc>
          <type name="Graph" c:type="GtkDataboxGraph*"/>
        </return-value>
        <parameters>
          <parameter name="maxlen" transfer-ownership="none">
            <doc xml:space="preserve">maximum length of @X and @Y</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
          <parameter name="len" transfer-ownership="none">
            <doc xml:space="preserve">actual number of @X and @Y values to plot</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
          <parameter name="X" transfer-ownership="none">
            <doc xml:space="preserve">array of horizontal position values of markers</doc>
            <type name="gpointer" c:type="void*"/>
          </parameter>
          <parameter name="xstart" transfer-ownership="none">
            <doc xml:space="preserve">the first element in the X array to plot (usually 0)</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
          <parameter name="xstride" transfer-ownership="none">
            <doc xml:space="preserve">successive elements in the X array are separated by this much (1 if array, ncols if matrix)</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
          <parameter name="xtype" transfer-ownership="none">
            <doc xml:space="preserve">the GType of the X array elements.  G_TYPE_FLOAT, G_TYPE_DOUBLE, etc.</doc>
            <type name="GType" c:type="GType"/>
          </parameter>
          <parameter name="Y" transfer-ownership="none">
            <doc xml:space="preserve">array of vertical position values of markers</doc>
            <type name="gpointer" c:type="void*"/>
          </parameter>
          <parameter name="ystart" transfer-ownership="none">
            <doc xml:space="preserve">the first element in the Y array to plot (usually 0)</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
          <parameter name="ystride" transfer-ownership="none">
            <doc xml:space="preserve">successive elements in the Y array are separated by this much (1 if array, ncols if matrix)</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
          <parameter name="ytype" transfer-ownership="none">
            <doc xml:space="preserve">the GType of the Y array elements.  G_TYPE_FLOAT, G_TYPE_DOUBLE, etc.</doc>
            <type name="GType" c:type="GType"/>
          </parameter>
          <parameter name="color" transfer-ownership="none">
            <doc xml:space="preserve">color of the markers</doc>
            <type name="Gdk.RGBA" c:type="GdkRGBA*"/>
          </parameter>
          <parameter name="size" transfer-ownership="none">
            <doc xml:space="preserve">marker size or line width (depending on the @type)</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
          <parameter name="type" transfer-ownership="none">
            <doc xml:space="preserve">type of markers (e.g. triangle or circle)</doc>
            <type name="MarkersType" c:type="GtkDataboxMarkersType"/>
          </parameter>
        </parameters>
      </function>
      <method name="set_label" c:identifier="gtk_databox_markers_set_label">
        <doc xml:space="preserve">Sets a label for one of the markers.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="markers" transfer-ownership="none">
            <doc xml:space="preserve">A #GtkDataboxMarkers object</doc>
            <type name="Markers" c:type="GtkDataboxMarkers*"/>
          </instance-parameter>
          <parameter name="index" transfer-ownership="none">
            <doc xml:space="preserve">index within the array of X/Y values</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
          <parameter name="label_position" transfer-ownership="none">
            <doc xml:space="preserve">position of the label relative to the marker</doc>
            <type name="MarkersTextPosition"
                  c:type="GtkDataboxMarkersTextPosition"/>
          </parameter>
          <parameter name="text" transfer-ownership="none">
            <doc xml:space="preserve">text to be displayed in the label</doc>
            <type name="utf8" c:type="gchar*"/>
          </parameter>
          <parameter name="boxed" transfer-ownership="none">
            <doc xml:space="preserve">Whether the label is to be enclosed in a box (true) or not (false)</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_position"
              c:identifier="gtk_databox_markers_set_position">
        <doc xml:space="preserve">Sets a position for one of the markers.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="markers" transfer-ownership="none">
            <doc xml:space="preserve">A #GtkDataboxMarkers object</doc>
            <type name="Markers" c:type="GtkDataboxMarkers*"/>
          </instance-parameter>
          <parameter name="index" transfer-ownership="none">
            <doc xml:space="preserve">index within the array of X/Y values</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
          <parameter name="position" transfer-ownership="none">
            <doc xml:space="preserve">position of the marker (e.g. circle or triangle relative to their X/Y value</doc>
            <type name="MarkersPosition" c:type="GtkDataboxMarkersPosition"/>
          </parameter>
        </parameters>
      </method>
      <property name="markers-type"
                writable="1"
                construct="1"
                transfer-ownership="none">
        <type name="gint" c:type="gint"/>
      </property>
      <field name="parent" readable="0" private="1">
        <doc xml:space="preserve">The parent object</doc>
        <type name="XYCGraph" c:type="GtkDataboxXYCGraph"/>
      </field>
    </class>
    <record name="MarkersClass"
            c:type="GtkDataboxMarkersClass"
            glib:is-gtype-struct-for="Markers">
      <field name="parent_class">
        <type name="XYCGraphClass" c:type="GtkDataboxXYCGraphClass"/>
      </field>
    </record>
    <enumeration name="MarkersPosition" c:type="GtkDataboxMarkersPosition">
      <doc xml:space="preserve">Position of a marker relative to its respective X/Y value.</doc>
      <member name="c" value="0" c:identifier="GTK_DATABOX_MARKERS_C">
        <doc xml:space="preserve">centered on data</doc>
      </member>
      <member name="n" value="1" c:identifier="GTK_DATABOX_MARKERS_N">
        <doc xml:space="preserve">marker is positioned north of data</doc>
      </member>
      <member name="e" value="2" c:identifier="GTK_DATABOX_MARKERS_E">
        <doc xml:space="preserve">marker is positioned east of data</doc>
      </member>
      <member name="s" value="3" c:identifier="GTK_DATABOX_MARKERS_S">
        <doc xml:space="preserve">marker is positioned south of data</doc>
      </member>
      <member name="w" value="4" c:identifier="GTK_DATABOX_MARKERS_W">
        <doc xml:space="preserve">marker is positioned west of data</doc>
      </member>
    </enumeration>
    <enumeration name="MarkersTextPosition"
                 c:type="GtkDataboxMarkersTextPosition">
      <doc xml:space="preserve">Position of a label relative to its repective marker.</doc>
      <member name="center"
              value="0"
              c:identifier="GTK_DATABOX_MARKERS_TEXT_CENTER">
        <doc xml:space="preserve">text centered   on marker</doc>
      </member>
      <member name="n" value="1" c:identifier="GTK_DATABOX_MARKERS_TEXT_N">
        <doc xml:space="preserve">text north      of marker</doc>
      </member>
      <member name="ne" value="2" c:identifier="GTK_DATABOX_MARKERS_TEXT_NE">
        <doc xml:space="preserve">text north-east of marker</doc>
      </member>
      <member name="e" value="3" c:identifier="GTK_DATABOX_MARKERS_TEXT_E">
        <doc xml:space="preserve">text east       of marker</doc>
      </member>
      <member name="se" value="4" c:identifier="GTK_DATABOX_MARKERS_TEXT_SE">
        <doc xml:space="preserve">text south-east of marker</doc>
      </member>
      <member name="s" value="5" c:identifier="GTK_DATABOX_MARKERS_TEXT_S">
        <doc xml:space="preserve">text south      of marker</doc>
      </member>
      <member name="sw" value="6" c:identifier="GTK_DATABOX_MARKERS_TEXT_SW">
        <doc xml:space="preserve">text south-west of marker</doc>
      </member>
      <member name="w" value="7" c:identifier="GTK_DATABOX_MARKERS_TEXT_W">
        <doc xml:space="preserve">text west       of marker</doc>
      </member>
      <member name="nw" value="8" c:identifier="GTK_DATABOX_MARKERS_TEXT_NW">
        <doc xml:space="preserve">text north-west of marker</doc>
      </member>
    </enumeration>
    <enumeration name="MarkersType" c:type="GtkDataboxMarkersType">
      <doc xml:space="preserve">Type of the marker</doc>
      <member name="none" value="0" c:identifier="GTK_DATABOX_MARKERS_NONE">
        <doc xml:space="preserve">No Marker (just text)</doc>
      </member>
      <member name="triangle"
              value="1"
              c:identifier="GTK_DATABOX_MARKERS_TRIANGLE">
        <doc xml:space="preserve">Marker is a triangle</doc>
      </member>
      <member name="solid_line"
              value="2"
              c:identifier="GTK_DATABOX_MARKERS_SOLID_LINE">
        <doc xml:space="preserve">Marker is a solid line</doc>
      </member>
      <member name="dashed_line"
              value="3"
              c:identifier="GTK_DATABOX_MARKERS_DASHED_LINE">
        <doc xml:space="preserve">Marker is a dashed line</doc>
      </member>
    </enumeration>
    <class name="OffsetBars"
           c:symbol-prefix="offset_bars"
           c:type="GtkDataboxOffsetBars"
           parent="XYYCGraph"
           glib:type-name="GtkDataboxOffsetBars"
           glib:get-type="gtk_databox_offset_bars_get_type"
           glib:type-struct="OffsetBarsClass">
      <doc xml:space="preserve">#GtkDataboxOffsetBars is a #GtkDataboxGraph class for displaying xyy-values as vertical bars which rise/drop from y1.</doc>
      <function name="new"
                c:identifier="gtk_databox_offset_bars_new"
                introspectable="0">
        <doc xml:space="preserve">Creates a new #GtkDataboxOffsetBars object which can be added to a #GtkDatabox widget</doc>
        <return-value>
          <doc xml:space="preserve">A new #GtkDataboxOffsetBars object</doc>
          <type name="Graph" c:type="GtkDataboxGraph*"/>
        </return-value>
        <parameters>
          <parameter name="len" transfer-ownership="none">
            <doc xml:space="preserve">length of @X, @Y1  and @Y2</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
          <parameter name="X" transfer-ownership="none">
            <doc xml:space="preserve">array of horizontal position values of markers</doc>
            <type name="gfloat" c:type="gfloat*"/>
          </parameter>
          <parameter name="Y1" transfer-ownership="none">
            <doc xml:space="preserve">array of starting vertical position values of markers</doc>
            <type name="gfloat" c:type="gfloat*"/>
          </parameter>
          <parameter name="Y2" transfer-ownership="none">
            <doc xml:space="preserve">array of ending vertical position values of markers</doc>
            <type name="gfloat" c:type="gfloat*"/>
          </parameter>
          <parameter name="color" transfer-ownership="none">
            <doc xml:space="preserve">color of the markers</doc>
            <type name="Gdk.RGBA" c:type="GdkRGBA*"/>
          </parameter>
          <parameter name="size" transfer-ownership="none">
            <doc xml:space="preserve">marker size or line width (depending on the @type)</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
        </parameters>
      </function>
      <function name="new_full"
                c:identifier="gtk_databox_offset_bars_new_full"
                introspectable="0">
        <doc xml:space="preserve">Creates a new #GtkDataboxOffsetBars object which can be added to a #GtkDatabox widget</doc>
        <return-value>
          <doc xml:space="preserve">A new #GtkDataboxOffsetBars object</doc>
          <type name="Graph" c:type="GtkDataboxGraph*"/>
        </return-value>
        <parameters>
          <parameter name="maxlen" transfer-ownership="none">
            <doc xml:space="preserve">maximum length of @X and @Y</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
          <parameter name="len" transfer-ownership="none">
            <doc xml:space="preserve">actual number of @X and @Y values to plot</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
          <parameter name="X" transfer-ownership="none">
            <doc xml:space="preserve">array of horizontal position values of markers</doc>
            <type name="gpointer" c:type="void*"/>
          </parameter>
          <parameter name="xstart" transfer-ownership="none">
            <doc xml:space="preserve">the first element in the X array to plot (usually 0)</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
          <parameter name="xstride" transfer-ownership="none">
            <doc xml:space="preserve">successive elements in the X array are separated by this much (1 if array, ncols if matrix)</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
          <parameter name="xtype" transfer-ownership="none">
            <doc xml:space="preserve">the GType of the X array elements.  G_TYPE_FLOAT, G_TYPE_DOUBLE, etc.</doc>
            <type name="GType" c:type="GType"/>
          </parameter>
          <parameter name="Y1" transfer-ownership="none">
            <doc xml:space="preserve">array of starting vertical position values of markers</doc>
            <type name="gpointer" c:type="void*"/>
          </parameter>
          <parameter name="y1start" transfer-ownership="none">
            <doc xml:space="preserve">the first element in the Y1 array to plot (usually 0)</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
          <parameter name="y1stride" transfer-ownership="none">
            <doc xml:space="preserve">successive elements in the Y1 array are separated by this much (1 if array, ncols if matrix)</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
          <parameter name="Y2" transfer-ownership="none">
            <doc xml:space="preserve">array of ending vertical position values of markers</doc>
            <type name="gpointer" c:type="void*"/>
          </parameter>
          <parameter name="y2start" transfer-ownership="none">
            <doc xml:space="preserve">the first element in the Y2 array to plot (usually 0)</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
          <parameter name="y2stride" transfer-ownership="none">
            <doc xml:space="preserve">successive elements in the Y2 array are separated by this much (1 if array, ncols if matrix)</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
          <parameter name="ytype" transfer-ownership="none">
            <doc xml:space="preserve">the GType of the Y1/Y2 array elements.  G_TYPE_FLOAT, G_TYPE_DOUBLE, etc.</doc>
            <type name="GType" c:type="GType"/>
          </parameter>
          <parameter name="color" transfer-ownership="none">
            <doc xml:space="preserve">color of the markers</doc>
            <type name="Gdk.RGBA" c:type="GdkRGBA*"/>
          </parameter>
          <parameter name="size" transfer-ownership="none">
            <doc xml:space="preserve">marker size or line width (depending on the @type)</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
        </parameters>
      </function>
      <field name="parent" readable="0" private="1">
        <type name="XYYCGraph" c:type="GtkDataboxXYYCGraph"/>
      </field>
    </class>
    <record name="OffsetBarsClass"
            c:type="GtkDataboxOffsetBarsClass"
            glib:is-gtype-struct-for="OffsetBars">
      <field name="parent_class">
        <type name="XYYCGraphClass" c:type="GtkDataboxXYYCGraphClass"/>
      </field>
    </record>
    <class name="Points"
           c:symbol-prefix="points"
           c:type="GtkDataboxPoints"
           parent="XYCGraph"
           glib:type-name="GtkDataboxPoints"
           glib:get-type="gtk_databox_points_get_type"
           glib:type-struct="PointsClass">
      <doc xml:space="preserve">#GtkDataboxPoints is a #GtkDataboxGraph class for displaying xy-values as dots.</doc>
      <function name="new"
                c:identifier="gtk_databox_points_new"
                introspectable="0">
        <doc xml:space="preserve">Creates a new #GtkDataboxPoints object which can be added to a #GtkDatabox widget.</doc>
        <return-value>
          <doc xml:space="preserve">A new #GtkDataboxPoints object</doc>
          <type name="Graph" c:type="GtkDataboxGraph*"/>
        </return-value>
        <parameters>
          <parameter name="len" transfer-ownership="none">
            <doc xml:space="preserve">length of @X and @Y</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
          <parameter name="X" transfer-ownership="none">
            <doc xml:space="preserve">array of horizontal position values of markers</doc>
            <type name="gfloat" c:type="gfloat*"/>
          </parameter>
          <parameter name="Y" transfer-ownership="none">
            <doc xml:space="preserve">array of vertical position values of markers</doc>
            <type name="gfloat" c:type="gfloat*"/>
          </parameter>
          <parameter name="color" transfer-ownership="none">
            <doc xml:space="preserve">color of the markers</doc>
            <type name="Gdk.RGBA" c:type="GdkRGBA*"/>
          </parameter>
          <parameter name="size" transfer-ownership="none">
            <doc xml:space="preserve">marker size or line width (depending on the @type)</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
        </parameters>
      </function>
      <function name="new_full"
                c:identifier="gtk_databox_points_new_full"
                introspectable="0">
        <doc xml:space="preserve">Creates a new #GtkDataboxPoints object which can be added to a #GtkDatabox widget.</doc>
        <return-value>
          <doc xml:space="preserve">A new #GtkDataboxPoints object</doc>
          <type name="Graph" c:type="GtkDataboxGraph*"/>
        </return-value>
        <parameters>
          <parameter name="maxlen" transfer-ownership="none">
            <doc xml:space="preserve">maximum length of @X and @Y</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
          <parameter name="len" transfer-ownership="none">
            <doc xml:space="preserve">actual number of @X and @Y values to plot</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
          <parameter name="X" transfer-ownership="none">
            <doc xml:space="preserve">array of horizontal position values of markers</doc>
            <type name="gpointer" c:type="void*"/>
          </parameter>
          <parameter name="xstart" transfer-ownership="none">
            <doc xml:space="preserve">the first element in the X array to plot (usually 0)</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
          <parameter name="xstride" transfer-ownership="none">
            <doc xml:space="preserve">successive elements in the X array are separated by this much (1 if array, ncols if matrix)</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
          <parameter name="xtype" transfer-ownership="none">
            <doc xml:space="preserve">the GType of the X array elements.  G_TYPE_FLOAT, G_TYPE_DOUBLE, etc.</doc>
            <type name="GType" c:type="GType"/>
          </parameter>
          <parameter name="Y" transfer-ownership="none">
            <doc xml:space="preserve">array of vertical position values of markers</doc>
            <type name="gpointer" c:type="void*"/>
          </parameter>
          <parameter name="ystart" transfer-ownership="none">
            <doc xml:space="preserve">the first element in the Y array to plot (usually 0)</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
          <parameter name="ystride" transfer-ownership="none">
            <doc xml:space="preserve">successive elements in the Y array are separated by this much (1 if array, ncols if matrix)</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
          <parameter name="ytype" transfer-ownership="none">
            <doc xml:space="preserve">the GType of the Y array elements.  G_TYPE_FLOAT, G_TYPE_DOUBLE, etc.</doc>
            <type name="GType" c:type="GType"/>
          </parameter>
          <parameter name="color" transfer-ownership="none">
            <doc xml:space="preserve">color of the markers</doc>
            <type name="Gdk.RGBA" c:type="GdkRGBA*"/>
          </parameter>
          <parameter name="size" transfer-ownership="none">
            <doc xml:space="preserve">marker size or line width (depending on the @type)</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
        </parameters>
      </function>
      <field name="parent" readable="0" private="1">
        <type name="XYCGraph" c:type="GtkDataboxXYCGraph"/>
      </field>
    </class>
    <record name="PointsClass"
            c:type="GtkDataboxPointsClass"
            glib:is-gtype-struct-for="Points">
      <field name="parent_class">
        <type name="XYCGraphClass" c:type="GtkDataboxXYCGraphClass"/>
      </field>
    </record>
    <constant name="RULER_MAX_MAX_LENGTH"
              value="63"
              c:type="GTK_DATABOX_RULER_MAX_MAX_LENGTH">
      <doc xml:space="preserve">The maximum upper limit of label length in characters</doc>
      <type name="gint" c:type="gint"/>
    </constant>
    <class name="Regions"
           c:symbol-prefix="regions"
           c:type="GtkDataboxRegions"
           parent="XYYCGraph"
           glib:type-name="GtkDataboxRegions"
           glib:get-type="gtk_databox_regions_get_type"
           glib:type-struct="RegionsClass">
      <doc xml:space="preserve">#GtkDataboxRegions is a #GtkDataboxGraph class for displaying xxyy-values as oblongs.</doc>
      <function name="new"
                c:identifier="gtk_databox_regions_new"
                introspectable="0">
        <doc xml:space="preserve">Creates a new #GtkDataboxRegions object which can be added to a #GtkDatabox widget</doc>
        <return-value>
          <doc xml:space="preserve">A new #GtkDataboxRegions object</doc>
          <type name="Graph" c:type="GtkDataboxGraph*"/>
        </return-value>
        <parameters>
          <parameter name="len" transfer-ownership="none">
            <doc xml:space="preserve">length of @X, @Y1  and @Y2</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
          <parameter name="X" transfer-ownership="none">
            <doc xml:space="preserve">array of ordinates</doc>
            <type name="gfloat" c:type="gfloat*"/>
          </parameter>
          <parameter name="Y1" transfer-ownership="none">
            <doc xml:space="preserve">array of co-ordinates</doc>
            <type name="gfloat" c:type="gfloat*"/>
          </parameter>
          <parameter name="Y2" transfer-ownership="none">
            <doc xml:space="preserve">array of co-ordinates</doc>
            <type name="gfloat" c:type="gfloat*"/>
          </parameter>
          <parameter name="color" transfer-ownership="none">
            <doc xml:space="preserve">color of the markers</doc>
            <type name="Gdk.RGBA" c:type="GdkRGBA*"/>
          </parameter>
        </parameters>
      </function>
      <function name="new_full"
                c:identifier="gtk_databox_regions_new_full"
                introspectable="0">
        <doc xml:space="preserve">Creates a new #GtkDataboxRegions object which can be added to a #GtkDatabox widget</doc>
        <return-value>
          <doc xml:space="preserve">A new #GtkDataboxRegions object</doc>
          <type name="Graph" c:type="GtkDataboxGraph*"/>
        </return-value>
        <parameters>
          <parameter name="maxlen" transfer-ownership="none">
            <doc xml:space="preserve">maximum length of @X and @Y</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
          <parameter name="len" transfer-ownership="none">
            <doc xml:space="preserve">actual number of @X and @Y values to plot</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
          <parameter name="X" transfer-ownership="none">
            <doc xml:space="preserve">array of ordinates</doc>
            <type name="gpointer" c:type="void*"/>
          </parameter>
          <parameter name="xstart" transfer-ownership="none">
            <doc xml:space="preserve">the first element in the X array to plot (usually 0)</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
          <parameter name="xstride" transfer-ownership="none">
            <doc xml:space="preserve">successive elements in the X array are separated by this much (1 if array, ncols if matrix)</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
          <parameter name="xtype" transfer-ownership="none">
            <doc xml:space="preserve">the GType of the X array elements.  G_TYPE_FLOAT, G_TYPE_DOUBLE, etc.</doc>
            <type name="GType" c:type="GType"/>
          </parameter>
          <parameter name="Y1" transfer-ownership="none">
            <doc xml:space="preserve">array of co-ordinates</doc>
            <type name="gpointer" c:type="void*"/>
          </parameter>
          <parameter name="y1start" transfer-ownership="none">
            <doc xml:space="preserve">the first element in the Y1 array to plot (usually 0)</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
          <parameter name="y1stride" transfer-ownership="none">
            <doc xml:space="preserve">successive elements in the Y1 array are separated by this much (1 if array, ncols if matrix)</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
          <parameter name="Y2" transfer-ownership="none">
            <doc xml:space="preserve">array of co-ordinates</doc>
            <type name="gpointer" c:type="void*"/>
          </parameter>
          <parameter name="y2start" transfer-ownership="none">
            <doc xml:space="preserve">the first element in the Y2 array to plot (usually 0)</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
          <parameter name="y2stride" transfer-ownership="none">
            <doc xml:space="preserve">successive elements in the Y2 array are separated by this much (1 if array, ncols if matrix)</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
          <parameter name="ytype" transfer-ownership="none">
            <doc xml:space="preserve">the GType of the Y1/Y2 array elements.  G_TYPE_FLOAT, G_TYPE_DOUBLE, etc.</doc>
            <type name="GType" c:type="GType"/>
          </parameter>
          <parameter name="color" transfer-ownership="none">
            <doc xml:space="preserve">color of the markers</doc>
            <type name="Gdk.RGBA" c:type="GdkRGBA*"/>
          </parameter>
        </parameters>
      </function>
      <field name="parent" readable="0" private="1">
        <type name="XYYCGraph" c:type="GtkDataboxXYYCGraph"/>
      </field>
    </class>
    <record name="RegionsClass"
            c:type="GtkDataboxRegionsClass"
            glib:is-gtype-struct-for="Regions">
      <field name="parent_class">
        <type name="XYYCGraphClass" c:type="GtkDataboxXYYCGraphClass"/>
      </field>
    </record>
    <class name="Ruler"
           c:symbol-prefix="ruler"
           c:type="GtkDataboxRuler"
           parent="Gtk.Widget"
           glib:type-name="GtkDataboxRuler"
           glib:get-type="gtk_databox_ruler_get_type"
           glib:type-struct="RulerClass">
      <doc xml:space="preserve">An improved version (see above) of GtkRuler which supports linear and logarithmic scales.</doc>
      <implements name="Atk.ImplementorIface"/>
      <implements name="Gtk.Buildable"/>
      <constructor name="new" c:identifier="gtk_databox_ruler_new">
        <doc xml:space="preserve">Creates a new #GtkDataboxRuler widget with the given @orientation (horizontal or vertical).</doc>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve">A new #GtkDataboxRuler</doc>
          <type name="Gtk.Widget" c:type="GtkWidget*"/>
        </return-value>
        <parameters>
          <parameter name="orientation" transfer-ownership="none">
            <doc xml:space="preserve">orientation of the ruler</doc>
            <type name="Gtk.Orientation" c:type="GtkOrientation"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="get_box_shadow"
              c:identifier="gtk_databox_ruler_get_box_shadow">
        <doc xml:space="preserve">Gets the type of shadow being rendered to the @ruler (GTK_SHADOW_NONE, GTK_SHADOW_IN, GTK_SHADOW_OUT, GTK_SHADOW_ETCHED_IN, GTK_SHADOW_ETCHED_OUT).</doc>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve">The currently used shadow type of the @ruler, -1 on failure.</doc>
          <type name="Gtk.ShadowType" c:type="GtkShadowType"/>
        </return-value>
        <parameters>
          <instance-parameter name="ruler" transfer-ownership="none">
            <doc xml:space="preserve">a #GtkDataboxRuler</doc>
            <type name="Ruler" c:type="GtkDataboxRuler*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_draw_position"
              c:identifier="gtk_databox_ruler_get_draw_position">
        <doc xml:space="preserve">Gets the draw position arrows option from the @ruler (horizontal or vertical).</doc>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve">Position drawing option of the @ruler.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="ruler" transfer-ownership="none">
            <doc xml:space="preserve">a #GtkDataboxRuler</doc>
            <type name="Ruler" c:type="GtkDataboxRuler*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_draw_subticks"
              c:identifier="gtk_databox_ruler_get_draw_subticks">
        <doc xml:space="preserve">Gets the draw subticks option from the @ruler (horizontal or vertical).</doc>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve">Subtick drawing option of the @ruler.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="ruler" transfer-ownership="none">
            <doc xml:space="preserve">a #GtkDataboxRuler</doc>
            <type name="Ruler" c:type="GtkDataboxRuler*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_draw_ticks"
              c:identifier="gtk_databox_ruler_get_draw_ticks">
        <doc xml:space="preserve">Gets the draw ticks option from the @ruler (horizontal or vertical).</doc>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve">Tick drawing option of the @ruler.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="ruler" transfer-ownership="none">
            <doc xml:space="preserve">a #GtkDataboxRuler</doc>
            <type name="Ruler" c:type="GtkDataboxRuler*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_invert_edge"
              c:identifier="gtk_databox_ruler_get_invert_edge">
        <doc xml:space="preserve">Gets the invert edge option from the @ruler (horizontal or vertical).</doc>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve">Edge inversion option of the @ruler.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="ruler" transfer-ownership="none">
            <doc xml:space="preserve">a #GtkDataboxRuler</doc>
            <type name="Ruler" c:type="GtkDataboxRuler*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_linear_label_format"
              c:identifier="gtk_databox_ruler_get_linear_label_format">
        <doc xml:space="preserve">Gets the linear label meta format of the @ruler (horizontal or vertical).</doc>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve">The string meta format the @ruler NULL on failure.</doc>
          <type name="utf8" c:type="gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="ruler" transfer-ownership="none">
            <doc xml:space="preserve">a #GtkDataboxRuler</doc>
            <type name="Ruler" c:type="GtkDataboxRuler*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_log_label_format"
              c:identifier="gtk_databox_ruler_get_log_label_format">
        <doc xml:space="preserve">Gets the log label meta format of the @ruler (horizontal or vertical).</doc>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve">The string meta format the @ruler, NULL on failure.</doc>
          <type name="utf8" c:type="gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="ruler" transfer-ownership="none">
            <doc xml:space="preserve">a #GtkDataboxRuler</doc>
            <type name="Ruler" c:type="GtkDataboxRuler*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_manual_tick_cnt"
              c:identifier="gtk_databox_ruler_get_manual_tick_cnt">
        <return-value transfer-ownership="none">
          <type name="guint" c:type="guint"/>
        </return-value>
        <parameters>
          <instance-parameter name="ruler" transfer-ownership="none">
            <type name="Ruler" c:type="GtkDataboxRuler*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_manual_tick_labels"
              c:identifier="gtk_databox_ruler_get_manual_tick_labels"
              introspectable="0">
        <return-value>
          <array c:type="gchar**">
            <type name="utf8"/>
          </array>
        </return-value>
        <parameters>
          <instance-parameter name="ruler" transfer-ownership="none">
            <type name="Ruler" c:type="GtkDataboxRuler*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_manual_ticks"
              c:identifier="gtk_databox_ruler_get_manual_ticks">
        <return-value transfer-ownership="none">
          <type name="gfloat" c:type="gfloat*"/>
        </return-value>
        <parameters>
          <instance-parameter name="ruler" transfer-ownership="none">
            <type name="Ruler" c:type="GtkDataboxRuler*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_max_length"
              c:identifier="gtk_databox_ruler_get_max_length">
        <doc xml:space="preserve">This function returns the maximum number of digits to be used for each tick
label of the @ruler.</doc>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve">The maximum length of the tick labels.</doc>
          <type name="guint" c:type="guint"/>
        </return-value>
        <parameters>
          <instance-parameter name="ruler" transfer-ownership="none">
            <doc xml:space="preserve">A #GtkDataboxRuler widget</doc>
            <type name="Ruler" c:type="GtkDataboxRuler*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_orientation"
              c:identifier="gtk_databox_ruler_get_orientation">
        <doc xml:space="preserve">Gets the orientation of the @ruler (horizontal or vertical).</doc>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve">Orientation of the @ruler.</doc>
          <type name="Gtk.Orientation" c:type="GtkOrientation"/>
        </return-value>
        <parameters>
          <instance-parameter name="ruler" transfer-ownership="none">
            <doc xml:space="preserve">a #GtkDataboxRuler</doc>
            <type name="Ruler" c:type="GtkDataboxRuler*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_range" c:identifier="gtk_databox_ruler_get_range">
        <doc xml:space="preserve">Retrieves values indicating the range and current position of a #GtkDataboxRuler.
See gtk_databox_ruler_set_range().</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="ruler" transfer-ownership="none">
            <doc xml:space="preserve">a #GtkDataboxRuler</doc>
            <type name="Ruler" c:type="GtkDataboxRuler*"/>
          </instance-parameter>
          <parameter name="lower" transfer-ownership="none">
            <doc xml:space="preserve">location to store lower limit of the ruler, or %NULL</doc>
            <type name="gdouble" c:type="gdouble*"/>
          </parameter>
          <parameter name="upper" transfer-ownership="none">
            <doc xml:space="preserve">location to store upper limit of the ruler, or %NULL</doc>
            <type name="gdouble" c:type="gdouble*"/>
          </parameter>
          <parameter name="position" transfer-ownership="none">
            <doc xml:space="preserve">location to store the current position of the mark on the ruler, or %NULL</doc>
            <type name="gdouble" c:type="gdouble*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_scale_type"
              c:identifier="gtk_databox_ruler_get_scale_type">
        <doc xml:space="preserve">This function returns the scale type of the @ruler (linear or logarithmic).</doc>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve">The scale type (linear or logarithmic)</doc>
          <type name="ScaleType" c:type="GtkDataboxScaleType"/>
        </return-value>
        <parameters>
          <instance-parameter name="ruler" transfer-ownership="none">
            <doc xml:space="preserve">A #GtkDataboxRuler widget</doc>
            <type name="Ruler" c:type="GtkDataboxRuler*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_text_alignment"
              c:identifier="gtk_databox_ruler_get_text_alignment">
        <doc xml:space="preserve">Gets the text alignment of the @ruler (vertical).
Vertical rulers with vertical text do not use this flag</doc>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve">Text alignment of the @ruler.</doc>
          <type name="Pango.Alignment" c:type="PangoAlignment"/>
        </return-value>
        <parameters>
          <instance-parameter name="ruler" transfer-ownership="none">
            <doc xml:space="preserve">a #GtkDataboxRuler</doc>
            <type name="Ruler" c:type="GtkDataboxRuler*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_text_hoffset"
              c:identifier="gtk_databox_ruler_get_text_hoffset">
        <doc xml:space="preserve">Gets the text x (horizontal) offset of the @ruler.</doc>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve">Text horizontal (x) offset of the @ruler.</doc>
          <type name="gint" c:type="gint"/>
        </return-value>
        <parameters>
          <instance-parameter name="ruler" transfer-ownership="none">
            <doc xml:space="preserve">a #GtkDataboxRuler</doc>
            <type name="Ruler" c:type="GtkDataboxRuler*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_text_orientation"
              c:identifier="gtk_databox_ruler_get_text_orientation">
        <doc xml:space="preserve">Gets the text orientation of the @ruler (horizontal or vertical).
Horizontal rulers always have horizontal text</doc>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve">Text orientation of the @ruler.</doc>
          <type name="Gtk.Orientation" c:type="GtkOrientation"/>
        </return-value>
        <parameters>
          <instance-parameter name="ruler" transfer-ownership="none">
            <doc xml:space="preserve">a #GtkDataboxRuler</doc>
            <type name="Ruler" c:type="GtkDataboxRuler*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="set_box_shadow"
              c:identifier="gtk_databox_ruler_set_box_shadow">
        <doc xml:space="preserve">Sets the shadow type when using gtk_paint_box. This will draw the desired edge shadow.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="ruler" transfer-ownership="none">
            <doc xml:space="preserve">a #GtkDataboxRuler</doc>
            <type name="Ruler" c:type="GtkDataboxRuler*"/>
          </instance-parameter>
          <parameter name="which_shadow" transfer-ownership="none">
            <doc xml:space="preserve">How to render the box shadow on the ruler edges.</doc>
            <type name="Gtk.ShadowType" c:type="GtkShadowType"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_draw_position"
              c:identifier="gtk_databox_ruler_set_draw_position">
        <doc xml:space="preserve">Sets the option for drawing the position arrows. If false, don't draw any arrows,
If true draw arrows.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="ruler" transfer-ownership="none">
            <doc xml:space="preserve">a #GtkDataboxRuler</doc>
            <type name="Ruler" c:type="GtkDataboxRuler*"/>
          </instance-parameter>
          <parameter name="draw" transfer-ownership="none">
            <doc xml:space="preserve">whether to draw the position arrows on the ruler at all</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_draw_subticks"
              c:identifier="gtk_databox_ruler_set_draw_subticks">
        <doc xml:space="preserve">Sets the option for drawing the subticks</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="ruler" transfer-ownership="none">
            <doc xml:space="preserve">a #GtkDataboxRuler</doc>
            <type name="Ruler" c:type="GtkDataboxRuler*"/>
          </instance-parameter>
          <parameter name="draw" transfer-ownership="none">
            <doc xml:space="preserve">whether to draw the subticks on the ruler</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_draw_ticks"
              c:identifier="gtk_databox_ruler_set_draw_ticks">
        <doc xml:space="preserve">Sets the option for drawing the ticks. If false, don't draw any ticks,
If true draw major ticks and subticks if the draw_subticks boolean is set.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="ruler" transfer-ownership="none">
            <doc xml:space="preserve">a #GtkDataboxRuler</doc>
            <type name="Ruler" c:type="GtkDataboxRuler*"/>
          </instance-parameter>
          <parameter name="draw" transfer-ownership="none">
            <doc xml:space="preserve">whether to draw the ticks on the ruler at all</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_invert_edge"
              c:identifier="gtk_databox_ruler_set_invert_edge">
        <doc xml:space="preserve">Sets the option for drawing the ruler detail on the opposite edge</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="ruler" transfer-ownership="none">
            <doc xml:space="preserve">a #GtkDataboxRuler</doc>
            <type name="Ruler" c:type="GtkDataboxRuler*"/>
          </instance-parameter>
          <parameter name="invert" transfer-ownership="none">
            <doc xml:space="preserve">whether to draw the ruler detail with the edge inverted</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_linear_label_format"
              c:identifier="gtk_databox_ruler_set_linear_label_format">
        <doc xml:space="preserve">Sets the meta format string for the labels of linear rulers, for example "%%+-%dg" will become "%+-#g" where # is the int variable</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="ruler" transfer-ownership="none">
            <doc xml:space="preserve">a #GtkDataboxRuler</doc>
            <type name="Ruler" c:type="GtkDataboxRuler*"/>
          </instance-parameter>
          <parameter name="format" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_log_label_format"
              c:identifier="gtk_databox_ruler_set_log_label_format">
        <doc xml:space="preserve">Sets the meta format string for the labels of log scaled rulers, for example "%%-%dg" will become "%-#g" where # is the int variable</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="ruler" transfer-ownership="none">
            <doc xml:space="preserve">a #GtkDataboxRuler</doc>
            <type name="Ruler" c:type="GtkDataboxRuler*"/>
          </instance-parameter>
          <parameter name="format" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_manual_tick_cnt"
              c:identifier="gtk_databox_ruler_set_manual_tick_cnt">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="ruler" transfer-ownership="none">
            <type name="Ruler" c:type="GtkDataboxRuler*"/>
          </instance-parameter>
          <parameter name="manual_tick_cnt" transfer-ownership="none">
            <type name="guint" c:type="guint"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_manual_tick_labels"
              c:identifier="gtk_databox_ruler_set_manual_tick_labels">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="ruler" transfer-ownership="none">
            <type name="Ruler" c:type="GtkDataboxRuler*"/>
          </instance-parameter>
          <parameter name="labels" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_manual_ticks"
              c:identifier="gtk_databox_ruler_set_manual_ticks">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="ruler" transfer-ownership="none">
            <type name="Ruler" c:type="GtkDataboxRuler*"/>
          </instance-parameter>
          <parameter name="manual_ticks" transfer-ownership="none">
            <type name="gfloat" c:type="gfloat*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_max_length"
              c:identifier="gtk_databox_ruler_set_max_length">
        <doc xml:space="preserve">This function sets the maximum number of digits to be used for each tick
label of the @ruler.

The @max_length cannot be smaller than 2 and not bigger than
#GTK_DATABOX_RULER_MAX_MAX_LENGTH.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="ruler" transfer-ownership="none">
            <doc xml:space="preserve">A #GtkDataboxRuler widget</doc>
            <type name="Ruler" c:type="GtkDataboxRuler*"/>
          </instance-parameter>
          <parameter name="max_length" transfer-ownership="none">
            <doc xml:space="preserve">Maximum length (digits) of tick labels</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_orientation"
              c:identifier="gtk_databox_ruler_set_orientation">
        <doc xml:space="preserve">Sets the orientation of the @ruler (horizontal or vertical).</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="ruler" transfer-ownership="none">
            <doc xml:space="preserve">a #GtkDataboxRuler</doc>
            <type name="Ruler" c:type="GtkDataboxRuler*"/>
          </instance-parameter>
          <parameter name="orientation" transfer-ownership="none">
            <doc xml:space="preserve">new orientation of the ruler</doc>
            <type name="Gtk.Orientation" c:type="GtkOrientation"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_range" c:identifier="gtk_databox_ruler_set_range">
        <doc xml:space="preserve">Sets values indicating the range and current position of a #GtkDataboxRuler.

See gtk_databox_ruler_get_range().</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="ruler" transfer-ownership="none">
            <doc xml:space="preserve">a #GtkDataboxRuler</doc>
            <type name="Ruler" c:type="GtkDataboxRuler*"/>
          </instance-parameter>
          <parameter name="lower" transfer-ownership="none">
            <doc xml:space="preserve">lower limit of the ruler</doc>
            <type name="gdouble" c:type="gdouble"/>
          </parameter>
          <parameter name="upper" transfer-ownership="none">
            <doc xml:space="preserve">upper limit of the ruler</doc>
            <type name="gdouble" c:type="gdouble"/>
          </parameter>
          <parameter name="position" transfer-ownership="none">
            <doc xml:space="preserve">current position of the mark on the ruler</doc>
            <type name="gdouble" c:type="gdouble"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_scale_type"
              c:identifier="gtk_databox_ruler_set_scale_type">
        <doc xml:space="preserve">This function sets the scale type of the @ruler.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="ruler" transfer-ownership="none">
            <doc xml:space="preserve">A #GtkDataboxRuler widget</doc>
            <type name="Ruler" c:type="GtkDataboxRuler*"/>
          </instance-parameter>
          <parameter name="scale_type" transfer-ownership="none">
            <doc xml:space="preserve">The new scale type for @ruler (linear or logarithmic)</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_text_alignment"
              c:identifier="gtk_databox_ruler_set_text_alignment">
        <doc xml:space="preserve">Sets the text alignment of the @ruler (vertical with horizontal text).</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="ruler" transfer-ownership="none">
            <doc xml:space="preserve">a #GtkDataboxRuler</doc>
            <type name="Ruler" c:type="GtkDataboxRuler*"/>
          </instance-parameter>
          <parameter name="alignment" transfer-ownership="none">
            <doc xml:space="preserve">new alignment of the tick label in the vertical ruler when horizontal text is set</doc>
            <type name="Pango.Alignment" c:type="PangoAlignment"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_text_hoffset"
              c:identifier="gtk_databox_ruler_set_text_hoffset">
        <doc xml:space="preserve">Sets the text x (horizontal) offset of the @ruler.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="ruler" transfer-ownership="none">
            <doc xml:space="preserve">a #GtkDataboxRuler</doc>
            <type name="Ruler" c:type="GtkDataboxRuler*"/>
          </instance-parameter>
          <parameter name="offset" transfer-ownership="none">
            <doc xml:space="preserve">new x offset of the tick label in the ruler</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_text_orientation"
              c:identifier="gtk_databox_ruler_set_text_orientation">
        <doc xml:space="preserve">Sets the text orientation of the @ruler (vertical).</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="ruler" transfer-ownership="none">
            <doc xml:space="preserve">a #GtkDataboxRuler</doc>
            <type name="Ruler" c:type="GtkDataboxRuler*"/>
          </instance-parameter>
          <parameter name="orientation" transfer-ownership="none">
            <doc xml:space="preserve">new orientation of the tick marks in the vertical ruler</doc>
            <type name="Gtk.Orientation" c:type="GtkOrientation"/>
          </parameter>
        </parameters>
      </method>
      <property name="box-shadow" writable="1" transfer-ownership="none">
        <type name="guint" c:type="guint"/>
      </property>
      <property name="draw-position" writable="1" transfer-ownership="none">
        <type name="guint" c:type="guint"/>
      </property>
      <property name="draw-subticks" writable="1" transfer-ownership="none">
        <type name="guint" c:type="guint"/>
      </property>
      <property name="draw-ticks" writable="1" transfer-ownership="none">
        <type name="guint" c:type="guint"/>
      </property>
      <property name="invert-edge" writable="1" transfer-ownership="none">
        <type name="guint" c:type="guint"/>
      </property>
      <property name="linear-label-format"
                writable="1"
                transfer-ownership="none">
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="log-label-format" writable="1" transfer-ownership="none">
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="lower" writable="1" transfer-ownership="none">
        <type name="gdouble" c:type="gdouble"/>
      </property>
      <property name="manual-tick-cnt" writable="1" transfer-ownership="none">
        <type name="guint" c:type="guint"/>
      </property>
      <property name="manual-tick-labels"
                writable="1"
                transfer-ownership="none">
        <type name="gpointer" c:type="gpointer"/>
      </property>
      <property name="manual-ticks" writable="1" transfer-ownership="none">
        <type name="gpointer" c:type="gpointer"/>
      </property>
      <property name="max-length" writable="1" transfer-ownership="none">
        <type name="guint" c:type="guint"/>
      </property>
      <property name="orientation"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <type name="guint" c:type="guint"/>
      </property>
      <property name="position" writable="1" transfer-ownership="none">
        <type name="gdouble" c:type="gdouble"/>
      </property>
      <property name="text-alignment" writable="1" transfer-ownership="none">
        <type name="guint" c:type="guint"/>
      </property>
      <property name="text-hoffset" writable="1" transfer-ownership="none">
        <type name="guint" c:type="guint"/>
      </property>
      <property name="text-orientation" writable="1" transfer-ownership="none">
        <type name="guint" c:type="guint"/>
      </property>
      <property name="upper" writable="1" transfer-ownership="none">
        <type name="gdouble" c:type="gdouble"/>
      </property>
      <field name="widget">
        <type name="Gtk.Widget" c:type="GtkWidget"/>
      </field>
      <field name="priv">
        <type name="RulerPrivate" c:type="GtkDataboxRulerPrivate*"/>
      </field>
    </class>
    <record name="RulerClass"
            c:type="GtkDataboxRulerClass"
            glib:is-gtype-struct-for="Ruler">
      <field name="parent_class">
        <type name="Gtk.WidgetClass" c:type="GtkWidgetClass"/>
      </field>
    </record>
    <record name="RulerPrivate" c:type="GtkDataboxRulerPrivate" disguised="1">
      <doc xml:space="preserve">A private data structure used by the #GtkDataboxRuler. It shields all internal things
from developers who are just using the object.</doc>
    </record>
    <enumeration name="ScaleType"
                 glib:type-name="GtkDataboxScaleType"
                 glib:get-type="gtk_databox_scale_type_get_type"
                 c:type="GtkDataboxScaleType">
      <doc xml:space="preserve">Scale type for #GtkDatabox and #GtkDataboxRuler objects.

See also: #GtkDatabox:scale_type_x, #GtkDatabox:scale_type_y</doc>
      <member name="linear"
              value="0"
              c:identifier="GTK_DATABOX_SCALE_LINEAR"
              glib:nick="linear">
        <doc xml:space="preserve">Linear scale</doc>
      </member>
      <member name="log"
              value="2"
              c:identifier="GTK_DATABOX_SCALE_LOG"
              glib:nick="log">
        <doc xml:space="preserve">Logarithmic scale (base 10)</doc>
      </member>
      <member name="log2"
              value="1"
              c:identifier="GTK_DATABOX_SCALE_LOG2"
              glib:nick="log2">
      </member>
    </enumeration>
    <record name="ValueRectangle" c:type="GtkDataboxValueRectangle">
      <field name="x1" writable="1">
        <type name="gfloat" c:type="gfloat"/>
      </field>
      <field name="x2" writable="1">
        <type name="gfloat" c:type="gfloat"/>
      </field>
      <field name="y1" writable="1">
        <type name="gfloat" c:type="gfloat"/>
      </field>
      <field name="y2" writable="1">
        <type name="gfloat" c:type="gfloat"/>
      </field>
    </record>
    <class name="XYCGraph"
           c:symbol-prefix="xyc_graph"
           c:type="GtkDataboxXYCGraph"
           parent="GObject.Object"
           glib:type-name="GtkDataboxXYCGraph"
           glib:get-type="gtk_databox_xyc_graph_get_type"
           glib:type-struct="XYCGraphClass">
      <doc xml:space="preserve">GtkDataboxXYCGraphs are an abstract class for displaying XY-data in one color. The values for the data are represented
as an array of X values and a second array of Y values. In order to actually display data, you should
use one of the derived classes.</doc>
      <method name="get_X" c:identifier="gtk_databox_xyc_graph_get_X">
        <doc xml:space="preserve">Gets the X values of the @xzc_graph.</doc>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve">Pointer to X values</doc>
          <type name="gfloat" c:type="gfloat*"/>
        </return-value>
        <parameters>
          <instance-parameter name="xyc_graph" transfer-ownership="none">
            <doc xml:space="preserve">A #GtkDataboxXYCGraph object</doc>
            <type name="XYCGraph" c:type="GtkDataboxXYCGraph*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_Y" c:identifier="gtk_databox_xyc_graph_get_Y">
        <doc xml:space="preserve">Gets the Y values of the @xzc_graph.</doc>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve">Pointer to Y values</doc>
          <type name="gfloat" c:type="gfloat*"/>
        </return-value>
        <parameters>
          <instance-parameter name="xyc_graph" transfer-ownership="none">
            <doc xml:space="preserve">A #GtkDataboxXYCGraph object</doc>
            <type name="XYCGraph" c:type="GtkDataboxXYCGraph*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_length"
              c:identifier="gtk_databox_xyc_graph_get_length">
        <doc xml:space="preserve">Gets the the length of the X and Y values arrays.</doc>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve">Length of X/Y arrays.</doc>
          <type name="guint" c:type="guint"/>
        </return-value>
        <parameters>
          <instance-parameter name="xyc_graph" transfer-ownership="none">
            <doc xml:space="preserve">A #GtkDataboxXYCGraph object</doc>
            <type name="XYCGraph" c:type="GtkDataboxXYCGraph*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_maxlen"
              c:identifier="gtk_databox_xyc_graph_get_maxlen">
        <doc xml:space="preserve">Gets the the maxlen of the X and Y values arrays.</doc>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve">Size of X/Y arrays.</doc>
          <type name="guint" c:type="guint"/>
        </return-value>
        <parameters>
          <instance-parameter name="xyc_graph" transfer-ownership="none">
            <doc xml:space="preserve">A #GtkDataboxXYCGraph object</doc>
            <type name="XYCGraph" c:type="GtkDataboxXYCGraph*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_xstart"
              c:identifier="gtk_databox_xyc_graph_get_xstart">
        <doc xml:space="preserve">Gets the the start offset of the X values array.  This is the element in the array pointed to by X that will be the first element plotted.
If X is a pointer to a gfloat array, and xstart is 5, then x[5] will be the first data element.  If Xstride is 1, then x[6] will be the
second element.  x[5 + len - 1] will be last element.
Usually, xstart will be 0.  It can be nonzero to allow for interleaved X/Y samples, or if the data is stored as a matrix, then X can point
to the start of the matrix, xstart can be the column number, and xstride the number of columns.</doc>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve">The xstart value.</doc>
          <type name="guint" c:type="guint"/>
        </return-value>
        <parameters>
          <instance-parameter name="xyc_graph" transfer-ownership="none">
            <doc xml:space="preserve">A #GtkDataboxXYCGraph object</doc>
            <type name="XYCGraph" c:type="GtkDataboxXYCGraph*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_xstride"
              c:identifier="gtk_databox_xyc_graph_get_xstride">
        <doc xml:space="preserve">Gets the the stride offset of the X values array.  This is the element in the array pointed to by X that will be the first element plotted.
If X is a pointer to a gfloat array, and xstart is 5, then x[5] will be the first data element.  If Xstride is 1, then x[6] will be the
second element.  x[5 + len - 1] will be last element.
Usually, xstride will be 1.  It can be nonzero to allow for interleaved X/Y samples, or if the data is stored as a matrix, then X can point
to the start of the matrix, xstart can be the column number, and xstride the number of columns.</doc>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve">The xstride value.</doc>
          <type name="guint" c:type="guint"/>
        </return-value>
        <parameters>
          <instance-parameter name="xyc_graph" transfer-ownership="none">
            <doc xml:space="preserve">A #GtkDataboxXYCGraph object</doc>
            <type name="XYCGraph" c:type="GtkDataboxXYCGraph*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_xtype" c:identifier="gtk_databox_xyc_graph_get_xtype">
        <doc xml:space="preserve">Gets the the GType of the X array elements.  This may be G_TYPE_FLOAT, G_TYPE_DOUBLE, or similar.</doc>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve">A GType, usually this is G_TYPE_FLOAT.</doc>
          <type name="GType" c:type="GType"/>
        </return-value>
        <parameters>
          <instance-parameter name="xyc_graph" transfer-ownership="none">
            <doc xml:space="preserve">A #GtkDataboxXYCGraph object</doc>
            <type name="XYCGraph" c:type="GtkDataboxXYCGraph*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_ystart"
              c:identifier="gtk_databox_xyc_graph_get_ystart">
        <doc xml:space="preserve">Gets the the start offset of the Y values array.  This is the element in the array pointed to by Y that will be the first element plotted.
If Y is a pointer to a gfloat array, and ystart is 5, then y[5] will be the first data element.  If Ystride is 1, then y[6] will be the
second element.  y[5 + len - 1] will be last element.
Usually, ystart will be 0.  It can be nonzero to allow for interleaved X/Y samples, or if the data is stored as a matrix, then Y can point
to the start of the matrix, ystart can be the column number, and ystride the number of columns.</doc>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve">The ystart value.</doc>
          <type name="guint" c:type="guint"/>
        </return-value>
        <parameters>
          <instance-parameter name="xyc_graph" transfer-ownership="none">
            <doc xml:space="preserve">A #GtkDataboxXYCGraph object</doc>
            <type name="XYCGraph" c:type="GtkDataboxXYCGraph*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_ystride"
              c:identifier="gtk_databox_xyc_graph_get_ystride">
        <doc xml:space="preserve">Gets the the stride offset of the Y values array.  This is the element in the array pointed to by Y that will be the first element plotted.
If Y is a pointer to a gfloat array, and ystart is 5, then y[5] will be the first data element.  If Ystride is 1, then y[6] will be the
second element.  y[5 + len - 1] will be last element.
Usually, ystride will be 1.  It can be nonzero to allow for interleaved X/Y samples, or if the data is stored as a matrix, then Y can point
to the start of the matrix, ystart can be the column number, and ystride the number of columns.</doc>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve">The ystride value.</doc>
          <type name="guint" c:type="guint"/>
        </return-value>
        <parameters>
          <instance-parameter name="xyc_graph" transfer-ownership="none">
            <doc xml:space="preserve">A #GtkDataboxXYCGraph object</doc>
            <type name="XYCGraph" c:type="GtkDataboxXYCGraph*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_ytype" c:identifier="gtk_databox_xyc_graph_get_ytype">
        <doc xml:space="preserve">Gets the the GType of the Y array elements.  This may be G_TYPE_FLOAT, G_TYPE_DOUBLE, or similar.</doc>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve">A GType, usually this is G_TYPE_FLOAT.</doc>
          <type name="GType" c:type="GType"/>
        </return-value>
        <parameters>
          <instance-parameter name="xyc_graph" transfer-ownership="none">
            <doc xml:space="preserve">A #GtkDataboxXYCGraph object</doc>
            <type name="XYCGraph" c:type="GtkDataboxXYCGraph*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="set_X_Y_length"
              c:identifier="gtk_databox_xyc_graph_set_X_Y_length">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="xyc_graph" transfer-ownership="none">
            <type name="XYCGraph" c:type="GtkDataboxXYCGraph*"/>
          </instance-parameter>
          <parameter name="X" transfer-ownership="none">
            <type name="gfloat" c:type="gfloat*"/>
          </parameter>
          <parameter name="Y" transfer-ownership="none">
            <type name="gfloat" c:type="gfloat*"/>
          </parameter>
          <parameter name="len" transfer-ownership="none">
            <type name="guint" c:type="guint"/>
          </parameter>
        </parameters>
      </method>
      <property name="X-Values"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <type name="gpointer" c:type="gpointer"/>
      </property>
      <property name="Y-Values"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <type name="gpointer" c:type="gpointer"/>
      </property>
      <property name="length"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <type name="gint" c:type="gint"/>
      </property>
      <property name="maxlen"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <type name="gint" c:type="gint"/>
      </property>
      <property name="xstart"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <type name="gint" c:type="gint"/>
      </property>
      <property name="xstride"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <type name="gint" c:type="gint"/>
      </property>
      <property name="xtype"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <type name="GType" c:type="GType"/>
      </property>
      <property name="ystart"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <type name="gint" c:type="gint"/>
      </property>
      <property name="ystride"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <type name="gint" c:type="gint"/>
      </property>
      <property name="ytype"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <type name="GType" c:type="GType"/>
      </property>
      <field name="parent" readable="0" private="1">
        <type name="Graph" c:type="GtkDataboxGraph"/>
      </field>
    </class>
    <record name="XYCGraphClass"
            c:type="GtkDataboxXYCGraphClass"
            glib:is-gtype-struct-for="XYCGraph">
      <field name="parent_class">
        <type name="GraphClass" c:type="GtkDataboxGraphClass"/>
      </field>
    </record>
    <class name="XYYCGraph"
           c:symbol-prefix="xyyc_graph"
           c:type="GtkDataboxXYYCGraph"
           parent="GObject.Object"
           glib:type-name="GtkDataboxXYYCGraph"
           glib:get-type="gtk_databox_xyyc_graph_get_type"
           glib:type-struct="XYYCGraphClass">
      <doc xml:space="preserve">GtkDataboxXYYCGraphs are an abstract class for displaying XY-data in one color. The values for the data are represented
as an array of X values and a second array of Y values. In order to actually display data, you should
use one of the derived classes.</doc>
      <method name="get_X" c:identifier="gtk_databox_xyyc_graph_get_X">
        <doc xml:space="preserve">Gets the X values of the @xzc_graph.</doc>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve">Pointer to X values</doc>
          <type name="gfloat" c:type="gfloat*"/>
        </return-value>
        <parameters>
          <instance-parameter name="xyyc_graph" transfer-ownership="none">
            <doc xml:space="preserve">A #GtkDataboxXYYCGraph object</doc>
            <type name="XYYCGraph" c:type="GtkDataboxXYYCGraph*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_Y1" c:identifier="gtk_databox_xyyc_graph_get_Y1">
        <doc xml:space="preserve">Gets the Y1 values of the @xzc_graph.</doc>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve">Pointer to Y1 values</doc>
          <type name="gfloat" c:type="gfloat*"/>
        </return-value>
        <parameters>
          <instance-parameter name="xyyc_graph" transfer-ownership="none">
            <doc xml:space="preserve">A #GtkDataboxXYYCGraph object</doc>
            <type name="XYYCGraph" c:type="GtkDataboxXYYCGraph*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_Y2" c:identifier="gtk_databox_xyyc_graph_get_Y2">
        <doc xml:space="preserve">Gets the Y2 values of the @xzc_graph.</doc>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve">Pointer to Y2 values</doc>
          <type name="gfloat" c:type="gfloat*"/>
        </return-value>
        <parameters>
          <instance-parameter name="xyyc_graph" transfer-ownership="none">
            <doc xml:space="preserve">A #GtkDataboxXYYCGraph object</doc>
            <type name="XYYCGraph" c:type="GtkDataboxXYYCGraph*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_length"
              c:identifier="gtk_databox_xyyc_graph_get_length">
        <doc xml:space="preserve">Gets the the length of the X and Y values arrays.</doc>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve">Length of X/Y arrays.</doc>
          <type name="guint" c:type="guint"/>
        </return-value>
        <parameters>
          <instance-parameter name="xyyc_graph" transfer-ownership="none">
            <doc xml:space="preserve">A #GtkDataboxXYYCGraph object</doc>
            <type name="XYYCGraph" c:type="GtkDataboxXYYCGraph*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_maxlen"
              c:identifier="gtk_databox_xyyc_graph_get_maxlen">
        <doc xml:space="preserve">Gets the the maxlen of the X and Y values arrays.</doc>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve">Size of X/Y arrays (size of the allocated storage).</doc>
          <type name="guint" c:type="guint"/>
        </return-value>
        <parameters>
          <instance-parameter name="xyyc_graph" transfer-ownership="none">
            <doc xml:space="preserve">A #GtkDataboxXYYCGraph object</doc>
            <type name="XYYCGraph" c:type="GtkDataboxXYYCGraph*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_xstart"
              c:identifier="gtk_databox_xyyc_graph_get_xstart">
        <doc xml:space="preserve">Gets the the start offset of the X values array.  This is the element in the array pointed to by X that will be the first element plotted.
If X is a pointer to a gfloat array, and xstart is 5, then x[5] will be the first data element.  If Xstride is 1, then x[6] will be the
second element.  x[5 + len - 1] will be last element.
Usually, xstart will be 0.  It can be nonzero to allow for interleaved X/Y samples, or if the data is stored as a matrix, then X can point
to the start of the matrix, xstart can be the column number, and xstride the number of columns.</doc>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve">The xstart value.</doc>
          <type name="guint" c:type="guint"/>
        </return-value>
        <parameters>
          <instance-parameter name="xyyc_graph" transfer-ownership="none">
            <doc xml:space="preserve">A #GtkDataboxXYYCGraph object</doc>
            <type name="XYYCGraph" c:type="GtkDataboxXYYCGraph*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_xstride"
              c:identifier="gtk_databox_xyyc_graph_get_xstride">
        <doc xml:space="preserve">Gets the the stride offset of the X values array.  This is the element in the array pointed to by X that will be the first element plotted.
If X is a pointer to a gfloat array, and xstart is 5, then x[5] will be the first data element.  If Xstride is 1, then x[6] will be the
second element.  x[5 + len - 1] will be last element.
Usually, xstride will be 1.  It can be nonzero to allow for interleaved X/Y samples, or if the data is stored as a matrix, then X can point
to the start of the matrix, xstart can be the column number, and xstride the number of columns.</doc>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve">The xstride value.</doc>
          <type name="guint" c:type="guint"/>
        </return-value>
        <parameters>
          <instance-parameter name="xyyc_graph" transfer-ownership="none">
            <doc xml:space="preserve">A #GtkDataboxXYYCGraph object</doc>
            <type name="XYYCGraph" c:type="GtkDataboxXYYCGraph*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_xtype" c:identifier="gtk_databox_xyyc_graph_get_xtype">
        <doc xml:space="preserve">Gets the the GType of the X array elements.  This may be G_TYPE_FLOAT, G_TYPE_DOUBLE, or similar.</doc>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve">A GType, usually this is G_TYPE_FLOAT.</doc>
          <type name="GType" c:type="GType"/>
        </return-value>
        <parameters>
          <instance-parameter name="xyyc_graph" transfer-ownership="none">
            <doc xml:space="preserve">A #GtkDataboxXYYCGraph object</doc>
            <type name="XYYCGraph" c:type="GtkDataboxXYYCGraph*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_y1start"
              c:identifier="gtk_databox_xyyc_graph_get_y1start">
        <doc xml:space="preserve">Gets the the start offset of the Y1 values array.  This is the element in the array pointed to by Y that will be the first element plotted.
If Y1 is a pointer to a gfloat array, and y1start is 5, then y1[5] will be the first data element.  If y1stride is 1, then y1[6] will be the
second element.  y1[5 + len - 1] will be last element.
Usually, y1start will be 0.  It can be nonzero to allow for interleaved X/Y1/Y2 samples, or if the data is stored as a matrix, then Y1 can point
to the start of the matrix, y1start can be the column number, and y1stride the number of columns.</doc>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve">The y1start value.</doc>
          <type name="guint" c:type="guint"/>
        </return-value>
        <parameters>
          <instance-parameter name="xyyc_graph" transfer-ownership="none">
            <doc xml:space="preserve">A #GtkDataboxXYYCGraph object</doc>
            <type name="XYYCGraph" c:type="GtkDataboxXYYCGraph*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_y1stride"
              c:identifier="gtk_databox_xyyc_graph_get_y1stride">
        <doc xml:space="preserve">Gets the the stride offset of the Y1 values array.  This is the element in the array pointed to by Y1 that will be the first element plotted.
If Y1 is a pointer to a gfloat array, and y1start is 5, then y1[5] will be the first data element.  If y1stride is 1, then y1[6] will be the
second element.  y1[5 + len - 1] will be last element.
Usually, y1stride will be 1.  It can be nonzero to allow for interleaved X/Y1/Y2 samples, or if the data is stored as a matrix, then Y1 can point
to the start of the matrix, y1start can be the column number, and y1stride the number of columns.</doc>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve">The y1stride value.</doc>
          <type name="guint" c:type="guint"/>
        </return-value>
        <parameters>
          <instance-parameter name="xyyc_graph" transfer-ownership="none">
            <doc xml:space="preserve">A #GtkDataboxXYYCGraph object</doc>
            <type name="XYYCGraph" c:type="GtkDataboxXYYCGraph*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_y2start"
              c:identifier="gtk_databox_xyyc_graph_get_y2start">
        <doc xml:space="preserve">Gets the the start offset of the Y2 values array.  This is the element in the array pointed to by Y that will be the first element plotted.
If Y2 is a pointer to a gfloat array, and y2start is 5, then y2[5] will be the first data element.  If y2stride is 1, then y2[6] will be the
second element.  y2[5 + len - 1] will be last element.
Usually, y2start will be 0.  It can be nonzero to allow for interleaved X/Y1/Y2 samples, or if the data is stored as a matrix, then Y2 can point
to the start of the matrix, y2start can be the column number, and y2stride the number of columns.</doc>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve">The y2start value.</doc>
          <type name="guint" c:type="guint"/>
        </return-value>
        <parameters>
          <instance-parameter name="xyyc_graph" transfer-ownership="none">
            <doc xml:space="preserve">A #GtkDataboxXYYCGraph object</doc>
            <type name="XYYCGraph" c:type="GtkDataboxXYYCGraph*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_y2stride"
              c:identifier="gtk_databox_xyyc_graph_get_y2stride">
        <doc xml:space="preserve">Gets the the stride offset of the Y2 values array.  This is the element in the array pointed to by Y2 that will be the first element plotted.
If Y2 is a pointer to a gfloat array, and y2start is 5, then y2[5] will be the first data element.  If y2stride is 1, then y2[6] will be the
second element.  y2[5 + len - 1] will be last element.
Usually, y2stride will be 1.  It can be nonzero to allow for interleaved X/Y1/Y2 samples, or if the data is stored as a matrix, then Y2 can point
to the start of the matrix, y2start can be the column number, and y2stride the number of columns.</doc>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve">The y2stride value.</doc>
          <type name="guint" c:type="guint"/>
        </return-value>
        <parameters>
          <instance-parameter name="xyyc_graph" transfer-ownership="none">
            <doc xml:space="preserve">A #GtkDataboxXYYCGraph object</doc>
            <type name="XYYCGraph" c:type="GtkDataboxXYYCGraph*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_ytype" c:identifier="gtk_databox_xyyc_graph_get_ytype">
        <doc xml:space="preserve">Gets the the GType of the Y1/Y2 array elements.  This may be G_TYPE_FLOAT, G_TYPE_DOUBLE, or similar.</doc>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve">A GType, usually this is G_TYPE_FLOAT.</doc>
          <type name="GType" c:type="GType"/>
        </return-value>
        <parameters>
          <instance-parameter name="xyyc_graph" transfer-ownership="none">
            <doc xml:space="preserve">A #GtkDataboxXYYCGraph object</doc>
            <type name="XYYCGraph" c:type="GtkDataboxXYYCGraph*"/>
          </instance-parameter>
        </parameters>
      </method>
      <property name="X-Values"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <type name="gpointer" c:type="gpointer"/>
      </property>
      <property name="Y1-Values"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <type name="gpointer" c:type="gpointer"/>
      </property>
      <property name="Y2-Values"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <type name="gpointer" c:type="gpointer"/>
      </property>
      <property name="length"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <type name="gint" c:type="gint"/>
      </property>
      <property name="maxlen"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <type name="gint" c:type="gint"/>
      </property>
      <property name="xstart"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <type name="gint" c:type="gint"/>
      </property>
      <property name="xstride"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <type name="gint" c:type="gint"/>
      </property>
      <property name="xtype"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <type name="GType" c:type="GType"/>
      </property>
      <property name="y1start"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <type name="gint" c:type="gint"/>
      </property>
      <property name="y1stride"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <type name="gint" c:type="gint"/>
      </property>
      <property name="y2start"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <type name="gint" c:type="gint"/>
      </property>
      <property name="y2stride"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <type name="gint" c:type="gint"/>
      </property>
      <property name="ytype"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <type name="GType" c:type="GType"/>
      </property>
      <field name="parent" readable="0" private="1">
        <type name="Graph" c:type="GtkDataboxGraph"/>
      </field>
    </class>
    <record name="XYYCGraphClass"
            c:type="GtkDataboxXYYCGraphClass"
            glib:is-gtype-struct-for="XYYCGraph">
      <field name="parent_class">
        <type name="GraphClass" c:type="GtkDataboxGraphClass"/>
      </field>
    </record>
    <record name="_" c:type="GtkDatabox">
      <doc xml:space="preserve">#GtkDatabox is a widget for the GTK+ library designed to display
large amounts of numerical data quickly and easily. It allows
for one or more data sets of thousands of data points (X and Y coordinates)
to be displayed and updated in split seconds.

It offers the ability to zoom into and out of the data, and to navigate
through your data by scrolling.

In addition to rulers and a simple
coordinate cross, it allows you to add one (or even more) configurable grids
like on an oscilloscope.

Data may be presented as dots, lines connecting the data,
or vertical bars. The widget allows you to easily transform pixel
coordinates into data coordinates, thus allowing you to easily create
powerful applications for data analysis.</doc>
      <field name="box" readable="0" private="1">
        <doc xml:space="preserve">The parent object</doc>
        <type name="Gtk.Widget" c:type="GtkWidget"/>
      </field>
      <method name="et_box_shadow"
              c:identifier="gtk_databox__get_box_shadow"
              moved-to="_get_box_shadow">
        <return-value transfer-ownership="none">
          <type name="Gtk.ShadowType" c:type="GtkShadowType"/>
        </return-value>
        <parameters>
          <instance-parameter name="box" transfer-ownership="none">
            <type name="_" c:type="GtkDatabox*"/>
          </instance-parameter>
        </parameters>
      </method>
    </record>
    <function name="_get_box_shadow"
              c:identifier="gtk_databox__get_box_shadow">
      <return-value transfer-ownership="none">
        <type name="Gtk.ShadowType" c:type="GtkShadowType"/>
      </return-value>
      <parameters>
        <parameter name="box" transfer-ownership="none">
          <type name="_" c:type="GtkDatabox*"/>
        </parameter>
      </parameters>
    </function>
    <function name="auto_rescale" c:identifier="gtk_databox_auto_rescale">
      <doc xml:space="preserve">This function is similar to gtk_databox_set_total_limits(). It sets the total limits
to match the data extrema (see gtk_databox_calculate_extrema()). If you do not like data pixels exactly at the
widget's border, you can add modify the limits using the border parameter: The limits are extended by
@border*(max-min) if max!=min. If max==min, they are extended by @border*max (otherwise the data could not be
scaled to the pixel realm).

After calling this function, x values grow from left to right, y values grow from bottom to top.</doc>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve">0 on success,
         -1 if @box is no GtkDatabox widget,
         -2 if no datasets are available</doc>
        <type name="gint" c:type="gint"/>
      </return-value>
      <parameters>
        <parameter name="box" transfer-ownership="none">
          <doc xml:space="preserve">A #GtkDatabox widget</doc>
          <type name="_" c:type="GtkDatabox*"/>
        </parameter>
        <parameter name="border" transfer-ownership="none">
          <doc xml:space="preserve">Relative border width (e.g. 0.1 means that the border on each side is 10% of the data area).</doc>
          <type name="gfloat" c:type="gfloat"/>
        </parameter>
      </parameters>
    </function>
    <function name="calculate_extrema"
              c:identifier="gtk_databox_calculate_extrema">
      <doc xml:space="preserve">Determines the minimum and maximum x and y values of all
#GtkDataboxGraph objects which have been added to the #GtkDatabox widget via gtk_databox_graph_add().</doc>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve">0 on success,
         -1 if @box is no GtkDatabox widget,
         -2 if no datasets are available</doc>
        <type name="gint" c:type="gint"/>
      </return-value>
      <parameters>
        <parameter name="box" transfer-ownership="none">
          <doc xml:space="preserve">A #GtkDatabox widget</doc>
          <type name="_" c:type="GtkDatabox*"/>
        </parameter>
        <parameter name="min_x" transfer-ownership="none">
          <doc xml:space="preserve">Will be filled with the lowest x value of all datasets</doc>
          <type name="gfloat" c:type="gfloat*"/>
        </parameter>
        <parameter name="max_x" transfer-ownership="none">
          <doc xml:space="preserve">Will be filled with the highest x value of all datasets</doc>
          <type name="gfloat" c:type="gfloat*"/>
        </parameter>
        <parameter name="min_y" transfer-ownership="none">
          <doc xml:space="preserve">Will be filled with the lowest y value of all datasets</doc>
          <type name="gfloat" c:type="gfloat*"/>
        </parameter>
        <parameter name="max_y" transfer-ownership="none">
          <doc xml:space="preserve">Will be filled with the highest y value of all datasets</doc>
          <type name="gfloat" c:type="gfloat*"/>
        </parameter>
      </parameters>
    </function>
    <function name="create_box_with_scrollbars_and_rulers"
              c:identifier="gtk_databox_create_box_with_scrollbars_and_rulers">
      <doc xml:space="preserve">This is a convenience function which creates a #GtkDatabox widget in a
GtkGrid widget optionally accompanied by scrollbars and rulers. You only
have to fill in the data (gtk_databox_graph_add()) and adjust the limits
(gtk_databox_set_total_limits() or gtk_databox_auto_rescale()).

This function produces the default databox with rulers at the top left and
scroll bars at the bottom right.</doc>
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="p_box" transfer-ownership="none">
          <doc xml:space="preserve">Will contain a pointer to a #GtkDatabox widget</doc>
          <type name="Gtk.Widget" c:type="GtkWidget**"/>
        </parameter>
        <parameter name="p_table" transfer-ownership="none">
          <type name="Gtk.Widget" c:type="GtkWidget**"/>
        </parameter>
        <parameter name="scrollbar_x" transfer-ownership="none">
          <doc xml:space="preserve">Whether to attach a horizontal scrollbar</doc>
          <type name="gboolean" c:type="gboolean"/>
        </parameter>
        <parameter name="scrollbar_y" transfer-ownership="none">
          <doc xml:space="preserve">Whether to attach a vertical scrollbar</doc>
          <type name="gboolean" c:type="gboolean"/>
        </parameter>
        <parameter name="ruler_x" transfer-ownership="none">
          <doc xml:space="preserve">Whether to attach a horizontal ruler</doc>
          <type name="gboolean" c:type="gboolean"/>
        </parameter>
        <parameter name="ruler_y" transfer-ownership="none">
          <doc xml:space="preserve">Whether to attach a vertical ruler</doc>
          <type name="gboolean" c:type="gboolean"/>
        </parameter>
      </parameters>
    </function>
    <function name="create_box_with_scrollbars_and_rulers_positioned"
              c:identifier="gtk_databox_create_box_with_scrollbars_and_rulers_positioned">
      <doc xml:space="preserve">This is a convenience function which creates a #GtkDatabox widget in a
GtkGrid widget optionally accompanied by scrollbars and rulers. You only
have to fill in the data (gtk_databox_graph_add()) and adjust the limits
(gtk_databox_set_total_limits() or gtk_databox_auto_rescale()).

This function produces the default databox with rulers at the top left and
scroll bars at the bottom right.</doc>
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="p_box" transfer-ownership="none">
          <doc xml:space="preserve">Will contain a pointer to a #GtkDatabox widget</doc>
          <type name="Gtk.Widget" c:type="GtkWidget**"/>
        </parameter>
        <parameter name="p_table" transfer-ownership="none">
          <type name="Gtk.Widget" c:type="GtkWidget**"/>
        </parameter>
        <parameter name="scrollbar_x" transfer-ownership="none">
          <doc xml:space="preserve">Whether to attach a horizontal scrollbar</doc>
          <type name="gboolean" c:type="gboolean"/>
        </parameter>
        <parameter name="scrollbar_y" transfer-ownership="none">
          <doc xml:space="preserve">Whether to attach a vertical scrollbar</doc>
          <type name="gboolean" c:type="gboolean"/>
        </parameter>
        <parameter name="ruler_x" transfer-ownership="none">
          <doc xml:space="preserve">Whether to attach a horizontal ruler</doc>
          <type name="gboolean" c:type="gboolean"/>
        </parameter>
        <parameter name="ruler_y" transfer-ownership="none">
          <doc xml:space="preserve">Whether to attach a vertical ruler</doc>
          <type name="gboolean" c:type="gboolean"/>
        </parameter>
        <parameter name="ruler_x_top" transfer-ownership="none">
          <doc xml:space="preserve">Whether to put the ruler_x up the top</doc>
          <type name="gboolean" c:type="gboolean"/>
        </parameter>
        <parameter name="ruler_y_left" transfer-ownership="none">
          <doc xml:space="preserve">Whether to put the ruler_y on the left</doc>
          <type name="gboolean" c:type="gboolean"/>
        </parameter>
      </parameters>
    </function>
    <function name="get_adjustment_x"
              c:identifier="gtk_databox_get_adjustment_x"
              introspectable="0">
      <doc xml:space="preserve">Getter function for the #GtkDatabox:adjustment-x property.</doc>
      <return-value>
        <doc xml:space="preserve">The #GtkDatabox:adjustment-x property value.</doc>
        <type name="Gtk.Adjustment" c:type="GtkAdjustment*"/>
      </return-value>
      <parameters>
        <parameter name="box" transfer-ownership="none">
          <doc xml:space="preserve">A #GtkDatabox widget.</doc>
          <type name="_" c:type="GtkDatabox*"/>
        </parameter>
      </parameters>
    </function>
    <function name="get_adjustment_y"
              c:identifier="gtk_databox_get_adjustment_y"
              introspectable="0">
      <doc xml:space="preserve">Getter function for the #GtkDatabox:adjustment-y property.</doc>
      <return-value>
        <doc xml:space="preserve">The #GtkDatabox:adjustment-y property value.</doc>
        <type name="Gtk.Adjustment" c:type="GtkAdjustment*"/>
      </return-value>
      <parameters>
        <parameter name="box" transfer-ownership="none">
          <doc xml:space="preserve">A #GtkDatabox widget.</doc>
          <type name="_" c:type="GtkDatabox*"/>
        </parameter>
      </parameters>
    </function>
    <function name="get_backing_surface"
              c:identifier="gtk_databox_get_backing_surface">
      <doc xml:space="preserve">This function returns the surface which is used by @box and its #GtkDataboxGraph objects
for drawing operations before copying the result to the screen.

The function is typically called by the #GtkDataboxGraph objects.</doc>
      <return-value transfer-ownership="full">
        <doc xml:space="preserve">Backing surface</doc>
        <type name="cairo.Surface" c:type="cairo_surface_t*"/>
      </return-value>
      <parameters>
        <parameter name="box" transfer-ownership="none">
          <doc xml:space="preserve">A #GtkDatabox widget</doc>
          <type name="_" c:type="GtkDatabox*"/>
        </parameter>
      </parameters>
    </function>
    <function name="get_enable_selection"
              c:identifier="gtk_databox_get_enable_selection">
      <doc xml:space="preserve">Getter function for the #GtkDatabox:enable-selection property.</doc>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve">The #GtkDatabox:enable-selection property value.</doc>
        <type name="gboolean" c:type="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="box" transfer-ownership="none">
          <doc xml:space="preserve">A #GtkDatabox widget.</doc>
          <type name="_" c:type="GtkDatabox*"/>
        </parameter>
      </parameters>
    </function>
    <function name="get_enable_zoom"
              c:identifier="gtk_databox_get_enable_zoom">
      <doc xml:space="preserve">Getter function for the #GtkDatabox:enable-zoom property.</doc>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve">The #GtkDatabox:enable-zoom property value.</doc>
        <type name="gboolean" c:type="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="box" transfer-ownership="none">
          <doc xml:space="preserve">A #GtkDatabox widget.</doc>
          <type name="_" c:type="GtkDatabox*"/>
        </parameter>
      </parameters>
    </function>
    <function name="get_graphs"
              c:identifier="gtk_databox_get_graphs"
              introspectable="0">
      <doc xml:space="preserve">Return a list of graphs that were previously added to @box</doc>
      <return-value>
        <doc xml:space="preserve">A #GList that contains all graphs</doc>
        <type name="GLib.List" c:type="GList*">
          <type name="gpointer" c:type="gpointer"/>
        </type>
      </return-value>
      <parameters>
        <parameter name="arg0" transfer-ownership="none">
          <type name="_" c:type="GtkDatabox*"/>
        </parameter>
      </parameters>
    </function>
    <function name="get_ruler_x"
              c:identifier="gtk_databox_get_ruler_x"
              introspectable="0">
      <doc xml:space="preserve">Getter function for the #GtkDatabox:ruler-x property.</doc>
      <return-value>
        <doc xml:space="preserve">The #GtkDatabox:ruler-x property value.</doc>
        <type name="Ruler" c:type="GtkDataboxRuler*"/>
      </return-value>
      <parameters>
        <parameter name="box" transfer-ownership="none">
          <doc xml:space="preserve">A #GtkDatabox widget.</doc>
          <type name="_" c:type="GtkDatabox*"/>
        </parameter>
      </parameters>
    </function>
    <function name="get_ruler_y"
              c:identifier="gtk_databox_get_ruler_y"
              introspectable="0">
      <doc xml:space="preserve">Getter function for the #GtkDatabox:ruler-y property.</doc>
      <return-value>
        <doc xml:space="preserve">The #GtkDatabox:ruler-y property value.</doc>
        <type name="Ruler" c:type="GtkDataboxRuler*"/>
      </return-value>
      <parameters>
        <parameter name="box" transfer-ownership="none">
          <doc xml:space="preserve">A #GtkDatabox widget.</doc>
          <type name="_" c:type="GtkDatabox*"/>
        </parameter>
      </parameters>
    </function>
    <function name="get_scale_type_x"
              c:identifier="gtk_databox_get_scale_type_x">
      <doc xml:space="preserve">Getter function for the #GtkDatabox:scale-type-x property.</doc>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve">The #GtkDatabox:scale-type-x property value.</doc>
        <type name="ScaleType" c:type="GtkDataboxScaleType"/>
      </return-value>
      <parameters>
        <parameter name="box" transfer-ownership="none">
          <doc xml:space="preserve">A #GtkDatabox widget.</doc>
          <type name="_" c:type="GtkDatabox*"/>
        </parameter>
      </parameters>
    </function>
    <function name="get_scale_type_y"
              c:identifier="gtk_databox_get_scale_type_y">
      <doc xml:space="preserve">Getter function for the #GtkDatabox:scale-type-y property.</doc>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve">The #GtkDatabox:scale-type-y property value.</doc>
        <type name="ScaleType" c:type="GtkDataboxScaleType"/>
      </return-value>
      <parameters>
        <parameter name="box" transfer-ownership="none">
          <doc xml:space="preserve">A #GtkDatabox widget.</doc>
          <type name="_" c:type="GtkDatabox*"/>
        </parameter>
      </parameters>
    </function>
    <function name="get_total_limits"
              c:identifier="gtk_databox_get_total_limits">
      <doc xml:space="preserve">Gives the total limits (as set by gtk_databox_auto_rescale() or gtk_databox_set_total_limits()).</doc>
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="box" transfer-ownership="none">
          <doc xml:space="preserve">A #GtkDatabox widget</doc>
          <type name="_" c:type="GtkDatabox*"/>
        </parameter>
        <parameter name="left" transfer-ownership="none">
          <doc xml:space="preserve">Space for total left value or #NULL</doc>
          <type name="gfloat" c:type="gfloat*"/>
        </parameter>
        <parameter name="right" transfer-ownership="none">
          <doc xml:space="preserve">Space for total right value or #NULL</doc>
          <type name="gfloat" c:type="gfloat*"/>
        </parameter>
        <parameter name="top" transfer-ownership="none">
          <doc xml:space="preserve">Space for total top value or #NULL</doc>
          <type name="gfloat" c:type="gfloat*"/>
        </parameter>
        <parameter name="bottom" transfer-ownership="none">
          <doc xml:space="preserve">Space for total bottom value or #NULL</doc>
          <type name="gfloat" c:type="gfloat*"/>
        </parameter>
      </parameters>
    </function>
    <function name="get_type" c:identifier="gtk_databox_get_type">
      <doc xml:space="preserve">Determines the #GType of the GtkDatabox widget type.</doc>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve">The #GType of the GtkDatabox widget type.</doc>
        <type name="GType" c:type="GType"/>
      </return-value>
    </function>
    <function name="get_visible_limits"
              c:identifier="gtk_databox_get_visible_limits">
      <doc xml:space="preserve">Gives the current visible limits. These differ from those given by gtk_databox_get_total_limits() if
you zoomed into the data for instance by gtk_databox_zoom_to_selection() or gtk_databox_set_visible_limits() (these values
can be changed by scrolling, of course).</doc>
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="box" transfer-ownership="none">
          <doc xml:space="preserve">A #GtkDatabox widget</doc>
          <type name="_" c:type="GtkDatabox*"/>
        </parameter>
        <parameter name="left" transfer-ownership="none">
          <doc xml:space="preserve">Space for visible left value or #NULL</doc>
          <type name="gfloat" c:type="gfloat*"/>
        </parameter>
        <parameter name="right" transfer-ownership="none">
          <doc xml:space="preserve">Space for visible right value or #NULL</doc>
          <type name="gfloat" c:type="gfloat*"/>
        </parameter>
        <parameter name="top" transfer-ownership="none">
          <doc xml:space="preserve">Space for visible top value or #NULL</doc>
          <type name="gfloat" c:type="gfloat*"/>
        </parameter>
        <parameter name="bottom" transfer-ownership="none">
          <doc xml:space="preserve">Space for visible bottom value or #NULL</doc>
          <type name="gfloat" c:type="gfloat*"/>
        </parameter>
      </parameters>
    </function>
    <function name="graph_add"
              c:identifier="gtk_databox_graph_add"
              moved-to="Graph.add">
      <doc xml:space="preserve">Adds the @graph to the @box. The next time the @box is re-drawn, the graph will be shown.

It might be becessary to modify the total_limits in order for the graph to be displayed properly (see gtk_databox_set_total_limits()).</doc>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve">0 on success, -1 otherwise</doc>
        <type name="gint" c:type="gint"/>
      </return-value>
      <parameters>
        <parameter name="box" transfer-ownership="none">
          <doc xml:space="preserve">A #GtkDatabox widget</doc>
          <type name="_" c:type="GtkDatabox*"/>
        </parameter>
        <parameter name="graph" transfer-ownership="none">
          <doc xml:space="preserve">A graph, e.g. a #GtkDataboxPoints or a #GtkDataboxGrid object</doc>
          <type name="Graph" c:type="GtkDataboxGraph*"/>
        </parameter>
      </parameters>
    </function>
    <function name="graph_add_front"
              c:identifier="gtk_databox_graph_add_front"
              moved-to="Graph.add_front">
      <doc xml:space="preserve">Adds the @graph to the @box and will be plotted on top. The next time the @box is re-drawn, the graph will be shown.

It might be becessary to modify the total_limits in order for the graph to be displayed properly (see gtk_databox_set_total_limits()).</doc>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve">0 on success, -1 otherwise</doc>
        <type name="gint" c:type="gint"/>
      </return-value>
      <parameters>
        <parameter name="box" transfer-ownership="none">
          <doc xml:space="preserve">A #GtkDatabox widget</doc>
          <type name="_" c:type="GtkDatabox*"/>
        </parameter>
        <parameter name="graph" transfer-ownership="none">
          <doc xml:space="preserve">A graph, e.g. a #GtkDataboxPoints or a #GtkDataboxGrid object</doc>
          <type name="Graph" c:type="GtkDataboxGraph*"/>
        </parameter>
      </parameters>
    </function>
    <function name="graph_remove"
              c:identifier="gtk_databox_graph_remove"
              moved-to="Graph.remove">
      <doc xml:space="preserve">Removes the @graph from the @box once. The next time the @box is re-drawn, the graph will not be shown (unless it was added more
than once).</doc>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve">0 on success, -1 otherwise</doc>
        <type name="gint" c:type="gint"/>
      </return-value>
      <parameters>
        <parameter name="box" transfer-ownership="none">
          <doc xml:space="preserve">A #GtkDatabox widget</doc>
          <type name="_" c:type="GtkDatabox*"/>
        </parameter>
        <parameter name="graph" transfer-ownership="none">
          <doc xml:space="preserve">A graph, e.g. a #GtkDataboxPoints or a #GtkDataboxGrid object</doc>
          <type name="Graph" c:type="GtkDataboxGraph*"/>
        </parameter>
      </parameters>
    </function>
    <function name="graph_remove_all"
              c:identifier="gtk_databox_graph_remove_all"
              moved-to="Graph.remove_all">
      <doc xml:space="preserve">Removes all graphs from the @box. The next time the @box is re-drawn, no graphs will be shown.</doc>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve">0 on success, -1 otherwise</doc>
        <type name="gint" c:type="gint"/>
      </return-value>
      <parameters>
        <parameter name="box" transfer-ownership="none">
          <doc xml:space="preserve">A #GtkDatabox widget</doc>
          <type name="_" c:type="GtkDatabox*"/>
        </parameter>
      </parameters>
    </function>
    <function name="new" c:identifier="gtk_databox_new" introspectable="0">
      <doc xml:space="preserve">Creates a new #GtkDatabox widget.</doc>
      <return-value>
        <doc xml:space="preserve">The new #GtkDatabox widget.</doc>
        <type name="Gtk.Widget" c:type="GtkWidget*"/>
      </return-value>
    </function>
    <function name="pixel_to_value_x"
              c:identifier="gtk_databox_pixel_to_value_x">
      <doc xml:space="preserve">Calculates the x value which is represented by the horizontal @pixel coordinate.
Pixel coordinates are relative to the top-left corner of the @box which is equivalent to (0,0).</doc>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve">x value</doc>
        <type name="gfloat" c:type="gfloat"/>
      </return-value>
      <parameters>
        <parameter name="box" transfer-ownership="none">
          <doc xml:space="preserve">A #GtkDatabox widget</doc>
          <type name="_" c:type="GtkDatabox*"/>
        </parameter>
        <parameter name="pixel" transfer-ownership="none">
          <doc xml:space="preserve">A horizontal pixel coordinate</doc>
          <type name="gint16" c:type="gint16"/>
        </parameter>
      </parameters>
    </function>
    <function name="pixel_to_value_y"
              c:identifier="gtk_databox_pixel_to_value_y">
      <doc xml:space="preserve">Calculates the y value which is represented by the vertical @pixel coordinate.
Pixel coordinates are relative to the top-left corner of the @box which is equivalent to (0,0).</doc>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve">y value</doc>
        <type name="gfloat" c:type="gfloat"/>
      </return-value>
      <parameters>
        <parameter name="box" transfer-ownership="none">
          <doc xml:space="preserve">A #GtkDatabox widget</doc>
          <type name="_" c:type="GtkDatabox*"/>
        </parameter>
        <parameter name="pixel" transfer-ownership="none">
          <doc xml:space="preserve">A vertical pixel coordinate</doc>
          <type name="gint16" c:type="gint16"/>
        </parameter>
      </parameters>
    </function>
    <function name="set_adjustment_x"
              c:identifier="gtk_databox_set_adjustment_x">
      <doc xml:space="preserve">Setter function for the #GtkDatabox:adjustment-x property. Normally, it should not be
required to use this function, see property documentation.</doc>
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="box" transfer-ownership="none">
          <doc xml:space="preserve">A #GtkDatabox widget</doc>
          <type name="_" c:type="GtkDatabox*"/>
        </parameter>
        <parameter name="adj" transfer-ownership="none">
          <doc xml:space="preserve">A #GtkAdjustment object</doc>
          <type name="Gtk.Adjustment" c:type="GtkAdjustment*"/>
        </parameter>
      </parameters>
    </function>
    <function name="set_adjustment_y"
              c:identifier="gtk_databox_set_adjustment_y">
      <doc xml:space="preserve">Setter function for the #GtkDatabox:adjustment-y property. Normally, it should not be
required to use this function, see property documentation.</doc>
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="box" transfer-ownership="none">
          <doc xml:space="preserve">A #GtkDatabox widget</doc>
          <type name="_" c:type="GtkDatabox*"/>
        </parameter>
        <parameter name="adj" transfer-ownership="none">
          <doc xml:space="preserve">A #GtkAdjustment object</doc>
          <type name="Gtk.Adjustment" c:type="GtkAdjustment*"/>
        </parameter>
      </parameters>
    </function>
    <function name="set_box_shadow" c:identifier="gtk_databox_set_box_shadow">
      <doc xml:space="preserve">Sets the shadow type when using gtk_paint_box. This will draw the desired edge shadow.</doc>
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="box" transfer-ownership="none">
          <doc xml:space="preserve">a #GtkDatabox widget.</doc>
          <type name="_" c:type="GtkDatabox*"/>
        </parameter>
        <parameter name="which_shadow" transfer-ownership="none">
          <doc xml:space="preserve">How to render the box shadow on the GtkDatabox edges.</doc>
          <type name="Gtk.ShadowType" c:type="GtkShadowType"/>
        </parameter>
      </parameters>
    </function>
    <function name="set_enable_selection"
              c:identifier="gtk_databox_set_enable_selection">
      <doc xml:space="preserve">Setter function for the #GtkDatabox:enable-selection property.</doc>
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="box" transfer-ownership="none">
          <doc xml:space="preserve">A #GtkDatabox widget</doc>
          <type name="_" c:type="GtkDatabox*"/>
        </parameter>
        <parameter name="enable" transfer-ownership="none">
          <doc xml:space="preserve">Whether selection via mouse is enabled or not.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </parameter>
      </parameters>
    </function>
    <function name="set_enable_zoom"
              c:identifier="gtk_databox_set_enable_zoom">
      <doc xml:space="preserve">Setter function for the #GtkDatabox:enable-zoom property.</doc>
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="box" transfer-ownership="none">
          <doc xml:space="preserve">A #GtkDatabox widget</doc>
          <type name="_" c:type="GtkDatabox*"/>
        </parameter>
        <parameter name="enable" transfer-ownership="none">
          <doc xml:space="preserve">Whether zoom via mouse is enabled or not.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </parameter>
      </parameters>
    </function>
    <function name="set_ruler_x" c:identifier="gtk_databox_set_ruler_x">
      <doc xml:space="preserve">Setter function for the #GtkDatabox:ruler-x property.</doc>
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="box" transfer-ownership="none">
          <doc xml:space="preserve">A #GtkDatabox widget</doc>
          <type name="_" c:type="GtkDatabox*"/>
        </parameter>
        <parameter name="ruler" transfer-ownership="none">
          <doc xml:space="preserve">A #GtkDataboxRuler object</doc>
          <type name="Ruler" c:type="GtkDataboxRuler*"/>
        </parameter>
      </parameters>
    </function>
    <function name="set_ruler_y" c:identifier="gtk_databox_set_ruler_y">
      <doc xml:space="preserve">Setter function for the #GtkDatabox:ruler-y property.</doc>
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="box" transfer-ownership="none">
          <doc xml:space="preserve">A #GtkDatabox widget</doc>
          <type name="_" c:type="GtkDatabox*"/>
        </parameter>
        <parameter name="ruler" transfer-ownership="none">
          <doc xml:space="preserve">An #GtkDataboxRuler object</doc>
          <type name="Ruler" c:type="GtkDataboxRuler*"/>
        </parameter>
      </parameters>
    </function>
    <function name="set_scale_type_x"
              c:identifier="gtk_databox_set_scale_type_x">
      <doc xml:space="preserve">Setter function for the #GtkDatabox:scale-type-x property.</doc>
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="box" transfer-ownership="none">
          <doc xml:space="preserve">A #GtkDatabox widget</doc>
          <type name="_" c:type="GtkDatabox*"/>
        </parameter>
        <parameter name="scale_type" transfer-ownership="none">
          <doc xml:space="preserve">An #GtkDataboxScaleType (linear or logarithmic)</doc>
          <type name="ScaleType" c:type="GtkDataboxScaleType"/>
        </parameter>
      </parameters>
    </function>
    <function name="set_scale_type_y"
              c:identifier="gtk_databox_set_scale_type_y">
      <doc xml:space="preserve">Setter function for the #GtkDatabox:scale-type-y property.</doc>
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="box" transfer-ownership="none">
          <doc xml:space="preserve">A #GtkDatabox widget</doc>
          <type name="_" c:type="GtkDatabox*"/>
        </parameter>
        <parameter name="scale_type" transfer-ownership="none">
          <doc xml:space="preserve">An #GtkDataboxScaleType (linear or logarithmic)</doc>
          <type name="ScaleType" c:type="GtkDataboxScaleType"/>
        </parameter>
      </parameters>
    </function>
    <function name="set_total_limits"
              c:identifier="gtk_databox_set_total_limits">
      <doc xml:space="preserve">This function is used to set the limits of the total
display area of @box.
This function can be used to invert the orientation of the displayed graphs,
e.g. @top=-1000 and  @bottom=0.

Side effect: The @box also internally calls gtk_databox_set_visible_limits() with the same values.</doc>
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="box" transfer-ownership="none">
          <doc xml:space="preserve">A #GtkDatabox widget</doc>
          <type name="_" c:type="GtkDatabox*"/>
        </parameter>
        <parameter name="left" transfer-ownership="none">
          <doc xml:space="preserve">Left total limit</doc>
          <type name="gfloat" c:type="gfloat"/>
        </parameter>
        <parameter name="right" transfer-ownership="none">
          <doc xml:space="preserve">Right total limit</doc>
          <type name="gfloat" c:type="gfloat"/>
        </parameter>
        <parameter name="top" transfer-ownership="none">
          <doc xml:space="preserve">Top total limit</doc>
          <type name="gfloat" c:type="gfloat"/>
        </parameter>
        <parameter name="bottom" transfer-ownership="none">
          <doc xml:space="preserve">Bottom total limit</doc>
          <type name="gfloat" c:type="gfloat"/>
        </parameter>
      </parameters>
    </function>
    <function name="set_visible_limits"
              c:identifier="gtk_databox_set_visible_limits">
      <doc xml:space="preserve">This function is used to set the limits of the visible
display area of @box. The visible display area can be section of the total
area, i.e. the @box zooms in, showing only a part of the complete picture.

The orientation of the values have to be the same as in gtk_databox_set_total_limits() and
the visible limits have to be within the total limits. The
values will not be used otherwise.

Side effect: The @box emits #GtkDatabox::zoomed.</doc>
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="box" transfer-ownership="none">
          <doc xml:space="preserve">A #GtkDatabox widget</doc>
          <type name="_" c:type="GtkDatabox*"/>
        </parameter>
        <parameter name="left" transfer-ownership="none">
          <doc xml:space="preserve">Left visible limit</doc>
          <type name="gfloat" c:type="gfloat"/>
        </parameter>
        <parameter name="right" transfer-ownership="none">
          <doc xml:space="preserve">Right visible limit</doc>
          <type name="gfloat" c:type="gfloat"/>
        </parameter>
        <parameter name="top" transfer-ownership="none">
          <doc xml:space="preserve">Top visible limit</doc>
          <type name="gfloat" c:type="gfloat"/>
        </parameter>
        <parameter name="bottom" transfer-ownership="none">
          <doc xml:space="preserve">Bottom visible limit</doc>
          <type name="gfloat" c:type="gfloat"/>
        </parameter>
      </parameters>
    </function>
    <function name="value_to_pixel_x"
              c:identifier="gtk_databox_value_to_pixel_x">
      <doc xml:space="preserve">Calculates the horizontal pixel coordinate which represents the x @value.
Pixel coordinates are relative to the top-left corner of the @box which is equivalent to (0,0).</doc>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve">Pixel coordinate</doc>
        <type name="gint16" c:type="gint16"/>
      </return-value>
      <parameters>
        <parameter name="box" transfer-ownership="none">
          <doc xml:space="preserve">A #GtkDatabox widget</doc>
          <type name="_" c:type="GtkDatabox*"/>
        </parameter>
        <parameter name="value" transfer-ownership="none">
          <doc xml:space="preserve">An x value</doc>
          <type name="gfloat" c:type="gfloat"/>
        </parameter>
      </parameters>
    </function>
    <function name="value_to_pixel_y"
              c:identifier="gtk_databox_value_to_pixel_y">
      <doc xml:space="preserve">Calculates the vertical pixel coordinate which represents the y @value.
Pixel coordinates are relative to the top-left corner of the @box which is equivalent to (0,0).</doc>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve">Pixel coordinate</doc>
        <type name="gint16" c:type="gint16"/>
      </return-value>
      <parameters>
        <parameter name="box" transfer-ownership="none">
          <doc xml:space="preserve">A #GtkDatabox widget</doc>
          <type name="_" c:type="GtkDatabox*"/>
        </parameter>
        <parameter name="value" transfer-ownership="none">
          <doc xml:space="preserve">A y value</doc>
          <type name="gfloat" c:type="gfloat"/>
        </parameter>
      </parameters>
    </function>
    <function name="values_to_xpixels"
              c:identifier="gtk_databox_values_to_xpixels">
      <doc xml:space="preserve">Calculates the horizontal pixel coordinates which represents the x @values.
Pixel coordinates are relative to the left corner of the @box which is equivalent to (0).</doc>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve">Pixel coordinates</doc>
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="box" transfer-ownership="none">
          <doc xml:space="preserve">A #GtkDatabox widget</doc>
          <type name="_" c:type="GtkDatabox*"/>
        </parameter>
        <parameter name="pixels" transfer-ownership="none">
          <type name="gint16" c:type="gint16*"/>
        </parameter>
        <parameter name="values" transfer-ownership="none">
          <type name="gpointer" c:type="void*"/>
        </parameter>
        <parameter name="vtype" transfer-ownership="none">
          <type name="GType" c:type="GType"/>
        </parameter>
        <parameter name="size" transfer-ownership="none">
          <type name="guint" c:type="guint"/>
        </parameter>
        <parameter name="start" transfer-ownership="none">
          <type name="guint" c:type="guint"/>
        </parameter>
        <parameter name="stride" transfer-ownership="none">
          <type name="guint" c:type="guint"/>
        </parameter>
        <parameter name="len" transfer-ownership="none">
          <type name="guint" c:type="guint"/>
        </parameter>
      </parameters>
    </function>
    <function name="values_to_ypixels"
              c:identifier="gtk_databox_values_to_ypixels">
      <doc xml:space="preserve">Calculates the vertical pixel coordinates which represents the y @values.
Pixel coordinates are relative to the top corner of the @box which is equivalent to (0).</doc>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve">Pixel coordinates</doc>
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="box" transfer-ownership="none">
          <doc xml:space="preserve">A #GtkDatabox widget</doc>
          <type name="_" c:type="GtkDatabox*"/>
        </parameter>
        <parameter name="pixels" transfer-ownership="none">
          <type name="gint16" c:type="gint16*"/>
        </parameter>
        <parameter name="values" transfer-ownership="none">
          <type name="gpointer" c:type="void*"/>
        </parameter>
        <parameter name="vtype" transfer-ownership="none">
          <type name="GType" c:type="GType"/>
        </parameter>
        <parameter name="size" transfer-ownership="none">
          <type name="guint" c:type="guint"/>
        </parameter>
        <parameter name="start" transfer-ownership="none">
          <type name="guint" c:type="guint"/>
        </parameter>
        <parameter name="stride" transfer-ownership="none">
          <type name="guint" c:type="guint"/>
        </parameter>
        <parameter name="len" transfer-ownership="none">
          <type name="guint" c:type="guint"/>
        </parameter>
      </parameters>
    </function>
    <function name="zoom_home" c:identifier="gtk_databox_zoom_home">
      <doc xml:space="preserve">This is equivalent to shift right-clicking into the @box.

This function works, if the attribute #enable-zoom is set to #TRUE. It is equivalent to
calling the gtk_databox_set_visible_limits() with the total limits.</doc>
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="box" transfer-ownership="none">
          <doc xml:space="preserve">A #GtkDatabox widget</doc>
          <type name="_" c:type="GtkDatabox*"/>
        </parameter>
      </parameters>
    </function>
    <function name="zoom_out" c:identifier="gtk_databox_zoom_out">
      <doc xml:space="preserve">This is equivalent to right-clicking into the @box.

This function works, if the attribute #enable-zoom is set to #TRUE. Calling the function
then zooms out by a factor of 2 in both dimensions (the maximum is defined by the total
limits, see gtk_databox_set_total_limits()).

Side effect: The @box emits #GtkDatabox::zoomed.</doc>
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="box" transfer-ownership="none">
          <doc xml:space="preserve">A #GtkDatabox widget</doc>
          <type name="_" c:type="GtkDatabox*"/>
        </parameter>
      </parameters>
    </function>
    <function name="zoom_to_selection"
              c:identifier="gtk_databox_zoom_to_selection">
      <doc xml:space="preserve">This is equivalent to left-clicking into the selected area.

This function works, if the attribute #enable-zoom is set to #TRUE. Calling the function
then zooms to the area selected with the mouse.

Side effect: The @box emits #GtkDatabox::zoomed.</doc>
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="box" transfer-ownership="none">
          <doc xml:space="preserve">A #GtkDatabox widget</doc>
          <type name="_" c:type="GtkDatabox*"/>
        </parameter>
      </parameters>
    </function>
  </namespace>
</repository>
