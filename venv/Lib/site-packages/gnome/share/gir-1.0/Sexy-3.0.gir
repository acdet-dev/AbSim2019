<?xml version="1.0"?>
<!-- This file was automatically generated from C sources - DO NOT EDIT!
To affect the contents of this file, edit the original C definitions,
and/or use gtk-doc annotations.  -->
<repository version="1.2"
            xmlns="http://www.gtk.org/introspection/core/1.0"
            xmlns:c="http://www.gtk.org/introspection/c/1.0"
            xmlns:glib="http://www.gtk.org/introspection/glib/1.0">
  <include name="Gtk" version="3.0"/>
  <namespace name="Sexy"
             version="3.0"
             shared-library="libsexy3-1.dll"
             c:identifier-prefixes="Sexy"
             c:symbol-prefixes="sexy">
    <class name="SpellEntry"
           c:symbol-prefix="spell_entry"
           c:type="SexySpellEntry"
           parent="Gtk.Entry"
           glib:type-name="SexySpellEntry"
           glib:get-type="sexy_spell_entry_get_type"
           glib:type-struct="SpellEntryClass">
      <implements name="Atk.ImplementorIface"/>
      <implements name="Gtk.Buildable"/>
      <implements name="Gtk.CellEditable"/>
      <implements name="Gtk.Editable"/>
      <constructor name="new" c:identifier="sexy_spell_entry_new">
        <doc xml:space="preserve">Creates a new SexySpellEntry widget.</doc>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve">a new #SexySpellEntry.</doc>
          <type name="Gtk.Widget" c:type="GtkWidget*"/>
        </return-value>
      </constructor>
      <virtual-method name="word_check">
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="entry" transfer-ownership="none">
            <type name="SpellEntry" c:type="SexySpellEntry*"/>
          </instance-parameter>
          <parameter name="word" transfer-ownership="none">
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <method name="activate_default_languages"
              c:identifier="sexy_spell_entry_activate_default_languages">
        <doc xml:space="preserve">Activate spell checking for languages specified in the $LANG
or $LANGUAGE environment variables. If none is found it defaults to "en".
These languages are activated by default, so this function need only
be called if they were previously deactivated.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="entry" transfer-ownership="none">
            <doc xml:space="preserve">A #SexySpellEntry.</doc>
            <type name="SpellEntry" c:type="SexySpellEntry*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="activate_language"
              c:identifier="sexy_spell_entry_activate_language"
              throws="1">
        <doc xml:space="preserve">Activate spell checking for the language specifed.</doc>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve">%FALSE if there was an error.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="entry" transfer-ownership="none">
            <doc xml:space="preserve">A #SexySpellEntry</doc>
            <type name="SpellEntry" c:type="SexySpellEntry*"/>
          </instance-parameter>
          <parameter name="lang" transfer-ownership="none">
            <doc xml:space="preserve">The language to use in a form Enchant understands. Typically either
       a two letter language code or a locale code in the form xx_XX.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="deactivate_language"
              c:identifier="sexy_spell_entry_deactivate_language">
        <doc xml:space="preserve">Deactivate spell checking for the language specifed.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="entry" transfer-ownership="none">
            <doc xml:space="preserve">A #SexySpellEntry.</doc>
            <type name="SpellEntry" c:type="SexySpellEntry*"/>
          </instance-parameter>
          <parameter name="lang" transfer-ownership="none">
            <doc xml:space="preserve">The language in a form Enchant understands. Typically either
       a two letter language code or a locale code in the form xx_XX.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_active_languages"
              c:identifier="sexy_spell_entry_get_active_languages">
        <doc xml:space="preserve">Retrieve a list of the currently active languages.</doc>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve">A list of language codes ("en", "de_DE", etc).
         The list should be freed with g_slist_free_full () and g_free().</doc>
          <type name="GLib.SList" c:type="GSList*">
            <type name="utf8"/>
          </type>
        </return-value>
        <parameters>
          <instance-parameter name="entry" transfer-ownership="none">
            <doc xml:space="preserve">A #SexySpellEntry</doc>
            <type name="SpellEntry" c:type="SexySpellEntry*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_checked" c:identifier="sexy_spell_entry_get_checked">
        <doc xml:space="preserve">Queries a #SexySpellEntry and returns whether the entry has spell-checking enabled.</doc>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve">%TRUE if the entry has spell-checking enabled.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="entry" transfer-ownership="none">
            <doc xml:space="preserve">A #SexySpellEntry.</doc>
            <type name="SpellEntry" c:type="SexySpellEntry*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_language_name"
              c:identifier="sexy_spell_entry_get_language_name">
        <doc xml:space="preserve">Get a friendly name for a given locale.</doc>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve">The name of the locale. Should be freed with g_free()</doc>
          <type name="utf8" c:type="gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="entry" transfer-ownership="none">
            <doc xml:space="preserve">A #SexySpellEntry.</doc>
            <type name="SpellEntry" c:type="const SexySpellEntry*"/>
          </instance-parameter>
          <parameter name="lang" transfer-ownership="none">
            <doc xml:space="preserve">The language code to lookup a friendly name for.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_languages"
              c:identifier="sexy_spell_entry_get_languages">
        <doc xml:space="preserve">Retrieve a list of language codes for which dictionaries are available.</doc>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve">a new #GList object, or %NULL on error.
         Should be freed with g_slist_free_full() and g_free().</doc>
          <type name="GLib.SList" c:type="GSList*">
            <type name="utf8"/>
          </type>
        </return-value>
        <parameters>
          <instance-parameter name="entry" transfer-ownership="none">
            <doc xml:space="preserve">A #SexySpellEntry.</doc>
            <type name="SpellEntry" c:type="const SexySpellEntry*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="is_checked"
              c:identifier="sexy_spell_entry_is_checked"
              deprecated="1"
              deprecated-version="1.0">
        <doc xml:space="preserve">Queries a #SexySpellEntry and returns whether the entry has spell-checking enabled.
Use sexy_spell_entry_get_checked() instead.</doc>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve">%TRUE if the entry has spell-checking enabled.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="entry" transfer-ownership="none">
            <doc xml:space="preserve">A #SexySpellEntry.</doc>
            <type name="SpellEntry" c:type="SexySpellEntry*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="language_is_active"
              c:identifier="sexy_spell_entry_language_is_active">
        <doc xml:space="preserve">Determine if a given language is currently active.</doc>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve">%TRUE if the language is active.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="entry" transfer-ownership="none">
            <doc xml:space="preserve">A #SexySpellEntry.</doc>
            <type name="SpellEntry" c:type="const SexySpellEntry*"/>
          </instance-parameter>
          <parameter name="lang" transfer-ownership="none">
            <doc xml:space="preserve">The language to use, in a form enchant understands.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_active_languages"
              c:identifier="sexy_spell_entry_set_active_languages"
              throws="1">
        <doc xml:space="preserve">Activate spell checking for only the languages specified.</doc>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve">%FALSE if there was an error.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="entry" transfer-ownership="none">
            <doc xml:space="preserve">A #SexySpellEntry</doc>
            <type name="SpellEntry" c:type="SexySpellEntry*"/>
          </instance-parameter>
          <parameter name="langs" transfer-ownership="none">
            <doc xml:space="preserve">A list of language codes to activate,
        in a form Enchant understands. Typically either a two letter
        language code or a locale code in the form xx_XX.</doc>
            <type name="GLib.SList" c:type="GSList*">
              <type name="utf8"/>
            </type>
          </parameter>
        </parameters>
      </method>
      <method name="set_checked" c:identifier="sexy_spell_entry_set_checked">
        <doc xml:space="preserve">Sets whether the entry has spell-checking enabled.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="entry" transfer-ownership="none">
            <doc xml:space="preserve">A #SexySpellEntry.</doc>
            <type name="SpellEntry" c:type="SexySpellEntry*"/>
          </instance-parameter>
          <parameter name="checked" transfer-ownership="none">
            <doc xml:space="preserve">Whether to enable spell-checking</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <property name="checked"
                version="1.0"
                writable="1"
                transfer-ownership="none">
        <doc xml:space="preserve">If checking of spelling is enabled.</doc>
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <field name="parent_object">
        <type name="Gtk.Entry" c:type="GtkEntry"/>
      </field>
      <field name="priv">
        <type name="SpellEntryPriv" c:type="SexySpellEntryPriv*"/>
      </field>
      <glib:signal name="word-check" when="last">
        <doc xml:space="preserve">The ::word-check signal is emitted whenever the entry has to check
a word.  This allows the application to mark words as correct even
if none of the active dictionaries contain it, such as nicknames in
a chat client.</doc>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve">%FALSE to indicate that the word should be marked as
correct.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="word" transfer-ownership="none">
            <doc xml:space="preserve">The word to check.</doc>
            <type name="utf8" c:type="gchar*"/>
          </parameter>
        </parameters>
      </glib:signal>
    </class>
    <record name="SpellEntryClass"
            c:type="SexySpellEntryClass"
            glib:is-gtype-struct-for="SpellEntry">
      <field name="parent_class">
        <type name="Gtk.EntryClass" c:type="GtkEntryClass"/>
      </field>
      <field name="word_check">
        <callback name="word_check">
          <return-value transfer-ownership="none">
            <type name="gboolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="entry" transfer-ownership="none">
              <type name="SpellEntry" c:type="SexySpellEntry*"/>
            </parameter>
            <parameter name="word" transfer-ownership="none">
              <type name="utf8" c:type="const gchar*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="_gtk_reserved1" introspectable="0">
        <callback name="_gtk_reserved1">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_gtk_reserved2" introspectable="0">
        <callback name="_gtk_reserved2">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_gtk_reserved3" introspectable="0">
        <callback name="_gtk_reserved3">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
    </record>
    <record name="SpellEntryPriv" c:type="SexySpellEntryPriv" disguised="1">
    </record>
    <enumeration name="SpellError"
                 c:type="SexySpellError"
                 glib:error-domain="sexy-spell-error-quark">
      <doc xml:space="preserve">Type of error.</doc>
      <member name="spell_error_backend"
              value="0"
              c:identifier="SEXY_SPELL_ERROR_BACKEND">
        <doc xml:space="preserve">Error occured in enchant when calling
                           sexy_spell_entry_activate_language() or
                           sexy_spell_entry_set_active_languages().</doc>
      </member>
    </enumeration>
    <function name="spell_error_quark" c:identifier="sexy_spell_error_quark">
      <return-value transfer-ownership="none">
        <type name="GLib.Quark" c:type="GQuark"/>
      </return-value>
    </function>
  </namespace>
</repository>
