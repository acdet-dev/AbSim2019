<?xml version="1.0"?>
<!-- This file was automatically generated from C sources - DO NOT EDIT!
To affect the contents of this file, edit the original C definitions,
and/or use gtk-doc annotations.  -->
<repository version="1.2"
            xmlns="http://www.gtk.org/introspection/core/1.0"
            xmlns:c="http://www.gtk.org/introspection/c/1.0"
            xmlns:glib="http://www.gtk.org/introspection/glib/1.0">
  <include name="GObject" version="2.0"/>
  <include name="libxml2" version="2.0"/>
  <namespace name="Gepub"
             version="0.1"
             shared-library="libgepub-0.dll"
             c:identifier-prefixes="Gepub"
             c:symbol-prefixes="gepub">
    <class name="Archive"
           c:symbol-prefix="archive"
           c:type="GepubArchive"
           parent="GObject.Object"
           glib:type-name="GepubArchive"
           glib:get-type="gepub_archive_get_type"
           glib:type-struct="ArchiveClass">
      <constructor name="new" c:identifier="gepub_archive_new">
        <return-value transfer-ownership="full">
          <type name="Archive" c:type="GepubArchive*"/>
        </return-value>
        <parameters>
          <parameter name="path" transfer-ownership="none">
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="get_root_file" c:identifier="gepub_archive_get_root_file">
        <return-value transfer-ownership="full">
          <type name="utf8" c:type="gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="archive" transfer-ownership="none">
            <type name="Archive" c:type="GepubArchive*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="list_files"
              c:identifier="gepub_archive_list_files"
              introspectable="0">
        <return-value>
          <type name="GLib.List" c:type="GList*">
            <type name="gpointer" c:type="gpointer"/>
          </type>
        </return-value>
        <parameters>
          <instance-parameter name="archive" transfer-ownership="none">
            <type name="Archive" c:type="GepubArchive*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="read_entry" c:identifier="gepub_archive_read_entry">
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="archive" transfer-ownership="none">
            <type name="Archive" c:type="GepubArchive*"/>
          </instance-parameter>
          <parameter name="path" transfer-ownership="none">
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="buffer" transfer-ownership="none">
            <type name="guint8" c:type="guchar**"/>
          </parameter>
          <parameter name="bufsize" transfer-ownership="none">
            <type name="gsize" c:type="gsize*"/>
          </parameter>
        </parameters>
      </method>
    </class>
    <record name="ArchiveClass"
            c:type="GepubArchiveClass"
            disguised="1"
            glib:is-gtype-struct-for="Archive">
    </record>
    <class name="Doc"
           c:symbol-prefix="doc"
           c:type="GepubDoc"
           parent="GObject.Object"
           glib:type-name="GepubDoc"
           glib:get-type="gepub_doc_get_type"
           glib:type-struct="DocClass">
      <constructor name="new" c:identifier="gepub_doc_new">
        <return-value transfer-ownership="full">
          <doc xml:space="preserve">the new GepubDoc created</doc>
          <type name="Doc" c:type="GepubDoc*"/>
        </return-value>
        <parameters>
          <parameter name="path" transfer-ownership="none">
            <doc xml:space="preserve">the epub doc path</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </constructor>
      <function name="free_text"
                c:identifier="gepub_doc_free_text"
                introspectable="0">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="tlist" transfer-ownership="none">
            <type name="GLib.List" c:type="GList*">
              <type name="gpointer" c:type="gpointer"/>
            </type>
          </parameter>
        </parameters>
      </function>
      <method name="get_content" c:identifier="gepub_doc_get_content">
        <return-value transfer-ownership="none">
          <doc xml:space="preserve">the document content</doc>
          <type name="utf8" c:type="gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="doc" transfer-ownership="none">
            <doc xml:space="preserve">a #GepubDoc</doc>
            <type name="Doc" c:type="GepubDoc*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_current" c:identifier="gepub_doc_get_current">
        <return-value transfer-ownership="full">
          <doc xml:space="preserve">the current chapter data</doc>
          <type name="guint8" c:type="guchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="doc" transfer-ownership="none">
            <doc xml:space="preserve">a #GepubDoc</doc>
            <type name="Doc" c:type="GepubDoc*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_metadata" c:identifier="gepub_doc_get_metadata">
        <return-value transfer-ownership="full">
          <doc xml:space="preserve">metadata string</doc>
          <type name="utf8" c:type="gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="doc" transfer-ownership="none">
            <doc xml:space="preserve">a #GepubDoc</doc>
            <type name="Doc" c:type="GepubDoc*"/>
          </instance-parameter>
          <parameter name="mdata" transfer-ownership="none">
            <doc xml:space="preserve">a metadata name string, GEPUB_META_TILE for example</doc>
            <type name="utf8" c:type="gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_resource" c:identifier="gepub_doc_get_resource">
        <return-value transfer-ownership="full">
          <doc xml:space="preserve">the resource content</doc>
          <type name="guint8" c:type="guchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="doc" transfer-ownership="none">
            <doc xml:space="preserve">a #GepubDoc</doc>
            <type name="Doc" c:type="GepubDoc*"/>
          </instance-parameter>
          <parameter name="id" transfer-ownership="none">
            <doc xml:space="preserve">the resource id</doc>
            <type name="utf8" c:type="gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_resource_mime"
              c:identifier="gepub_doc_get_resource_mime">
        <return-value transfer-ownership="none">
          <doc xml:space="preserve">the resource mime</doc>
          <type name="guint8" c:type="guchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="doc" transfer-ownership="none">
            <doc xml:space="preserve">a #GepubDoc</doc>
            <type name="Doc" c:type="GepubDoc*"/>
          </instance-parameter>
          <parameter name="v" transfer-ownership="none">
            <doc xml:space="preserve">the resource path</doc>
            <type name="utf8" c:type="gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_resource_v" c:identifier="gepub_doc_get_resource_v">
        <return-value transfer-ownership="full">
          <doc xml:space="preserve">the resource content</doc>
          <type name="guint8" c:type="guchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="doc" transfer-ownership="none">
            <doc xml:space="preserve">a #GepubDoc</doc>
            <type name="Doc" c:type="GepubDoc*"/>
          </instance-parameter>
          <parameter name="v" transfer-ownership="none">
            <doc xml:space="preserve">the resource path</doc>
            <type name="utf8" c:type="gchar*"/>
          </parameter>
          <parameter name="bufsize"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <doc xml:space="preserve">location to store length in bytes of the contents</doc>
            <type name="gsize" c:type="gsize*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_resources" c:identifier="gepub_doc_get_resources">
        <return-value transfer-ownership="none">
          <doc xml:space="preserve">doc resource table</doc>
          <type name="GLib.HashTable" c:type="GHashTable*">
            <type name="utf8"/>
            <type name="Resource"/>
          </type>
        </return-value>
        <parameters>
          <instance-parameter name="doc" transfer-ownership="none">
            <doc xml:space="preserve">a #GepubDoc</doc>
            <type name="Doc" c:type="GepubDoc*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_spine" c:identifier="gepub_doc_get_spine">
        <return-value transfer-ownership="none">
          <doc xml:space="preserve">the document spine</doc>
          <type name="GLib.List" c:type="GList*">
            <type name="utf8"/>
          </type>
        </return-value>
        <parameters>
          <instance-parameter name="doc" transfer-ownership="none">
            <doc xml:space="preserve">a #GepubDoc</doc>
            <type name="Doc" c:type="GepubDoc*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_text" c:identifier="gepub_doc_get_text">
        <return-value transfer-ownership="full">
          <doc xml:space="preserve">the list of text in the current chapter, Free with gepub_doc_free_text().</doc>
          <type name="GLib.List" c:type="GList*">
            <type name="TextChunk"/>
          </type>
        </return-value>
        <parameters>
          <instance-parameter name="doc" transfer-ownership="none">
            <doc xml:space="preserve">a #GepubDoc</doc>
            <type name="Doc" c:type="GepubDoc*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="go_next" c:identifier="gepub_doc_go_next">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="doc" transfer-ownership="none">
            <doc xml:space="preserve">a #GepubDoc</doc>
            <type name="Doc" c:type="GepubDoc*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="go_prev" c:identifier="gepub_doc_go_prev">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="doc" transfer-ownership="none">
            <type name="Doc" c:type="GepubDoc*"/>
          </instance-parameter>
        </parameters>
      </method>
    </class>
    <record name="DocClass"
            c:type="GepubDocClass"
            disguised="1"
            glib:is-gtype-struct-for="Doc">
    </record>
    <constant name="META_AUTHOR" value="creator" c:type="GEPUB_META_AUTHOR">
      <doc xml:space="preserve">The book author.</doc>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="META_DESC" value="description" c:type="GEPUB_META_DESC">
      <doc xml:space="preserve">The book description.</doc>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="META_ID" value="identifier" c:type="GEPUB_META_ID">
      <doc xml:space="preserve">The book id.</doc>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="META_LANG" value="language" c:type="GEPUB_META_LANG">
      <doc xml:space="preserve">The book lang.</doc>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="META_TITLE" value="title" c:type="GEPUB_META_TITLE">
      <doc xml:space="preserve">The book title.</doc>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <record name="Resource" c:type="GepubResource">
      <field name="mime" writable="1">
        <type name="utf8" c:type="gchar*"/>
      </field>
      <field name="uri" writable="1">
        <type name="utf8" c:type="gchar*"/>
      </field>
    </record>
    <class name="TextChunk"
           c:symbol-prefix="text_chunk"
           c:type="GepubTextChunk"
           parent="GObject.Object"
           glib:type-name="GepubTextChunk"
           glib:get-type="gepub_text_chunk_get_type"
           glib:type-struct="TextChunkClass">
      <constructor name="new" c:identifier="gepub_text_chunk_new">
        <return-value transfer-ownership="none">
          <doc xml:space="preserve">the chunk text</doc>
          <type name="TextChunk" c:type="GepubTextChunk*"/>
        </return-value>
        <parameters>
          <parameter name="type" transfer-ownership="none">
            <doc xml:space="preserve">a #GepubTextChunkType, the chunk type</doc>
            <type name="TextChunkType" c:type="GepubTextChunkType"/>
          </parameter>
          <parameter name="path" transfer-ownership="none">
            <type name="guint8" c:type="const guchar*"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="text" c:identifier="gepub_text_chunk_text">
        <return-value transfer-ownership="none">
          <doc xml:space="preserve">the chunk text</doc>
          <type name="utf8" c:type="gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="chunk" transfer-ownership="none">
            <doc xml:space="preserve">a #GepubTextChunk</doc>
            <type name="TextChunk" c:type="GepubTextChunk*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="type" c:identifier="gepub_text_chunk_type">
        <return-value transfer-ownership="none">
          <doc xml:space="preserve">the chunk type</doc>
          <type name="TextChunkType" c:type="GepubTextChunkType"/>
        </return-value>
        <parameters>
          <instance-parameter name="chunk" transfer-ownership="none">
            <doc xml:space="preserve">a #GepubTextChunk</doc>
            <type name="TextChunk" c:type="GepubTextChunk*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="type_str" c:identifier="gepub_text_chunk_type_str">
        <return-value transfer-ownership="none">
          <doc xml:space="preserve">the chunk text</doc>
          <type name="utf8" c:type="gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="chunk" transfer-ownership="none">
            <doc xml:space="preserve">a #GepubTextChunk</doc>
            <type name="TextChunk" c:type="GepubTextChunk*"/>
          </instance-parameter>
        </parameters>
      </method>
      <field name="parent">
        <type name="GObject.Object" c:type="GObject"/>
      </field>
      <field name="type">
        <type name="TextChunkType" c:type="GepubTextChunkType"/>
      </field>
      <field name="text">
        <type name="guint8" c:type="guchar*"/>
      </field>
    </class>
    <record name="TextChunkClass"
            c:type="GepubTextChunkClass"
            glib:is-gtype-struct-for="TextChunk">
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
    </record>
    <enumeration name="TextChunkType" c:type="GepubTextChunkType">
      <member name="epubtextheader" value="0" c:identifier="GEPUBTextHeader">
      </member>
      <member name="epubtextbold" value="1" c:identifier="GEPUBTextBold">
      </member>
      <member name="epubtextitalic" value="2" c:identifier="GEPUBTextItalic">
      </member>
      <member name="epubtextnormal" value="3" c:identifier="GEPUBTextNormal">
      </member>
    </enumeration>
    <function name="utils_get_element_by_tag"
              c:identifier="gepub_utils_get_element_by_tag"
              introspectable="0">
      <return-value>
        <type name="libxml2.Node" c:type="xmlNode*"/>
      </return-value>
      <parameters>
        <parameter name="node" transfer-ownership="none">
          <type name="libxml2.Node" c:type="xmlNode*"/>
        </parameter>
        <parameter name="name" transfer-ownership="none">
          <type name="utf8" c:type="gchar*"/>
        </parameter>
      </parameters>
    </function>
    <function name="utils_get_text_elements"
              c:identifier="gepub_utils_get_text_elements"
              introspectable="0">
      <return-value>
        <type name="GLib.List" c:type="GList*">
          <type name="gpointer" c:type="gpointer"/>
        </type>
      </return-value>
      <parameters>
        <parameter name="node" transfer-ownership="none">
          <type name="libxml2.Node" c:type="xmlNode*"/>
        </parameter>
      </parameters>
    </function>
  </namespace>
</repository>
