<?xml version="1.0"?>
<!-- This file was automatically generated from C sources - DO NOT EDIT!
To affect the contents of this file, edit the original C definitions,
and/or use gtk-doc annotations.  -->
<repository version="1.2"
            xmlns="http://www.gtk.org/introspection/core/1.0"
            xmlns:c="http://www.gtk.org/introspection/c/1.0"
            xmlns:glib="http://www.gtk.org/introspection/glib/1.0">
  <include name="GObject" version="2.0"/>
  <include name="Gio" version="2.0"/>
  <package name="skeltrack-0.1"/>
  <c:include name="skeltrack.h"/>
  <namespace name="Skeltrack"
             version="0.1"
             shared-library="libskeltrack-0.1-0.dll"
             c:identifier-prefixes="Skeltrack"
             c:symbol-prefixes="skeltrack">
    <alias name="JointList" c:type="SkeltrackJointList">
      <type name="gpointer" c:type="gpointer"/>
    </alias>
    <constant name="JOINT_MAX_JOINTS"
              value="7"
              c:type="SKELTRACK_JOINT_MAX_JOINTS">
      <type name="gint" c:type="gint"/>
    </constant>
    <record name="Joint"
            c:type="SkeltrackJoint"
            glib:type-name="SkeltrackJoint"
            glib:get-type="skeltrack_joint_get_type"
            c:symbol-prefix="joint">
      <field name="id" writable="1">
        <doc xml:space="preserve">The id of the joint</doc>
        <type name="JointId" c:type="SkeltrackJointId"/>
      </field>
      <field name="x" writable="1">
        <doc xml:space="preserve">The x coordinate of the joint in the space (in mm)</doc>
        <type name="gint" c:type="gint"/>
      </field>
      <field name="y" writable="1">
        <doc xml:space="preserve">The y coordinate of the joint in the space (in mm)</doc>
        <type name="gint" c:type="gint"/>
      </field>
      <field name="z" writable="1">
        <doc xml:space="preserve">The z coordinate of the joint in the space (in mm)</doc>
        <type name="gint" c:type="gint"/>
      </field>
      <field name="screen_x" writable="1">
        <doc xml:space="preserve">The x coordinate of the joint in the screen (in pixels)</doc>
        <type name="gint" c:type="gint"/>
      </field>
      <field name="screen_y" writable="1">
        <doc xml:space="preserve">The y coordinate of the joint in the screen (in pixels)</doc>
        <type name="gint" c:type="gint"/>
      </field>
      <method name="copy" c:identifier="skeltrack_joint_copy">
        <doc xml:space="preserve">Makes an exact copy of a #SkeltrackJoint object.</doc>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve">A newly created #SkeltrackJoint. Use
skeltrack_joint_free() to free it.</doc>
          <type name="gpointer" c:type="gpointer"/>
        </return-value>
        <parameters>
          <instance-parameter name="joint" transfer-ownership="none">
            <doc xml:space="preserve">The #SkeltrackJoint to copy</doc>
            <type name="Joint" c:type="SkeltrackJoint*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="free" c:identifier="skeltrack_joint_free">
        <doc xml:space="preserve">Frees a #SkeltrackJoint object.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="joint" transfer-ownership="none">
            <doc xml:space="preserve">The #SkeltrackJoint to free</doc>
            <type name="Joint" c:type="SkeltrackJoint*"/>
          </instance-parameter>
        </parameters>
      </method>
      <function name="list_free" c:identifier="skeltrack_joint_list_free">
        <doc xml:space="preserve">Frees a #SkeltrackJointList object and each #SkeltrackJoint
in it.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="list" transfer-ownership="none">
            <doc xml:space="preserve">The #SkeltrackJointList to free</doc>
            <type name="JointList" c:type="SkeltrackJointList"/>
          </parameter>
        </parameters>
      </function>
      <function name="list_get_joint"
                c:identifier="skeltrack_joint_list_get_joint">
        <doc xml:space="preserve">Gets a joint from a list of skeleton joints. The joint
returned needs to be freed by using skeltrack_joint_free() or,
alternatively, the whole list and its joints can be freed by using
skeltrack_joint_list_free().</doc>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve">The #SkeltrackJoint that corresponds to
the given @id or %NULL if that joint wasn't found.</doc>
          <type name="Joint" c:type="SkeltrackJoint*"/>
        </return-value>
        <parameters>
          <parameter name="list" transfer-ownership="none">
            <doc xml:space="preserve">The #SkeltrackJointList</doc>
            <type name="JointList" c:type="SkeltrackJointList"/>
          </parameter>
          <parameter name="id" transfer-ownership="none">
            <doc xml:space="preserve">The #SkeltrackJointId of the joint to get</doc>
            <type name="JointId" c:type="SkeltrackJointId"/>
          </parameter>
        </parameters>
      </function>
      <function name="list_new" c:identifier="skeltrack_joint_list_new">
        <doc xml:space="preserve">Created a new list of #SkeltrackJointsList with its joints as #NULL.
When it is no longer needed, free it with skeltrack_joint_list_free().</doc>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve">A newly allocated #SkeltrackJointList</doc>
          <type name="JointList" c:type="SkeltrackJointList"/>
        </return-value>
      </function>
    </record>
    <enumeration name="JointId" c:type="SkeltrackJointId">
      <doc xml:space="preserve">Available joint ids.</doc>
      <member name="head" value="0" c:identifier="SKELTRACK_JOINT_ID_HEAD">
        <doc xml:space="preserve">The head</doc>
      </member>
      <member name="left_shoulder"
              value="1"
              c:identifier="SKELTRACK_JOINT_ID_LEFT_SHOULDER">
        <doc xml:space="preserve">The left shoulder</doc>
      </member>
      <member name="right_shoulder"
              value="2"
              c:identifier="SKELTRACK_JOINT_ID_RIGHT_SHOULDER">
        <doc xml:space="preserve">The right shoulder</doc>
      </member>
      <member name="left_elbow"
              value="3"
              c:identifier="SKELTRACK_JOINT_ID_LEFT_ELBOW">
        <doc xml:space="preserve">The left elbow</doc>
      </member>
      <member name="right_elbow"
              value="4"
              c:identifier="SKELTRACK_JOINT_ID_RIGHT_ELBOW">
        <doc xml:space="preserve">The right elbow</doc>
      </member>
      <member name="left_hand"
              value="5"
              c:identifier="SKELTRACK_JOINT_ID_LEFT_HAND">
        <doc xml:space="preserve">The left hand</doc>
      </member>
      <member name="right_hand"
              value="6"
              c:identifier="SKELTRACK_JOINT_ID_RIGHT_HAND">
        <doc xml:space="preserve">The right hand</doc>
      </member>
    </enumeration>
    <class name="Skeleton"
           c:symbol-prefix="skeleton"
           c:type="SkeltrackSkeleton"
           parent="GObject.Object"
           glib:type-name="SkeltrackSkeleton"
           glib:get-type="skeltrack_skeleton_get_type"
           glib:type-struct="SkeletonClass">
      <constructor name="new" c:identifier="skeltrack_skeleton_new">
        <doc xml:space="preserve">Constructs and returns a new #SkeltrackSkeleton instance.</doc>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve">The newly created #SkeltrackSkeleton.</doc>
          <type name="Skeleton" c:type="SkeltrackSkeleton*"/>
        </return-value>
      </constructor>
      <method name="get_focus_point"
              c:identifier="skeltrack_skeleton_get_focus_point">
        <doc xml:space="preserve">Gets the focus point which is the origin from where the tracking will
start. The coordinates will be in mm.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve">The #SkeltrackSkeleton</doc>
            <type name="Skeleton" c:type="SkeltrackSkeleton*"/>
          </instance-parameter>
          <parameter name="x" transfer-ownership="none">
            <doc xml:space="preserve">The x coordinate of the focus point.</doc>
            <type name="gint" c:type="gint*"/>
          </parameter>
          <parameter name="y" transfer-ownership="none">
            <doc xml:space="preserve">The y coordinate of the focus point.</doc>
            <type name="gint" c:type="gint*"/>
          </parameter>
          <parameter name="z" transfer-ownership="none">
            <doc xml:space="preserve">The z coordinate of the focus point.</doc>
            <type name="gint" c:type="gint*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_focus_point"
              c:identifier="skeltrack_skeleton_set_focus_point">
        <doc xml:space="preserve">Sets the focus point which is the origin from where the tracking will
start. The coordinates should be in mm.

If this method is not called the default values are @x = 0, @y = 0,
@z = 1000, that is, in the center of the screen and at 1m from the
camera.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve">The #SkeltrackSkeleton</doc>
            <type name="Skeleton" c:type="SkeltrackSkeleton*"/>
          </instance-parameter>
          <parameter name="x" transfer-ownership="none">
            <doc xml:space="preserve">The x coordinate of the focus point.</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="y" transfer-ownership="none">
            <doc xml:space="preserve">The y coordinate of the focus point.</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="z" transfer-ownership="none">
            <doc xml:space="preserve">The z coordinate of the focus point.</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
        </parameters>
      </method>
      <method name="track_joints"
              c:identifier="skeltrack_skeleton_track_joints">
        <doc xml:space="preserve">Tracks the skeleton's joints.

It uses the depth information contained in the given @buffer and tries to
track the skeleton joints. The @buffer's depth values should be in mm.
Use skeltrack_skeleton_track_joints_finish() to get a list of the joints
found.

If this method is called while a previous attempt of tracking the joints
is still running, a %G_IO_ERROR_PENDING error occurs.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve">The #SkeltrackSkeleton</doc>
            <type name="Skeleton" c:type="SkeltrackSkeleton*"/>
          </instance-parameter>
          <parameter name="buffer" transfer-ownership="none">
            <doc xml:space="preserve">The buffer containing the depth information, from which
all the information will be retrieved.</doc>
            <type name="guint16" c:type="guint16*"/>
          </parameter>
          <parameter name="width" transfer-ownership="none">
            <doc xml:space="preserve">The width of the @buffer</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
          <parameter name="height" transfer-ownership="none">
            <doc xml:space="preserve">The height of the @buffer</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve">A cancellable object, or %NULL (currently
 unused)</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     scope="async"
                     closure="5">
            <doc xml:space="preserve">The function to call when the it is finished
tracking the joints</doc>
            <type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve">An arbitrary user data to pass in @callback,
or %NULL</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="track_joints_finish"
              c:identifier="skeltrack_skeleton_track_joints_finish"
              throws="1">
        <doc xml:space="preserve">Gets the list of joints that were retrieved by a
skeltrack_skeleton_track_joints() operation.

Use skeltrack_joint_list_get_joint() with #SkeltrackJointId
to get the respective joints from the list.
Joints that could not be found will appear as %NULL in the list.

The list should be freed using skeltrack_joint_list_free().</doc>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve">The #SkeltrackJointList with the joints found.</doc>
          <type name="JointList" c:type="SkeltrackJointList"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve">The #SkeltrackSkeleton</doc>
            <type name="Skeleton" c:type="SkeltrackSkeleton*"/>
          </instance-parameter>
          <parameter name="result" transfer-ownership="none">
            <doc xml:space="preserve">The #GAsyncResult provided in the callback</doc>
            <type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </method>
      <method name="track_joints_sync"
              c:identifier="skeltrack_skeleton_track_joints_sync"
              throws="1">
        <doc xml:space="preserve">Tracks the skeleton's joints synchronously.

Does the same as skeltrack_skeleton_track_joints() but synchronously
and returns the list of joints found.
Ideal for off-line skeleton tracking.

If this method is called while a previous attempt of asynchronously
tracking the joints is still running, a %G_IO_ERROR_PENDING error occurs.

The joints list should be freed using skeltrack_joint_list_free().</doc>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve">The #SkeltrackJointList with the joints found.</doc>
          <type name="JointList" c:type="SkeltrackJointList"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve">The #SkeltrackSkeleton</doc>
            <type name="Skeleton" c:type="SkeltrackSkeleton*"/>
          </instance-parameter>
          <parameter name="buffer" transfer-ownership="none">
            <doc xml:space="preserve">The buffer containing the depth information, from which
all the information will be retrieved.</doc>
            <type name="guint16" c:type="guint16*"/>
          </parameter>
          <parameter name="width" transfer-ownership="none">
            <doc xml:space="preserve">The width of the @buffer</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
          <parameter name="height" transfer-ownership="none">
            <doc xml:space="preserve">The height of the @buffer</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve">A cancellable object, or %NULL (currently
 unused)</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </method>
      <property name="dimension-reduction"
                writable="1"
                transfer-ownership="none">
        <doc xml:space="preserve">The value by which the dimension of the buffer was reduced
(in case it was).</doc>
        <type name="guint" c:type="guint"/>
      </property>
      <property name="enable-smoothing" writable="1" transfer-ownership="none">
        <doc xml:space="preserve">Whether smoothing the joints should be applied or not.</doc>
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="extrema-sphere-radius"
                writable="1"
                transfer-ownership="none">
        <doc xml:space="preserve">The radius of the sphere around the extremas (in mm).

Points inside this sphere are considered for calculating the average position
of the extrema. If the value is 0, no averaging is done.</doc>
        <type name="guint" c:type="guint"/>
      </property>
      <property name="graph-distance-threshold"
                writable="1"
                transfer-ownership="none">
        <doc xml:space="preserve">The value (in mm) for the distance threshold between each node and its
neighbors. This means that a node in the graph will only be connected
to another if they aren't farther apart then this value.</doc>
        <type name="guint" c:type="guint"/>
      </property>
      <property name="graph-minimum-number-nodes"
                writable="1"
                transfer-ownership="none">
        <doc xml:space="preserve">The minimum number of nodes each of the graph's components
should have (when it is not fully connected).</doc>
        <type name="guint" c:type="guint"/>
      </property>
      <property name="hands-minimum-distance"
                writable="1"
                transfer-ownership="none">
        <doc xml:space="preserve">The minimum distance (in mm) that each hand should be from its
respective shoulder.</doc>
        <type name="guint" c:type="guint"/>
      </property>
      <property name="joints-persistency"
                writable="1"
                transfer-ownership="none">
        <doc xml:space="preserve">The number of times that a joint can be null until its previous
value is discarded. For example, if this property is 3, the last value for
a joint will keep being used until the new value for this joint is null for
3 consecutive times.</doc>
        <type name="guint" c:type="guint"/>
      </property>
      <property name="shoulders-arc-length"
                writable="1"
                transfer-ownership="none">
        <doc xml:space="preserve">The length (in mm) of the arc where the shoulders will be searched.
This length is used together with the
SkeltrackSkeleton::shoulders-arc-start-point to determine the arc
where the shoulders' points will be looked for.</doc>
        <type name="guint" c:type="guint"/>
      </property>
      <property name="shoulders-arc-start-point"
                writable="1"
                transfer-ownership="none">
        <doc xml:space="preserve">The starting point (in mm) of the arc (from the bottom of the
shoulders' circumference) where the shoulders will be searched for.
This point is used together with the
SkeltrackSkeleton::shoulders-arc-length to determine the arc
where the shoulders' points will be looked for.</doc>
        <type name="guint" c:type="guint"/>
      </property>
      <property name="shoulders-circumference-radius"
                writable="1"
                transfer-ownership="none">
        <doc xml:space="preserve">The radius of the circumference (in mm) from the head with which
to look for the shoulders.</doc>
        <type name="guint" c:type="guint"/>
      </property>
      <property name="shoulders-search-step"
                writable="1"
                transfer-ownership="none">
        <doc xml:space="preserve">The step considered for sampling the shoulders' circumference
when searching for the shoulders.</doc>
        <type name="gfloat" c:type="gfloat"/>
      </property>
      <property name="smoothing-factor" writable="1" transfer-ownership="none">
        <doc xml:space="preserve">The factor by which the joints should be smoothed. This refers to
Holt's Double Exponential Smoothing and determines how the current and
previous data and trend will be used. A value closer to 0 will produce smoother
results but increases latency.</doc>
        <type name="gfloat" c:type="gfloat"/>
      </property>
      <property name="torso-minimum-number-nodes"
                writable="1"
                transfer-ownership="none">
        <doc xml:space="preserve">Minimum number of nodes for a component to be considered torso.</doc>
        <type name="gfloat" c:type="gfloat"/>
      </property>
      <field name="parent">
        <type name="GObject.Object" c:type="GObject"/>
      </field>
      <field name="priv" readable="0" private="1">
        <type name="SkeletonPrivate" c:type="SkeltrackSkeletonPrivate*"/>
      </field>
    </class>
    <record name="SkeletonClass"
            c:type="SkeltrackSkeletonClass"
            glib:is-gtype-struct-for="Skeleton">
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
    </record>
    <record name="SkeletonPrivate"
            c:type="SkeltrackSkeletonPrivate"
            disguised="1">
    </record>
    <function name="joint_list_free"
              c:identifier="skeltrack_joint_list_free"
              moved-to="Joint.list_free">
      <doc xml:space="preserve">Frees a #SkeltrackJointList object and each #SkeltrackJoint
in it.</doc>
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="list" transfer-ownership="none">
          <doc xml:space="preserve">The #SkeltrackJointList to free</doc>
          <type name="JointList" c:type="SkeltrackJointList"/>
        </parameter>
      </parameters>
    </function>
    <function name="joint_list_get_joint"
              c:identifier="skeltrack_joint_list_get_joint"
              moved-to="Joint.list_get_joint">
      <doc xml:space="preserve">Gets a joint from a list of skeleton joints. The joint
returned needs to be freed by using skeltrack_joint_free() or,
alternatively, the whole list and its joints can be freed by using
skeltrack_joint_list_free().</doc>
      <return-value transfer-ownership="full">
        <doc xml:space="preserve">The #SkeltrackJoint that corresponds to
the given @id or %NULL if that joint wasn't found.</doc>
        <type name="Joint" c:type="SkeltrackJoint*"/>
      </return-value>
      <parameters>
        <parameter name="list" transfer-ownership="none">
          <doc xml:space="preserve">The #SkeltrackJointList</doc>
          <type name="JointList" c:type="SkeltrackJointList"/>
        </parameter>
        <parameter name="id" transfer-ownership="none">
          <doc xml:space="preserve">The #SkeltrackJointId of the joint to get</doc>
          <type name="JointId" c:type="SkeltrackJointId"/>
        </parameter>
      </parameters>
    </function>
    <function name="joint_list_new"
              c:identifier="skeltrack_joint_list_new"
              moved-to="Joint.list_new">
      <doc xml:space="preserve">Created a new list of #SkeltrackJointsList with its joints as #NULL.
When it is no longer needed, free it with skeltrack_joint_list_free().</doc>
      <return-value transfer-ownership="full">
        <doc xml:space="preserve">A newly allocated #SkeltrackJointList</doc>
        <type name="JointList" c:type="SkeltrackJointList"/>
      </return-value>
    </function>
  </namespace>
</repository>
